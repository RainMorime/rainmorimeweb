/* MusicPlayer.module.scss */

// 唱片旋转动画
@keyframes spinRecord {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

// 抽屉把手播放指示波浪动画
@keyframes waveEffect {
  0%   { width: 30%; }
  50%  { width: 60%; } // 动画中间状态宽度
  100% { width: 30%; }
}

.playerContainer {
  position: fixed;
  left: 0;
  top: 35%;
  transform: translateY(-50%) translateX(-100%); // 默认收起在屏幕左侧
  width: 280px; // 播放器宽度
  background-color: rgba(var(--ark-dark-blue-rgb), 0.9); // 背景色，较高不透明度
  border: 1px solid var(--ark-border);
  border-left: none; // 左边框不显示 (因为贴近屏幕边缘)
  z-index: 20; // 确保在其他元素之上
  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1); // 抽屉展开/收起动画
  backdrop-filter: blur(4px); // 背景模糊效果
  color: var(--ark-text-secondary); // 默认文字颜色
  display: flex;
  flex-direction: column;
  font-family: 'Dosis', monospace; // 字体
  max-height: 90vh; // 限制最大高度，防止内容过长超出屏幕
  user-select: none; // 禁用用户选择文本，优化拖动体验
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.playerContainer.open {
  transform: translateY(-50%) translateX(0); // 展开状态，移入屏幕
}

// 抽屉把手样式
.handle { 
  position: absolute;
  right: -25px; // 定位到播放器右侧外部
  top: 0; 
  width: 25px;  // 把手宽度
  height: 100px; // 把手默认高度
  background-color: rgba(var(--ark-border-rgb), 0.7);
  border: 1px solid var(--ark-border);
  border-left: none;
  cursor: pointer;
  display: flex;
  flex-direction: column; 
  justify-content: center; 
  align-items: center;
  gap: 3.5px; // 内部元素间距
  transition: background-color 0.2s ease, height 0.4s ease-in-out; // 高度变化动画
  overflow: hidden; // 隐藏溢出内容 (例如展开时显示的文字)
  padding: 5px 0; // 上下内边距
}

// 抽屉把手展开状态 (收起且播放时)
.handle.expanded {
  height: 220px; // 增加高度以容纳动画条和竖排文字
  padding: 10px 0;
  justify-content: flex-start; // 内容从顶部开始排列
}

.handle:hover { background-color: rgba(var(--ark-border-rgb), 0.9); } // 悬停时背景变深

// 把手内部的动画线条 (单个)
.handleBar {
  width: 30%; // 默认宽度
  height: 2px;
  background-color: #888888;
  opacity: 0.7;
  transition: width 0.3s ease-in-out, opacity 0.2s ease-out; // 宽度和透明度变化动画
  transform-origin: center; // 宽度变化时从中心扩展/收缩
}

// 把手内动画线条的容器
.handleBarsContainer {
  width: 100%;
  height: 45px; // 固定高度，确保线条有足够空间
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 3.5px; 
  flex-shrink: 0; // 防止被父容器压缩
}

// 播放时，把手内的动画线条应用 waveEffect 动画
.handle.playing .handleBar {
  animation: waveEffect 0.8s ease-in-out infinite; // 应用波浪动画
}

// 为7个动画线条设置不同的随机动画延迟，形成交错效果
.handle.playing .handleBar:nth-child(1) { animation-delay: 0.2s; }
.handle.playing .handleBar:nth-child(2) { animation-delay: 0.7s; }
.handle.playing .handleBar:nth-child(3) { animation-delay: 0.4s; }
.handle.playing .handleBar:nth-child(4) { animation-delay: 0.9s; }
.handle.playing .handleBar:nth-child(5) { animation-delay: 0.1s; }
.handle.playing .handleBar:nth-child(6) { animation-delay: 1.1s; }
.handle.playing .handleBar:nth-child(7) { animation-delay: 0.6s; }

// 抽屉把手展开时显示的歌曲信息容器
.handleTrackInfo {
  display: flex;
  flex-direction: column;
  justify-content: flex-start; 
  align-items: center; 
  width: 100%;
  gap: 8px; // 元素间垂直间距
  margin-top: 15px; // 与上方动画线条的间距
  padding: 0 2px; // 左右留白
}

// 抽屉把手展开时显示的竖排歌曲标题文字
.handleTrackTitle {
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #888888;
  font-size: 0.75rem;
  line-height: 1.1;
  font-family: 'Times New Roman', Times, serif; // 特殊字体
}

// 竖排文字中的单个字符项
.charItem {
  display: block;
  text-align: center;
}

// 黑胶唱片拖动切换机制的容器
.vinylMechanismContainer {
  width: 100%;
  padding: 20px 10px; // 上下内边距调整
  position: relative; // 用于定位唱臂
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0; // 防止被父容器压缩
  overflow: hidden; // 隐藏拖动时移出边界的唱片
  height: 200px; // 固定高度
  cursor: grab; // 默认光标为抓取手势

  &:active {
    cursor: grabbing; // 拖动时光标变为抓紧手势
  }
}

// 唱盘 (固定部分，唱片在其上旋转和切换)
.vinylPlatter {
  width: 160px; // 唱盘直径
  height: 160px;
  margin-left: -32px; // 位置调整，使其更居中
  border: 1px solid var(--ark-border); // 边框
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative; // 用于定位内部的唱片
  overflow: visible; // 唱盘本身不裁剪，由父容器 vinylMechanismContainer 裁剪
}

// 单个黑胶唱片样式
.vinylRecord {
  width: 150px; // 唱片直径 (比唱盘略小)
  height: 150px;
  background-color: transparent;
  border: 2px solid var(--ark-border); // 边框颜色
  border-radius: 50%;
  position: absolute; // 绝对定位，以便实现叠加和独立位移
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.3s ease-out; // 松开拖动时的回弹/切换动画
  z-index: 1; // 当前播放的唱片在最上层
  pointer-events: none; // 唱片本身不捕获鼠标事件，由父容器处理拖动
}

// 即将通过拖动进入的唱片样式
.incomingVinylRecord {
  z-index: 0; // 在当前唱片下方
  opacity: 0; // 默认通过透明度隐藏 (JS 中会根据拖动状态调整)
  pointer-events: none;
  // 过渡效果在 JS 中根据 isDragging 状态动态添加/移除
}

// 唱片旋转动画类
.recordSpinning {
  animation: spinRecord 3s linear infinite;
}

// 唱片中心标签样式 (包含扫描线效果)
.vinylLabel {
  width: 50px;
  height: 50px;
  background: transparent;
  border: 1px solid var(--ark-border);
  border-radius: 50%;
  position: relative;
  overflow: hidden; // 用于裁剪扫描线伪元素

  // 环形绿色扫描线效果
  &::before {
    content: '';
    position: absolute;
    top: 0; left: 0; width: 100%; height: 100%;
    background:
      repeating-linear-gradient( // 扫描线条纹
        to bottom,
        transparent 0px,
        transparent 2px,
        rgba(0,0,0,0.15) 2px,
        rgba(0,0,0,0.15) 4px
      ),
      var(--ark-highlight-green); // 绿色底色
    opacity: 0.7;
    border-radius: 50%;
    -webkit-mask-image: radial-gradient(circle, transparent 0 18%, #000 19% 100%); // 环形遮罩
    mask-image: radial-gradient(circle, transparent 0 18%, #000 19% 100%);
    animation: scanMove 8s linear infinite; // 扫描线滚动动画
    pointer-events: none;
  }

  // 中心小透明圆 (用于覆盖扫描线中心)
  &::after {
    content: '';
    position: absolute;
    top: 50%; left: 50%;
    width: 16px; height: 16px;
    transform: translate(-50%, -50%);
    background: transparent;
    border-radius: 50%;
    box-shadow: 0 0 0 999px rgba(0,0,0,0.0); // CSS Hack 保证中心透明
    z-index: 2;
  }
}

// 唱臂整体的容器 (用于定位和旋转)
.tonearmAssembly {
  position: absolute;
  right: 58px; // 根据唱盘位置和唱臂尺寸精确计算的右侧定位
  bottom: 185px; // 精确计算的底部定位
  width: 1px;  // 容器本身尺寸不重要，作为旋转中心
  height: 1px;
  transform-origin: top center; // 旋转中心点 (容器的顶部中心)
  transition: transform 0.4s ease-in-out; // 唱臂放下/抬起动画
}

// 唱臂播放时 (放下到唱片上) 的旋转状态
.tonearmAssembly.tonearmPlaying {
  transform: rotate(20deg); // 旋转角度
}

// 唱臂的点击热区 (用于触发播放/暂停)
.tonearmHitbox {
  position: absolute;
  left: -10px; // 相对于 tonearmAssembly 定位
  top: -10px;
  width: 26px; 
  height: 165px; 
  background-color: transparent; // 透明，仅作为热区
  cursor: pointer;
  z-index: 6; // 确保在唱臂实体之上
}

// 唱臂实体样式
.tonearm {
  width: 6px; 
  height: 145px; 
  background-color: transparent;
  border: 1px solid #f6b2ff; // 默认边框颜色 (粉色)
  border-radius: 3px; 
  position: absolute;
  left: -3px; // 相对于 tonearmAssembly 定位 (使其中心对齐)
  top: 0;
  z-index: 5; 

  // 唱针头部分
  &::after {
    content: '';
    position: absolute;
    top: -4px; 
    left: 50%;
    transform: translateX(-50%);
    width: 8px;
    height: 8px;
    background-color: transparent;
    border: 1px solid #f6b2ff; 
    border-radius: 2px; 
  }
  
  // 唱臂底座 (旋转轴心外观)
  &::before {
    content: '';
    position: absolute;
    top: -10px; 
    left: 50%;
    transform: translateX(-50%);
    width: 16px;
    height: 16px;
    background-color: transparent;
    border: 1px solid #f6b2ff; 
    border-radius: 50%;
    z-index: -1; // 在唱臂实体之下
  }
}

// 低电量时唱臂样式 (边框、唱针、底座变为绿色)
.tonearmLowPower {
  border-color: var(--ark-highlight-green);
  &::after, &::before {
    border-color: var(--ark-highlight-green);
  }
}

// 播放器主要内容区域 (抽屉内部，包含歌曲信息、进度条等)
.playerContent {
  width: 100%;
  padding: 10px 15px 15px 15px; // 内边距
  display: flex;
  flex-direction: column;
  justify-content: space-between; 
  opacity: 0; // 默认隐藏 (抽屉收起时)
  transition: opacity 0.3s ease-in-out 0.2s; // 淡入动画 (延迟出现)
  flex-shrink: 0;
  border-top: 1px solid rgba(128, 128, 128, 0.3); // 顶部边框线
  margin-top: 10px; // 与上方唱片区域的间距
}

// 抽屉展开时，内容区域可见
.playerContainer.open .playerContent {
  opacity: 1; 
}

// 歌曲信息和播放列表切换按钮的容器
.trackInfoContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 12px;
}

// 歌曲信息文本区域 (标题、艺术家)
.trackInfo {
  flex-grow: 1; // 占据多余空间
  text-align: left;
  white-space: nowrap; // 防止文本换行
  overflow: hidden;    // 超出部分隐藏
  text-overflow: ellipsis; // 超出部分显示省略号
  margin-right: 10px; // 与右侧按钮的间距
}

.trackTitle {
  font-size: 0.9rem;
  font-weight: bold;
  color: var(--ark-text);
  margin-bottom: 2px;
}

// .trackArtist { /* 艺术家信息的样式 (如果 JS 中启用) */ }

// 播放列表切换按钮 (三条横线图标)
.playlistToggleButton {
  background: none;
  border: none; 
  color: var(--ark-text-secondary);
  width: 24px; 
  height: 24px;
  border-radius: 3px;
  display: flex;
  flex-direction: column; 
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.2s; 
  padding: 4px; 
  flex-shrink: 0; // 防止被压缩
}

// 播放列表切换按钮悬停效果 (正常电量)
.playlistToggleButton:not(.toggleButtonLowPower):hover {
  background-color: rgba(var(--ark-primary-rgb), 0.1); 
}

// 播放列表切换按钮悬停效果 (低电量)
.playlistToggleButton.toggleButtonLowPower:hover {
   background-color: rgba(var(--ark-highlight-green-rgb), 0.1);
}

// 播放列表切换按钮内的横线
.toggleButtonLine {
  width: 100%; 
  height: 1px;
  background-color: var(--ark-text-secondary); // 默认颜色
  margin: 1.5px 0; 
  transition: opacity 0.2s, background-color 0.2s;
  opacity: 0.7; 
}

// 播放列表切换按钮悬停时横线效果 (正常电量)
.playlistToggleButton:not(.toggleButtonLowPower):hover .toggleButtonLine {
    opacity: 1; 
    background-color: var(--ark-primary); // 变为主题色
}

// 播放列表切换按钮内横线 (低电量状态)
.playlistToggleButton.toggleButtonLowPower .toggleButtonLine {
  background-color: #888888; // 灰色
}

// 播放列表切换按钮悬停时横线效果 (低电量)
.playlistToggleButton.toggleButtonLowPower:hover .toggleButtonLine {
    opacity: 1; // 仅增加透明度，颜色不变或略微变亮
}

// .controls { /* 旧的播放控制按钮容器 (已移除) */ }
// .controlButton { /* 旧的播放控制按钮样式 (已移除) */ }
// .controlButton:hover { /* ... */ }
// .controlButton:active { /* ... */ }
// .controlButton svg { /* ... */ }

// 播放进度条容器
.progressBarContainer {
  width: 100%;
  height: 4px;
  background-color: rgba(128, 128, 128, 0.2); // 进度条轨道背景色
  border-radius: 2px;
  overflow: hidden; // 隐藏进度条填充部分的溢出
}

// 播放进度条填充部分
.progressBar { 
  height: 100%;
  background-color: var(--ark-highlight-green); // 进度条颜色
  border-radius: 2px;
  transition: width 0.1s linear; // 宽度变化（即进度更新）动画
}

// 播放列表容器
.playlistContainer {
  width: 100%;
  max-height: 0; // 默认收起 (高度为0)
  opacity: 0;    // 默认透明
  overflow-y: auto;  // 内容超出时垂直滚动
  overflow-x: hidden; // 水平方向不滚动
  transition: max-height 0.4s ease-in-out, opacity 0.3s ease-in-out; // 展开/收起动画
  border-top: 1px solid rgba(128, 128, 128, 0.3); // 顶部边框线
  background-color: rgba(var(--ark-dark-blue-rgb), 0.1); // 轻微背景色
}

// 播放列表展开状态
.playlistContainer.visible {
  max-height: 200px; // 展开时的最大高度
  opacity: 1;
}

// 单个播放列表项
.playlistItem {
  padding: 8px 15px; 
  cursor: pointer;
  border-bottom: 1px solid rgba(128, 128, 128, 0.3); // 底部边框线
  display: flex;
  flex-direction: column; 
  transition: background-color 0.2s ease; // 悬停背景色动画
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  &:last-child { border-bottom: none; } // 最后一项无底边框
  &:hover { background-color: rgba(var(--ark-primary-rgb), 0.1); } // 悬停效果
}

// 播放列表项标题
.playlistItemTitle {
  font-size: 0.85rem;
  color: var(--ark-text);
  margin-bottom: 1px;
}

// 播放列表项艺术家
.playlistItemArtist {
  font-size: 0.75rem;
  opacity: 0.7;
}

// 当前播放的列表项的激活样式
.activePlaylistItem { 
  background-color: rgba(var(--ark-highlight-green-rgb), 0.15); 
  border-left: 3px solid var(--ark-highlight-green); // 左侧高亮边框
  padding-left: 12px; // 左内边距调整以容纳边框

  .playlistItemTitle {
    color: var(--ark-highlight-green); 
    font-weight: bold;
  }
   .playlistItemArtist {
     opacity: 0.8;
   }
}

// 扫描线动画 (复用自其他模块，例如 HomeLoadingScreen)
@keyframes scanMove {
  0%   { background-position: 0 0; }
  100% { background-position: 0 100px; }
} 