@font-face {
  font-family: 'Dosis';
  src: url('/fonts/Dosis/Dosis-Light.ttf') format('truetype');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

// 明日方舟风格变量已移至globals.scss

.container {
  width: 100%;
  height: 100vh; // 恢复: 固定高度
  // min-height: 100vh; // 移除
  display: flex; // 可以移除，因为子元素是绝对定位
  flex-direction: column; // 可以移除
  position: relative; // 保持 relative，作为绝对定位子元素的基准
  background-color: var(--ark-dark-blue);
  color: var(--ark-text);
  overflow: hidden; // 恢复: 隐藏溢出，防止容器滚动条出现
  // scroll-behavior: smooth; // 移除，滚动由 contentWrapper 处理
  transition: filter 0.5s ease-in-out; // 新增: 为 filter 添加过渡效果
}

// --- 新增: 负色效果 --- 
.inverted {
  // filter: invert(1) hue-rotate(180deg); // 移除滤镜
  
  /* 新增: 覆盖 CSS 变量以应用粉紫色主题 */
  --ark-primary: #E08FFF; 
  --ark-primary-rgb: 224, 143, 255;
  --ark-highlight-green: #E08FFF; 
  --ark-highlight-green-rgb: 224, 143, 255;
  
  // --- 新增: 手动模拟反转核心颜色 ---
  --ark-dark-blue: #f0f0f0; // 浅灰色背景
  --ark-text: #222222;     // 深灰色文字
  --ark-border: rgba(0, 0, 0, 0.3); // 深色透明边框
  --ark-border-rgb: 0, 0, 0;
  --ark-text-secondary: #555555; // 中深灰次要文字
  
  // --- 新增: 特定元素样式覆盖 ---
  &.container {
    background-color: var(--ark-dark-blue); // 应用浅灰色背景
    color: var(--ark-text); // 应用深灰色文字
  }
  
  .glowEffect {
    display: none; // 隐藏原有的辉光效果
  }

  .gridBackground {
    // 使用深色线条
    background-image: 
      linear-gradient(rgba(0, 0, 0, 0.08) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 0, 0, 0.08) 1px, transparent 1px);
      
    &::after {
       // 使用深色六边形线条
       background-image: 
        repeating-linear-gradient(0deg, transparent, transparent 20px, rgba(0, 0, 0, 0.03) 20px, rgba(0, 0, 0, 0.03) 21px),
        repeating-linear-gradient(60deg, transparent, transparent 20px, rgba(0, 0, 0, 0.03) 20px, rgba(0, 0, 0, 0.03) 21px),
        repeating-linear-gradient(120deg, transparent, transparent 20px, rgba(0, 0, 0, 0.03) 20px, rgba(0, 0, 0, 0.03) 21px);
    }
  }
  
  .scanLines {
    // 使用深色扫描线
    background: linear-gradient(to bottom, 
      transparent, 
      transparent 49.9%, 
      rgba(0, 0, 0, 0.06) 50%, 
      transparent 50.1%, 
      transparent
    );
    background-size: 100% 4px;
  }
  
  // 左侧面板边框和角标颜色已通过变量覆盖
  .leftPanel {
    // 如果需要，可以添加特定调整
  }
  
  // Logo 滤镜保持不变，在浅色背景下应变为深灰色
  
  // HUD 元素颜色已通过变量覆盖
  
  // 打字机文本和线条颜色已通过变量覆盖
  .fateTextContainer, .envParamsContainer {
     // 调整颜色变量
    .fateText, .envParamsText {
       color: var(--ark-text-secondary);
    }
    .fateLine {
       border-bottom-color: var(--ark-border);
       &::before, &::after {
          background-color: var(--ark-border);
       }
    }
    .envParamsText::after { // Typing cursor
       color: var(--ark-text-secondary);
    }
    &.typingActive .envParamsText::after { // Ensure cursor override applies
       color: var(--ark-text-secondary);
    }
     &.typingActive .fateText::after { // Ensure cursor override applies
       color: var(--ark-text-secondary);
    }
  }
  
  // 电池图标和文字颜色已通过变量覆盖
  .powerDisplay {
     color: var(--ark-text-secondary); // 灰色文字
     .batteryIcon {
        border-color: var(--ark-text-secondary); // 灰色边框
        &::after { // Positive terminal
          background-color: var(--ark-text-secondary); // 灰色正极
        }
     }
     .batteryLevelSegment {
        background-color: rgba(0, 0, 0, 0.1); // 深色透明未填充
        &.filled {
           background-color: var(--ark-text-secondary); // 灰色填充
        }
     }
     .powerText {
        // Optional: Adjust if needed
     }
  }
  
  // 右侧面板和列的悬停效果等颜色已通过变量覆盖
  .column:hover:not(.nonInteractive) {
     &:not(.worksColumn) {
       background-color: rgba(var(--ark-highlight-green-rgb), 0.08);
       &::after, &::before {
          background: var(--ark-highlight-green);
       }
       .verticalText .charItem > div {
          color: var(--ark-highlight-green);
          text-shadow: 0 0 8px var(--ark-highlight-green);
       }
     }
     // ... 其他悬停效果中的颜色也会自动使用新变量值 ...
     .hudOverlay::after { /* Scanlines inside column */
        background: repeating-linear-gradient(
          to bottom,
          transparent,
          transparent 2px,
          rgba(var(--ark-highlight-green-rgb), 0.2) 2px,
          rgba(var(--ark-highlight-green-rgb), 0.2) 3px
        );
     }
     .cornerHudTopLeft, .cornerHudBottomRight {
        border-color: var(--ark-highlight-green);
        filter: drop-shadow(0 0 3px var(--ark-highlight-green));
     }
     .imageHudSquare {
        background-color: var(--ark-highlight-green);
        filter: drop-shadow(0 0 2px var(--ark-highlight-green));
     }
     .imageHudText {
        color: var(--ark-highlight-green);
        text-shadow: 0 0 3px rgba(var(--ark-highlight-green-rgb), 0.5);
     }
     .taskSquare, .taskLine {
        background-color: var(--ark-highlight-green);
     }
     .taskText {
        color: var(--ark-highlight-green);
     }
     // Branch styles
     .branchSquare {
        background-color: var(--ark-highlight-green);
     }
     .branchText {
        color: var(--ark-highlight-green);
     }
      // LIFE ECG
     .column2:hover:not(.nonInteractive) .hudOverlay::before, 
     .column2:hover:not(.nonInteractive) .hudOverlay::after {
        // Update SVG stroke color - this is complex, might need inline style or JS
        // For now, just update the drop shadow
        filter: drop-shadow(0 0 2px var(--ark-highlight-green));
     }
     // CONTACT Ripples
     @keyframes contactRippleExpandShadow {
      0% {
        // ... border/shadow using --ark-highlight-green-rgb ...
        border: 1px solid rgba(178, 242, 187, 0.9);
        box-shadow: 0 0 0 0px rgba(178, 242, 187, 1); 
        opacity: 0.9;
        transform: translate(-50%, -50%) scale(0.1);
      }
      100% {
        // ... border/shadow using --ark-highlight-green-rgb ...
        border: 1px solid rgba(178, 242, 187, 0); 
        box-shadow: 0 0 0 25px rgba(178, 242, 187, 0); 
        opacity: 0;
        transform: translate(-50%, -50%) scale(2.2); // Expand even larger
      }
    }
  }
  
  // 内容区域
  .contentWrapper {
    // 继承 .container 的背景色和文字颜色
  }
  
  .contentSection {
     color: var(--ark-text); // 应用深色文字
     h2 {
        color: var(--ark-primary); // 粉紫标题
        border-bottom-color: var(--ark-border); // 深色边框
     }
     p {
        color: var(--ark-text); // 深色段落
     }
  }
  
  .backButton {
     background: #555555; // 深灰背景
     border-color: #444444; // 更深边框
     color: #dddddd; // 浅灰文字
     &:hover {
       background: #777777; // 悬停时稍亮灰色背景
       color: #ffffff; // 白色文字
     }
  }
  
  .aboutSection {
     background-color: rgba(255, 255, 255, 0.8); // 浅色半透明背景
     // 内部文字/按钮颜色已通过变量覆盖
  }

  .footerInfo {
    color: var(--ark-text-secondary); // 深次要文字
    a:hover {
      color: var(--ark-primary); // 粉紫链接悬停
    }
  }
  
  // 项目卡片
  .projectCard {
     background-color: rgba(var(--ark-primary-rgb), 0.05); // 浅粉色背景
     border-color: var(--ark-border); // 深色边框
     &:hover {
       background-color: rgba(var(--ark-primary-rgb), 0.1); // 稍深粉色背景
       border-color: var(--ark-primary); // 粉色边框
       .projectLink {
         background-color: var(--ark-primary);
         color: #ffffff; // 亮色文字
       }
     }
  }
  
  .projectImagePlaceholder {
     background-color: var(--ark-primary); // 粉紫占位符背景
     border-color: var(--ark-border); // 深色边框
  }
  
  .imageScanlineOverlay {
     // 使用深色扫描线
     background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(0, 0, 0, 0.1) 50%
    );
  }
  
  .projectTitle {
    color: var(--ark-primary); // 粉紫标题
  }
  .titleBracket {
    color: var(--ark-border); // 深色括号
  }
  .projectDescription {
    color: var(--ark-text-secondary); // 深次要文字
  }
  .techTag {
    background-color: rgba(var(--ark-primary-rgb), 0.15); // 浅粉背景
    border-color: rgba(var(--ark-primary-rgb), 0.3);
    color: var(--ark-primary); // 粉紫文字
  }
  .projectLink {
    color: var(--ark-primary); // 粉紫文字
    border-color: var(--ark-primary); // 粉紫边框
  }
  
}

.main {
  flex: 1;
  width: 100%;
}

// 明日方舟风格网格背景
.gridBackground {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(9, 22, 40, 0.15) 1px, transparent 1px),
    linear-gradient(90deg, rgba(9, 22, 40, 0.15) 1px, transparent 1px);
  background-size: 20px 20px;
  z-index: 1;
  opacity: 0.5;
  pointer-events: none;
  
  // 添加六边形网格叠加
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      repeating-linear-gradient(0deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px),
      repeating-linear-gradient(60deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px),
      repeating-linear-gradient(120deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px);
    opacity: 0.7;
  }
}

// 中央光效
.glowEffect {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 220vh;
  height: 220vh;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(200, 200, 200, 0.03) 40%,
    rgba(0, 0, 0, 0) 80%
  );
  transform: translate(-50%, -50%);
  z-index: 0;
  pointer-events: none;
  // 添加脉冲动画
  animation: pulse 8s infinite alternate;
}

@keyframes pulse {
  0% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(0.95);
  }
  100% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.05);
  }
}

// 添加明日方舟风格扫描线
.scanLines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom, 
    transparent, 
    transparent 49.9%, 
    rgba(200, 200, 200, 0.1) 50%, 
    transparent 50.1%, 
    transparent
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 2;
  opacity: 0.3;
  animation: scanMove 10s linear infinite;
}

@keyframes scanMove {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100px;
  }
}

.rain_background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
  overflow: hidden;
  
  &.active {
    pointer-events: auto;
  }
}

.scroll_bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, rgba(9, 22, 40, 0.2) 0%, rgba(5, 15, 30, 0.6) 70%);
  transition: transform 0.5s ease-out;
  will-change: transform, background-position;
}

.bg_raindrop {
  position: absolute;
  top: -50px;
  background: linear-gradient(to bottom, 
    rgba(255, 255, 255, 0.05) 0%, 
    rgba(200, 200, 255, 0.15) 50%, 
    rgba(150, 200, 255, 0.05) 100%);
  border-radius: 50% 50% 25% 25%;
  will-change: transform, opacity;
  
  &::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 40%;
    background: rgba(200, 220, 255, 0.08);
    border-radius: 50%;
    transform: scale(1.3, 0.35) translateY(70%);
    opacity: 0.7;
    filter: blur(1px);
  }
}

.mist_overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, 
    rgba(9, 22, 40, 0) 0%, 
    rgba(5, 15, 30, 0.3) 70%, 
    rgba(3, 10, 20, 0.5) 100%);
  opacity: 0.8;
  pointer-events: none;
  z-index: 2;
}

.mainLayout, 
.contentWrapper { // 新增 .contentWrapper
  position: absolute; 
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  // transition: opacity 0.5s ease-out; // 移除旧过渡
  opacity: 0; // 初始状态设为透明 (动画会覆盖)
  pointer-events: none; 
}

.mainLayout {
  // flex: 1; // 移除 flex: 1
  // display: flex; // 移除 flex
  // 移除 width, height, top, left, position: relative
  // 保留 position: absolute 和显隐控制
  // overflow: hidden; // 移除，由内部 rightPanel 控制
  user-select: none;
  -webkit-user-select: none; 
  -moz-user-select: none; 
  -ms-user-select: none; 
  pointer-events: none; // --- ADD: Ensure layout containers don't block events --- 
}

// --- visible / hidden 控制 (z-index 调整 + 动画) --- 
.visible {
  // opacity: 1; // 由动画控制
  pointer-events: auto; 
  z-index: 3; 
  animation-fill-mode: forwards; // 保持动画结束状态
}

.hidden { 
  // opacity: 0; // 由动画控制
  pointer-events: none;
  z-index: 1; 
  animation-fill-mode: forwards; // 保持动画结束状态
}

// --- 应用特定视图的进入/退出动画 --- 
.mainLayout.visible {
  animation: slideDownInSkew 0.6s cubic-bezier(0.25, 0.8, 0.25, 1) forwards;
  pointer-events: none; // Let children control
}
.mainLayout.hidden {
  animation: slideUpOutSkew 0.5s ease-out forwards;
}

.contentWrapper.visible {
  // animation: slideInFromRight 1.0s cubic-bezier(0.25, 0.8, 0.25, 1) forwards; // Increase duration
  animation: slideInFromRight 1.5s cubic-bezier(0.25, 0.8, 0.25, 1) forwards; // Further increase duration
  pointer-events: auto; // Allow scrolling
}
.contentWrapper.hidden {
  // animation: slideOutToRight 0.9s ease-out forwards; // Increase duration
  animation: slideOutToRight 1.3s ease-out forwards; // Further increase duration
}

// --- 新增 Keyframes --- 
@keyframes slideUpOutSkew {
  from {
    opacity: 1;
    // transform: translateY(0); // 初始状态
    // 模拟右侧面板向上滑出，可以只移动内容
    // 对 mainLayout 本身做动画可能简单点
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-80px); // 向上移动一点
    // 可以加一点 skew 或 rotate 使其倾斜消失，但这会影响整个 mainLayout
    // 如果只想影响 rightPanel，需要更复杂的选择器或结构
    // 暂时只做向上+淡出
  }
}

@keyframes slideDownInSkew {
  from {
    opacity: 0;
    transform: translateY(-80px); // 从上方进入
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(100%); // 从右侧屏幕外开始
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOutToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(100%); // 滑出到右侧屏幕外
  }
}

.leftPanel {
  // flex: 1; // 移除 flex: 1
  width: calc(100% / 1.618); // 设置明确宽度
  height: 100vh; // 设置明确高度
  position: fixed; // 修改为 fixed
  top: 0; // 添加
  left: -2vw; // 修改: 向左偏移 2vw
  background-color: transparent; 
  display: flex;
  justify-content: center;
  align-items: center;
  // position: relative; // 移除
  z-index: 10; // 修改: 提升层级 (高于视图切换层 和 3D 视图)
  pointer-events: none; // --- ADD: Disable pointer events by default --- 
  overflow: hidden; // 新增: 添加遮罩效果，隐藏溢出内容

  // --- ADD: Enable pointer events for specific children --- 
  & > * { // Target direct children initially, refine if needed
    pointer-events: auto; 
  }
  // --- OR (More specific): ---
  // .leverContainer, .powerDisplay /* other interactive elements */ {
  //   pointer-events: auto;
  // }

  // 添加.animated类用于触发动画
  &.animated {
    &::after {
      animation: expandBorder 1.2s cubic-bezier(0.25, 0.8, 0.25, 1) forwards;
    }
    &::before {
      animation: fadeInCorner 0.8s ease-out 0.6s forwards; // 延迟0.6s开始
    }
    .logoContainer {
      animation: revealLogo 1.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
      animation-delay: 0.1s;
    }
  }

  // 修改：边框初始状态为中心点
  &::after {
    content: '';
    position: absolute; // 边框相对于固定的 leftPanel 定位
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border: 0px solid var(--ark-border);
    z-index: 1; // 在 leftPanel 内部的堆叠顺序
    pointer-events: none;
    background-color: transparent;
    transform: translate(-50%, -50%); // 确保从中心扩展
  }
  
  // 修改：角标初始状态为透明
  &::before {
    content: '';
    position: absolute; // 角标相对于固定的 leftPanel 定位
    top: 17.5%; // 修改: 与边框 top 对齐
    left: 15%;
    width: 25px;
    height: 25px;
    border-top: 2px solid var(--ark-primary);
    border-left: 2px solid var(--ark-primary);
    z-index: 2; // 在 leftPanel 内部的堆叠顺序
    background-color: transparent;
    opacity: 0; // 初始透明
  }
}

// 新增边框展开动画
@keyframes expandBorder {
  0% {
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-width: 0px;
    transform: translate(-50%, -50%);
  }
  100% {
    top: 17.5%; // 修改: 实现垂直居中 (100 - 65) / 2
    left: 15%;
    width: 65%; // 修改: 从 70% 缩小到 65%
    height: 65%; // 修改: 从 70% 缩小到 65%
    border-width: 1px;
    transform: translate(0, 0); // 恢复正常位置
  }
}

// 新增角标淡入动画
@keyframes fadeInCorner {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.logoContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-image: url('/pictures/RM2.png');
  background-position: 47% 48%; // 修改: 稍微向左上移动
  background-repeat: no-repeat;
  background-size: 57%; // 修改: 从 50% 增大到 65%
  filter: grayscale(100%) brightness(0.8) drop-shadow(0 0 5px rgba(0, 0, 0, 0.1)); // 修改: 亮度从 0.6 提高到 0.8
  pointer-events: none;
  position: relative;
  z-index: 3;
  // 修改：添加clip-path实现遮罩效果
  clip-path: inset(45% 45% 45% 45%); // 初始为中心小区域
  opacity: 0; // 初始透明
  
  // 移除之前的扫描线效果，避免冲突
  // &::after { ... }
}

// 修改Logo展开动画，使其更平滑
@keyframes revealLogo {
  0% {
    clip-path: inset(45% 45% 45% 45%);
    opacity: 0;
    transform: scale(0.95); // 轻微缩小
  }
  100% {
    clip-path: inset(0% 0% 0% 0%);
    opacity: 1;
    transform: scale(1);
  }
}

.rightPanel {
  // flex: 0.618; // 移除 flex
  // 调整为绝对定位在 mainLayout 内部
  position: absolute;
  top: 0;
  left: calc(100% / 1.618); // 设置左偏移，等于 leftPanel 宽度
  width: calc(100% * 0.618 / 1.618); // 设置明确宽度
  height: 100%;
  background-color: transparent;
  // position: relative; // 移除
  transform: skewX(-15deg);
  transform-origin: left center;
  // 修改: 允许子元素溢出 (为了 ABOUT 列的 HUD)
  overflow: visible; 
  // z-index 不再重要，因为它在 mainLayout 内部
  pointer-events: none; // --- ADD: Disable pointer events by default --- 

  // --- 新增: 收回动画类 --- // 移除
  /*
  &.hidden {
    opacity: 0;
    transform: translateY(-50px) skewX(-15deg); // 向上移动并保持倾斜
    pointer-events: none; // 隐藏后不响应事件
  }
  */
}

.column {
  position: absolute;
  height: 100%;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  // --- MODIFIED: Increase z-index significantly ---
  z-index: 10; 
  pointer-events: auto; // --- ADD: Explicitly enable pointer events for columns --- 
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden; // 新增: 裁剪超出边界的子元素 (包括动画)

  &:hover {
    // 仅当交互启用时应用悬停效果
    &:not(.nonInteractive) {

      // 默认悬停效果 (排除 worksColumn)
      &:not(.worksColumn) {
        background-color: rgba(178, 242, 187, 0.08);

        &::after,
        &::before {
            content: '';
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            width: 30%;
            height: 2px;
            background: var(--ark-highlight-green);
        }
        &::after { bottom: 0; }
        &::before { top: 0; }

        .verticalText .charItem > div {
          transform: scale(1.15);
          color: var(--ark-highlight-green);
          text-shadow: 0 0 8px var(--ark-highlight-green);
        }
      }
    }
  }

  /* 新增：禁用交互时的样式 */
  &.nonInteractive {
    pointer-events: none;
    cursor: default;
  }
}

@keyframes textPulse {
  0% {
    color: rgba(255, 255, 255, 0.7);
    text-shadow: 0 0 5px rgba(150, 150, 150, 0.3);
  }
  100% {
    color: rgba(255, 255, 255, 1);
    text-shadow: 0 0 8px rgba(200, 200, 200, 0.7);
  }
}

/* 垂直线条样式 - 添加辉光 */
.verticalLine {
  position: absolute;
  top: 0;
  width: 1px;
  height: 100%;
  background-color: var(--ark-primary); // Should be white now
  z-index: 3;
  pointer-events: none;
  opacity: 0; // 初始隐藏
  box-shadow: 0 0 3px rgba(255, 255, 255, 0.3), 0 0 1px rgba(255, 255, 255, 0.5);

  &.animated {
    // 公共设置
    animation-duration: 0.8s; // 出现动画时长
    animation-fill-mode: forwards;
    animation-timing-function: cubic-bezier(0.2, 0.8, 0.2, 1);
    animation-iteration-count: 1; // 只播放一次

    // 交错动画延迟（所有线条共享）
    @for $i from 0 through 5 {
      &:nth-child(#{$i + 1}) {
        animation-delay: #{$i * 0.15}s;
      }
    }
    
    // 第一条到第三条：从上到下
    &:nth-child(-n+3) {
      animation-name: lineAppearTopDown;
      transform-origin: top; 
    }
    
    // 第四条到第六条：从下到上
    &:nth-child(n+4) {
      animation-name: lineAppearBottomUp;
      transform-origin: bottom;
    }
  }

  // --- Pulsing Effect --- 
  &::after {
    content: '';
    position: absolute;
    left: 50%; 
    top: 0; // Start position for background
    width: 3px; // Slightly wider head
    height: 100%; // Cover full line height for background positioning
    // Use gradient for meteor trail effect
    background-image: linear-gradient(
      to bottom, 
      var(--ark-highlight-green) 0%, 
      rgba(178, 242, 187, 0.5) 15%, // Shorten bright head
      transparent 40% // Shorten tail fade out point (Original: 60%)
    );
    background-size: 100% 200%; // Slightly reduce background height (Original: 250%)
    background-repeat: no-repeat;
    background-position: 0% -100%; // Adjust starting position (Original: -150%)
    opacity: 0; 
    transform: translateX(-50%); 
    transform-origin: center center; // Set transform origin for scaling
    // Keep a subtle glow
    filter: drop-shadow(0 0 5px var(--ark-highlight-green));
  }

  // Apply NORMAL (Top->Bottom) animation
  &.pulsing::after {
    // Reset transform just in case (if element could alternate between pulse types)
    transform: translateX(-50%) scaleY(1);
    animation: pulseMeteor 2s ease-out forwards; // New animation name
  }
  
  // Apply REVERSE (Bottom->Top) animation
  &.pulsingReverse::after {
    // Flip the element vertically to reverse the gradient direction visually
    transform: translateX(-50%) scaleY(-1);
    animation: pulseMeteorReverse 2s ease-out forwards; // New animation name
  }
}

// 从上到下动画
@keyframes lineAppearTopDown {
  0% {
    opacity: 0;
    transform: scaleY(0);
  }
  100% {
    opacity: 0.5; // 保持浅色
    transform: scaleY(1);
  }
}

// 新增：从下到上动画
@keyframes lineAppearBottomUp {
  0% {
    opacity: 0;
    transform: scaleY(0);
  }
  100% {
    opacity: 0.5; // 保持浅色
    transform: scaleY(1);
  }
}

.verticalText {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transform: translateY(10px);
  transition: transform 0.3s ease;
  
  .charItem {
    margin: 10px 0;
    transform: skewX(15deg); // 抵消父元素的倾斜
    // --- 修改: 加大字体灰度 ---
    color: rgba(200, 200, 200, 0.5); // 从 rgba(255, 255, 255, 0.6) 调暗
    transition: all 0.1s ease; // Faster transition consistent with VerticalShinyText
    text-shadow: 0 0 3px rgba(0, 150, 255, 0.2); // 保持原有的细微阴影
    // --- 修改: 应用新字体 ---
    font-family: 'ZELDA Free', sans-serif; // 使用新字体，并提供回退
    font-size: 1.1rem; // 可以根据新字体调整大小，这里稍微增大一点
    line-height: 1; // 可能需要调整行高适应新字体
  }
}

// 明日方舟风格HUD元素 - 修改为每个角只有一个对应位置的边框装饰
.hudElement {
  position: fixed;
  font-family: 'Dosis', monospace;
  font-size: 0.7rem;
  color: var(--ark-text-secondary); // 灰色文字
  padding: 10px;
  letter-spacing: 1px;
  text-transform: uppercase;
  background-color: transparent;
  border: none;
  z-index: 10;
  opacity: 0;
  transition: opacity 0.8s ease, transform 0.8s ease;
  pointer-events: none; // --- ADD: Disable pointer events for HUDs by default --- 
  
  &.visible {
    opacity: 1;
  }
  
  // 通用装饰元素
  &::before {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    border-color: var(--ark-border); // 深色边框
    border-style: solid;
    border-width: 0;
    background-color: transparent;
  }
  
  &.topLeft {
    top: 20px;
    left: 20px;
    transform: translateY(-10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      top: -1px;
      left: -1px;
      border-top-width: 1px;
      border-left-width: 1px;
    }
  }
  
  &.topRight {
    top: 20px;
    right: 20px;
    transform: translateY(-10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      top: -1px;
      right: -1px;
      border-top-width: 1px;
      border-right-width: 1px;
    }
  }
  
  &.bottomLeft {
    bottom: 20px;
    left: 20px;
    transform: translateY(10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      bottom: -1px;
      left: -1px;
      border-bottom-width: 1px;
      border-left-width: 1px;
    }
  }
  
  &.bottomRight {
    bottom: 20px;
    right: 20px;
    transform: translateY(10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      bottom: -1px;
      right: -1px;
      border-bottom-width: 1px;
      border-right-width: 1px;
    }
  }
}

// General section styles
.section {
  position: relative;
  padding: 6rem 10%;
  overflow: hidden;
  
  &:nth-child(odd) {
    background: #0d0d0d;
  }
}

.section_content {
  max-width: 1400px;
  margin: 0 auto;
}

.section_header {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 4rem;
  text-align: center;
  
  h2 {
    font-size: clamp(2rem, 4vw, 3.5rem);
    font-weight: 300;
    margin-bottom: 1.5rem;
    letter-spacing: 1px;
  }
  
  .line {
    width: 80px;
    height: 2px;
    background: rgba(255,255,255,0.5);
    
    &::after {
      content: '';
      display: block;
      width: 40px;
      height: 3px;
      background: white;
      margin: 0 auto;
      margin-top: -2px;
      transform-origin: center;
      animation: lineGrow 1.5s ease-out forwards;
    }
  }
}

// About section
.about_content {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 4rem;
}

.about_text {
  flex: 1 1 500px;
  
  p {
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    line-height: 1.7;
    opacity: 0.8;
  }
}

.about_stats {
  flex: 1 1 300px;
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
}

.stat_item {
  flex: 1 1 150px;
  text-align: center;
  
  h3 {
    font-size: clamp(2rem, 4vw, 3rem);
    margin-bottom: 0.5rem;
    font-weight: 600;
    background: linear-gradient(90deg, #fff, #aaa);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  p {
    font-size: 1rem;
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
}

// Work section
.work_grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.work_item {
  position: relative;
  transition: transform 0.3s ease-out;
  will-change: transform;
  cursor: pointer;
  
  &:hover {
    transform: translateY(-10px);
    
    .work_overlay {
      opacity: 1;
    }
  }
}

.work_image {
  position: relative;
  padding-top: 75%; // 4:3 aspect ratio
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #252525 0%, #151515 100%);
    border: 1px solid rgba(255,255,255,0.1);
  }
}

.work_overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.7);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease-out;
  
  h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    color: #fff;
  }
  
  p {
    font-size: 0.9rem;
    opacity: 0.7;
    margin-bottom: 1.5rem;
    text-align: center;
  }
}

.work_link {
  display: inline-block;
  padding: 0.5rem 1rem;
  border: 1px solid rgba(255,255,255,0.3);
  font-size: 0.9rem;
  text-decoration: none;
  color: #fff;
  transition: all 0.3s;
  
  &:hover {
    background: rgba(255,255,255,0.1);
    border-color: rgba(255,255,255,0.5);
  }
}

// Experience section
.experience_timeline {
  position: relative;
  max-width: 800px;
  margin: 0 auto;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 20px;
    width: 1px;
    height: 100%;
    background: rgba(255,255,255,0.2);
    
    @media (min-width: 768px) {
      left: 50%;
      transform: translateX(-50%);
    }
  }
}

.timeline_item {
  position: relative;
  margin-bottom: 3rem;
  padding-left: 60px;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 15px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #fff;
    border: 1px solid rgba(255,255,255,0.3);
    
    @media (min-width: 768px) {
      left: 50%;
      margin-left: -5px;
    }
  }
  
  @media (min-width: 768px) {
    width: 50%;
    padding-left: 3rem;
    
    &:nth-child(even) {
      margin-left: 50%;
      padding-left: 3rem;
      padding-right: 0;
    }
    
    &:nth-child(odd) {
      padding-right: 3rem;
      padding-left: 0;
      text-align: right;
    }
  }
}

.timeline_year {
  display: inline-block; // 使其可以应用 padding 和 margin
  font-family: 'Consolas', monospace; // 保持 Consolas
  font-size: 0.8rem;
  color: var(--ark-text-secondary);
  background-color: rgba(var(--ark-border-rgb), 0.2);
  padding: 3px 8px;
  margin-bottom: 15px; // 与标题的间距
  border-radius: 3px;
  opacity: 0.7;
}

// --- 新增: 为时间线内的数字指定字体 ---
.timelineNumber {
  font-family: 'Consolas', monospace; // 应用与年份范围相同的字体
  // 可以根据需要添加其他样式，例如颜色或字重
}

.timeline_content {
  h3 {
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
  }
  
  p {
    opacity: 0.7;
    line-height: 1.6;
  }
}

// Life section
.life_grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  gap: 2rem;
}

.life_item {
  text-align: center;
  transition: transform 0.3s ease-out;
  will-change: transform;
  
  &:hover {
    transform: translateY(-10px);
  }
}

.life_image {
  position: relative;
  padding-top: 100%; // Square aspect ratio
  margin-bottom: 1.5rem;
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #1a1a1a 0%, #101010 100%);
    border-radius: 50%;
    border: 1px solid rgba(255,255,255,0.1);
  }
}

// Contact section
.contact_content {
  display: flex;
  flex-wrap: wrap;
  gap: 3rem;
}

.contact_info {
  flex: 1 1 400px;
  
  h3 {
    font-size: 1.8rem;
    margin-bottom: 1rem;
    font-weight: 300;
  }
  
  p {
    opacity: 0.8;
    line-height: 1.6;
    margin-bottom: 2rem;
  }
}

.contact_details {
  margin-top: 2rem;
}

.contact_item {
  margin-bottom: 1.5rem;
  
  span {
    display: block;
    opacity: 0.6;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  a {
    color: #fff;
    text-decoration: none;
    border-bottom: 1px solid rgba(255,255,255,0.3);
    padding-bottom: 3px;
    transition: border-color 0.3s;
    
    &:hover {
      border-color: rgba(255,255,255,0.8);
    }
  }
  
  p {
    margin: 0;
  }
}

.social_links_small {
  display: flex;
  gap: 1rem;
  
  a {
    border-bottom: none;
  }
}

.contact_form {
  flex: 1 1 400px;
}

.form_group {
  margin-bottom: 1.5rem;
  
  input, textarea {
    width: 100%;
    padding: 1rem;
    background: rgba(255,255,255,0.05);
    border: 1px solid rgba(255,255,255,0.1);
    color: #fff;
    font-size: 1rem;
    transition: border-color 0.3s;
    
    &:focus {
      outline: none;
      border-color: rgba(255,255,255,0.3);
    }
    
    &::placeholder {
      color: rgba(255,255,255,0.5);
    }
  }
}

// Footer
.footer {
  position: relative;
  padding: 3rem 10%;
  background: #0a0a0a;
  color: #fff;
}

.footer_content {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  max-width: 1400px;
  margin: 0 auto;
  gap: 2rem;
}

.footer_logo {
  flex: 1 1 300px;
  
  h3 {
    font-size: 1.5rem;
    font-weight: 300;
    margin-bottom: 1rem;
    
    span {
      opacity: 0.6;
    }
  }
  
  p {
    opacity: 0.5;
    font-size: 0.9rem;
  }
}

.footer_links {
  flex: 1 1 300px;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  text-align: right;
}

.footer_nav {
  display: flex;
  gap: 1.5rem;
  justify-content: flex-end;
  flex-wrap: wrap;
  
  a {
    color: #fff;
    text-decoration: none;
    font-size: 0.9rem;
    opacity: 0.7;
    transition: opacity 0.3s;
    
    &:hover {
      opacity: 1;
    }
  }
}

.social_links {
  display: flex;
  gap: 1.5rem;
  justify-content: flex-end;
  
  a {
    display: block;
    width: 35px;
    height: 35px;
    border: 1px solid rgba(255,255,255,0.3);
    color: #fff;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.8rem;
    transition: all 0.3s;
    
    &:hover {
      background: rgba(255,255,255,0.1);
      border-color: rgba(255,255,255,0.5);
    }
  }
}

// Animations
@keyframes scrollWheel {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(15px);
  }
}

@keyframes arrowBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0) rotate(45deg);
  }
  40% {
    transform: translateY(-10px) rotate(45deg);
  }
  60% {
    transform: translateY(-5px) rotate(45deg);
  }
}

@keyframes lineGrow {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes leafGrow {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes dropFall {
  0% {
    transform: translateY(-20px) scaleY(0);
    opacity: 0;
  }
  50% {
    transform: translateY(0) scaleY(1);
    opacity: 1;
  }
  100% {
    transform: translateY(20px) scaleY(0.7);
    opacity: 0;
  }
}

@keyframes ripple {
  0% {
    transform: translateX(-50%) scale(0);
    opacity: 1;
  }
  100% {
    transform: translateX(-50%) scale(3);
    opacity: 0;
  }
}

/* 添加闪光动画关键帧 */
@keyframes shine {
  0% {
    background-position: 100%;
  }
  100% {
    background-position: -100%;
  }
}

// Responsive
@media (max-width: 768px) {
  .hero_content {
    flex-direction: column;
    gap: 3rem;
  }
  
  .hero_text {
    padding: 1rem;
    text-align: center;
    
    h1 {
      margin-top: 3rem;
    }
    
    p {
      margin: 0 auto 2rem;
    }
  }
  
  .about_content,
  .contact_content {
    flex-direction: column;
  }
  
  .section {
    padding: 4rem 5%;
  }
  
  .footer_content {
    flex-direction: column;
    text-align: center;
  }
  
  .footer_links,
  .footer_nav,
  .social_links {
    justify-content: center;
  }
}

// --- 全局列和 HUD 样式 --- 

// HUD 覆盖层容器 (在每个列内)
.hudOverlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  // overflow: hidden; // 移除: 允许雷达波纹溢出
  // REMOVED overflow: visible !important; for testing
  // Now relies on parent (.column/.rightPanel) overflow: hidden

  &::before, // Main canvas for unique hover animations
  &::after { // Scanlines (common animation)
    content: '';
    position: absolute;
    opacity: 0;
    transition: opacity 0.2s ease-out; // Fade out on hover exit
  }

  // 共享的扫描线样式 (保持不变)
  &::after { // Scanlines
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      to bottom,
      transparent,
      transparent 2px,
      rgba(178, 242, 187, 0.2) 2px,
      rgba(178, 242, 187, 0.2) 3px
    );
    background-size: 100% 6px;
    filter: blur(0.3px);
    background-position: 0 0;
    // Ensure scanlines are behind the main animation
    z-index: 1; 
  }

  // 清除旧的 ::before 基础方框样式 
  // 新的基础样式将在具体动画中按需设置 
  &::before { 
    // Basic positioning/transform origin if needed, otherwise animation sets all
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    // Ensure main animation is above scanlines
    z-index: 2; 
  }
}

// 共享的角标样式
.cornerHudTopLeft,
.cornerHudBottomRight {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-color: var(--ark-highlight-green);
    border-style: solid;
    border-width: 0;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s ease-out; // Fade out on hover exit
    filter: drop-shadow(0 0 3px var(--ark-highlight-green));
    z-index: 3; // Above main animation
}

.cornerHudTopLeft { top: 8px; left: 8px; border-top-width: 2px; border-left-width: 2px; }
.cornerHudBottomRight { bottom: 8px; right: 8px; border-bottom-width: 2px; border-right-width: 2px; }

.imageHud {
    position: absolute;
    display: flex;
    align-items: center;
    gap: 6px;
    z-index: 5; // Highest z-index
    opacity: 0;
    transform: translateY(5px); // Initial offset for animation
    pointer-events: none;
    transition: opacity 0.2s ease-out, transform 0.2s ease-out; // Fade out
    // Add white-space nowrap to prevent text wrapping
    white-space: nowrap; 
}

.imageHudSquare {
    display: inline-block;
    width: 8px;
    height: 8px;
    background-color: var(--ark-highlight-green);
    filter: drop-shadow(0 0 2px var(--ark-highlight-green));
}

.imageHudText {
    font-family: 'Consolas', 'Menlo', 'Courier New', monospace;
    font-size: 0.8rem;
    color: var(--ark-highlight-green);
    letter-spacing: 1px;
    font-weight: bold;
    text-shadow: 0 0 3px rgba(178, 242, 187, 0.5);
}

// --- 通用列悬停效果 (保持不变) --- 
.column:hover:not(.nonInteractive) {
  background-color: rgba(178, 242, 187, 0.08); 

  .verticalText .charItem > div {
    transform: scale(1.15);
    color: var(--ark-highlight-green);
    text-shadow: 0 0 8px var(--ark-highlight-green);
  }

  // 触发共享的扫描线动画
  .hudOverlay::after { 
      animation: scanHud 1.5s linear infinite,
                 fadeInScanlines 0.2s ease-out forwards;
  }

  // 触发共享的角标动画
  .cornerHudTopLeft,
  .cornerHudBottomRight {
    animation: fadeInArkCorner 0.4s ease-out 0.2s forwards;
  }

  // 触发共享的图片HUD淡入动画 (位置由具体规则决定)
  .imageHud {
      animation: fadeInImageHud 0.4s ease-out 0.3s forwards;
  }
}

// --- 特定列的悬停效果 (应用新动画) --- 

// Column 0 (WORKS - Revert to Skewed Box)
.column0:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    // Revert to the original skewed box animation
    animation: hudExpandBox0 0.5s cubic-bezier(0.2, 0.9, 0.3, 1.2) forwards;
  }
  .imageHud { // Unique Position
    bottom: 15px;
    left: 15px;
  }
}

// Column 1 (EXPERIENCE - Timeline)
.column1:hover:not(.nonInteractive) {
  .hudOverlay::before {
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 4px; 
    height: 100%;
    background-color: var(--ark-highlight-green);
    opacity: 0;
    transform-origin: bottom center;
    transform: translateX(-50%) scaleY(0);
    animation: buildTowerScale 1.8s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
    filter: drop-shadow(0 0 4px var(--ark-highlight-green));
  }
  .imageHud { top: 15px; right: 15px; }

  // --- Update branch animation delays based on 1.8s duration ---
  
  // 分支 1 (Right) - 50% 处
  .branch1 {
    animation: slideOutRight 0.5s ease-out forwards;
    animation-delay: 0.90s; // Updated: 1.8s * 0.5
  }
  .branch1 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 1.20s; // Updated: 0.90s + 0.3s
  }

  // 分支 2 (Left) - 40% 处
  .branch2 {
    animation: slideOutLeft 0.5s ease-out forwards;
    animation-delay: 0.72s; // Updated: 1.8s * 0.4
  }
   .branch2 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 1.02s; // Updated: 0.72s + 0.3s
  }

  // 分支 3 (Right) - 30% 处
  .branch3 {
    animation: slideOutRight 0.5s ease-out forwards;
    animation-delay: 0.54s; // Updated: 1.8s * 0.3
  }
  .branch3 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 0.84s; // Updated: 0.54s + 0.3s
  }

  // 分支 4 (Left) - 20% 处
  .branch4 {
    animation: slideOutLeft 0.5s ease-out forwards;
    animation-delay: 0.36s; // Updated: 1.8s * 0.2
  }
  .branch4 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 0.66s; // Updated: 0.36s + 0.3s
  }
}

// Column 2 (LIFE - Pulse) - Replaced with ECG
.column2:hover:not(.nonInteractive) {
  // --- 恢复: 上方 ECG 波形样式 --- 
  .hudOverlay::before {
    content: ''; 
    position: absolute;
    left: 0;
    width: 100%;
    height: 40px; 
    // 默认绿色 ECG
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='50' viewBox='0 0 100 50'%3E%3Cpath d='M0,25 L20,25 L25,10 L35,40 L40,25 L60,25 L65,15 L75,35 L80,25 L100,25' stroke='rgb(178, 242, 187)' stroke-width='1.5' fill='none'/%3E%3C/svg%3E"); 
    background-repeat: repeat-x;
    background-size: 50px 40px; 
    opacity: 0; 
    animation-name: ecgScroll, fadeInEcg; 
    animation-duration: 1.5s, 0.4s;      
    animation-timing-function: linear, ease-out; 
    animation-iteration-count: infinite, 1; 
    animation-fill-mode: none, forwards;     
    animation-delay: 0s, 0.1s; 
    filter: drop-shadow(0 0 2px var(--ark-highlight-green)); 
    top: 50%;
    transform: translateY(-75px); 
    background-position-x: 0;
    animation-direction: normal, normal; 
  }

  // --- 恢复: 下方 ECG 波形样式 --- 
  .hudOverlay::after {
    content: ''; 
    position: absolute;
    left: 0;
    width: 100%;
    height: 40px; // 恢复高度
    // 默认绿色 ECG
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='50' viewBox='0 0 100 50'%3E%3Cpath d='M0,25 L20,25 L25,10 L35,40 L40,25 L60,25 L65,15 L75,35 L80,25 L100,25' stroke='rgb(178, 242, 187)' stroke-width='1.5' fill='none'/%3E%3C/svg%3E"); 
    background-repeat: repeat-x;
    background-size: 50px 40px; // 恢复背景尺寸
    opacity: 0; // 初始隐藏
    animation-name: ecgScroll, fadeInEcg; // 恢复动画
    animation-duration: 1.5s, 0.4s;      
    animation-timing-function: linear, ease-out; 
    animation-iteration-count: infinite, 1; 
    animation-fill-mode: none, forwards;     
    animation-delay: 0s, 0.1s; // 恢复动画延迟
    filter: drop-shadow(0 0 2px var(--ark-highlight-green)); // 恢复辉光效果
    top: 50%;
    transform: translateY(35px) scaleY(-1); // 恢复向下移动和垂直翻转
    background-position-x: 100px; // 恢复背景起始位置
    animation-direction: reverse, normal; // 恢复动画方向
    // 移除水平线特有的 background-color
    // background-color: transparent;
  }
  // --- END RESTORATION ---

  .imageHud { // Unique Position (keep from original)
    bottom: 15px;
    right: 15px;
  }
}

// Column 3 (CONTACT - Radar/Ripple - Inverted Pink)
.column3:hover:not(.nonInteractive) {
  // --- 雷达扫描样式 --- (保持不变)
  .hudOverlay::before { 
    // Restore 15deg conic-gradient scan
    animation: radarScan 2.5s linear infinite; 
    width: 70%; 
    height: 70%;
    border-radius: 50%; 
    // Restore 15 degree angle
    background: conic-gradient(from 0deg, 
        rgba(178, 242, 187, 0.5) 0deg 15deg, // 15 degrees beam
        transparent 15.1deg 360deg);
    border: none; 
    opacity: 0.8; 
    // Ensure z-index is appropriate if not already set
    z-index: 1; 
  }
  
  // --- 波纹动画和位置 --- (修改: 调整位置，保持错开动画)
  .ripple1, .ripple2, .ripple3 {
      animation-name: contactRippleExpandShadow;
      animation-duration: 1.8s; 
      animation-iteration-count: infinite;
      animation-timing-function: ease-out;
      // Base styles like position absolute should be on .radarRipple
  }
  // --- 修改: 调整位置使其更错落 --- 
  .ripple1 { top: 25%; left: 15%; width: 40px; height: 40px; animation-delay: 0s; } // 修改: left 从 20% 改为 15% (向左)
  .ripple2 { top: 70%; left: 60%; width: 60px; height: 60px; animation-delay: 0.4s; } // 修改: left 从 55% 改为 60% (向右)
  .ripple3 { top: 45%; left: 75%; width: 50px; height: 50px; animation-delay: 0.8s; } // 也调整了大小和位置

  .imageHud { /* position unchanged */ top: 15px; left: 15px; }
}

// Column 4 (ABOUT - Focus + 5 Random HUDs)
.column4:hover:not(.nonInteractive) {
  overflow: visible; // 新增: 允许 HUD 溢出此列
  .hudOverlay::before { 
    animation: aboutFocus 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
  
  // Main centered image HUD - no change to position, but adjust animation name if needed
  > .imageHud { // Use direct child selector '>' to target the main one
    bottom: 50%;
    left: 15px;
    transform: translateY(50%); 
    animation: fadeInImageHudCentered 0.4s ease-out 0.3s forwards; 
  }

  // Style and position the 5 random HUDs on hover
  .randomHud {
    // Apply the standard fade-in animation (slightly delayed)
    animation: fadeInImageHud 0.4s ease-out forwards;
  }

  .randomHud1 { top: 10%; left: 25%; animation-delay: 0.35s; }
  .randomHud2 { top: 30%; left: 80%; animation-delay: 0.45s; transform: scale(0.9); } // Slightly smaller
  .randomHud3 { top: 75%; left: 10%; animation-delay: 0.4s; transform: scale(1.1); } // Slightly larger
  .randomHud4 { top: 85%; left: 60%; animation-delay: 0.5s; }
  .randomHud5 { top: 5%; left: 55%; animation-delay: 0.55s; transform: scale(0.95); } 
}

// --- Keyframes --- 

// 共享动画 (保持不变)
@keyframes scanHud { 0% { background-position: 0 0; } 100% { background-position: 0 6px; } }
@keyframes fadeInScanlines { from { opacity: 0; } to { opacity: 0.2; } } // 修改: 透明度从 0.8 降到 0.2
@keyframes fadeInArkCorner { from { opacity: 0; } to { opacity: 1; } }
@keyframes fadeInImageHud { from { opacity: 0; transform: translateY(5px); } to { opacity: 1; transform: translateY(0); } }
@keyframes fadeInImageHudCentered { from { opacity: 0; transform: translateY(calc(50% + 5px)); } to { opacity: 1; transform: translateY(50%); } }

// --- 独特的悬停动画 --- 

// Restore hudExpandBox0 for WORKS
@keyframes hudExpandBox0 {
  0% { transform: translate(-50%, -50%) scale(0.7) rotate(0deg) skewX(0deg); border-color: transparent; opacity: 0; width: 75%; height: 75%; border-radius: 0; background: transparent; }
  50% { transform: translate(-50%, -50%) scale(1.05) rotate(7deg) skewX(-12deg); border: 1px solid var(--ark-highlight-green); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1.05) rotate(7deg) skewX(-12deg); border: 1px solid var(--ark-highlight-green); opacity: 1; width: 75%; height: 75%; border-radius: 0; background: transparent; }
}

// WORKS: Blueprint Draw (using border) - No longer used by default for column 0
@keyframes worksBlueprint {
  0% {
    width: 0%;
    height: 0%;
    border: 2px solid var(--ark-highlight-green);
    border-right-color: transparent;
    border-bottom-color: transparent;
    opacity: 0;
  }
  30% { // Draw top and left border
    width: 70%;
    height: 80%;
    border-right-color: transparent;
    border-bottom-color: transparent;
    opacity: 1;
  }
  60% { // Draw right border
    width: 70%;
    height: 80%;
    border-bottom-color: transparent;
    border-right-color: var(--ark-highlight-green);
    opacity: 1;
  }
  100% { // Draw bottom border
    width: 70%;
    height: 80%;
    border-color: var(--ark-highlight-green);
    opacity: 1;
    box-shadow: 0 0 8px rgba(178, 242, 187, 0.4); // Add glow at the end
  }
}

// CONTACT: Radar Scan (rotating the ::before element) - Ensure this is active
@keyframes radarScan {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

// --- 新增: 扩展绿色空心环动画 (修改: 从细变粗, 保持透明度变化) ---
@keyframes expandGreenRing {
  0% {
    transform: translate(-50%, -50%) scale(0.1);
    opacity: 0.7; // 修改: 初始透明度稍低
    border-width: 1px; // 修改: 初始边框宽度为 1px (细)
  }
  70% { // 在动画 70% 时达到最大宽度
    opacity: 0.1; // 透明度降低
    border-width: 4px; // 修改: 边框宽度增加到 4px (粗)
  }
  100% {
    transform: translate(-50%, -50%) scale(6); // 修改: 增大最终缩放比例从 4 到 6
    opacity: 0; // 完全透明
    border-width: 4px; // 修改: 保持最终边框宽度
  }
}

// --- 修改: radarRipple 基础样式 (修改: 初始边框宽度设为 1px) ---
.radarRipple {
  position: absolute;
  // top/left 将在 hover 中为每个 ripple 单独设置
  width: 35px; // 保持大小
  height: 35px; // 保持大小
  border-radius: 50%;
  border: 1px solid rgba(178, 242, 187, 0.9); // 直接使用绿色 
  opacity: 0; // 初始隐藏
  pointer-events: none;
  transform: translate(-50%, -50%) scale(0.1); // 初始缩小并居中
  transform-origin: center center; 
  z-index: 2; // 在雷达扫描之上
}

// ABOUT: Focus (corner lines moving inwards)
@keyframes aboutFocus {
  0% {
    width: 60%;
    height: 70%;
    border: 0 solid var(--ark-highlight-green);
    opacity: 0;
  }
  30% { // Corners appear far out
    width: 80%;
    height: 90%;
    border-width: 0px;
    opacity: 1;
    // Simulate corners using box-shadow trick
    box-shadow: inset 10px 10px 0 -8px var(--ark-highlight-green),  /* Top-Left */
                inset -10px 10px 0 -8px var(--ark-highlight-green), /* Top-Right */
                inset 10px -10px 0 -8px var(--ark-highlight-green), /* Bottom-Left */
                inset -10px -10px 0 -8px var(--ark-highlight-green);/* Bottom-Right */
  }
  100% { // Corners move inwards
    width: 60%;
    height: 70%;
    border-width: 0px;
    opacity: 1;
    box-shadow: inset 10px 10px 0 -8px var(--ark-highlight-green),
                inset -10px 10px 0 -8px var(--ark-highlight-green),
                inset 10px -10px 0 -8px var(--ark-highlight-green),
                inset -10px -10px 0 -8px var(--ark-highlight-green),
                0 0 10px rgba(178, 242, 187, 0.4); // Final glow
  }
}

// --- Add base styles for the new ripple elements --- 
.radarRipple {
  position: absolute;
  top: 50%;
  left: 50%;
  // --- RESTORED Base size ---
  width: 20px; // Restore base size
  height: 20px; // Restore base size
  border-radius: 50%;
  opacity: 0; // Start transparent
  pointer-events: none;
  transform: translate(-50%, -50%); // Base centering
  transform-origin: center center; 
  // --- RESTORED z-index ---
  z-index: 2; // Ripple should be above radar scan (z-index: 1)
  // --- Applied animation in hover rule now ---
  // animation: contactRippleExpandShadow 1.5s cubic-bezier(0.2, 0.8, 0.2, 1) infinite; 
}

// --- Column 默认上下线 --- (保持不变)
// 默认隐藏非 worksColumn 的上下线
.column:not(.worksColumn)::before,
.column:not(.worksColumn)::after {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 30%;
    height: 2px;
    background: var(--ark-highlight-green);
    opacity: 0; // 默认隐藏
    transition: opacity 0.2s ease-out;
}
.column:not(.worksColumn)::before { top: 0; }
.column:not(.worksColumn)::after { bottom: 0; }

// 在 hover 时显示非 worksColumn 的上下线
.column:not(.worksColumn):hover:not(.nonInteractive) {
  &::before,
  &::after {
    opacity: 1;
  }
}

// --- Add base styles for the new random HUD elements --- 
.randomHud {
  // Inherits .imageHud styles, just need initial state if different
  // Already position: absolute from .imageHud
  opacity: 0; // Start hidden
  // Use fixed positions defined in hover rule, override any default positioning from .imageHud if necessary
}

// --- Task List Animation for Column 0 (WORKS) ---

.taskContainer {
  position: absolute;
  top: 80px; // Increased top value to shift down (30px + ~50px for one task cycle)
  left: 25px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  opacity: 0;
  transition: opacity 0.2s ease-out 0.1s; // Slight delay on fade-in/out
  pointer-events: none; // Ensure it doesn't interfere with column click
  z-index: 4; // Above corners, below image HUD maybe
}

.taskItem {
  display: flex;
  align-items: center;
  // Individual item fade-in handled by animation delay
}

.taskSquare {
  width: 8px;
  height: 8px;
  background-color: var(--ark-highlight-green);
  filter: drop-shadow(0 0 2px var(--ark-highlight-green));
  margin-right: 8px;
  flex-shrink: 0; // Prevent shrinking
  opacity: 0; // Initially hidden
}

.taskTextWrapper {
  overflow: hidden;
  position: relative;
  height: 1em; // Match line height
}

.taskText {
  display: inline-block;
  white-space: nowrap;
  color: var(--ark-highlight-green);
  font-family: 'Consolas', 'Menlo', 'Courier New', monospace;
  font-size: 0.8rem;
  letter-spacing: 0.5px;
  text-shadow: 0 0 3px rgba(178, 242, 187, 0.5);
  opacity: 0; // Initially hidden
  // Reset transform from previous attempts if any
  transform: translateX(0); 
  // Use clip-path for reveal effect
  clip-path: inset(0 100% 0 0);
}

.taskLine {
  width: 2px; // Increased thickness
  height: 34px; // Adjusted height (base + overlap)
  background-color: var(--ark-highlight-green);
  opacity: 0.65; 
  margin-left: 3px; // Adjusted alignment for 2px width (center of 8px square is 4px, line center is 1px -> 4-1=3)
  margin-top: -4px; // Pull line up to overlap square above
  transform-origin: top;
  transform: scaleY(0); // Initially hidden
  opacity: 0; // Initially hidden for animation
}

// Hover effect on Column 0 to trigger animations
.column0:hover:not(.nonInteractive) {
  .taskContainer {
    opacity: 1;
  }

  // Animation Timings 
  $square-duration: 0.15s;        
  $text-reveal-duration: 0.25s; 
  $line-duration: 0.2s;         
  $stagger-delay: 0.04s; // Delay between text end and line start, and line end and next square start      
  $initial-delay: 0.1s;       
  $total-tasks: 30;         // Updated to 30

  // Calculate the total time for one full cycle (square + text + line + delays)
  // Cycle: Square -> Text -> Delay -> Line -> Delay -> Next Square
  $time_per_cycle: $square-duration + $text-reveal-duration + $stagger-delay + $line-duration + $stagger-delay;

  // SCSS loop to generate animation rules
  @for $i from 1 through $total-tasks {
    // Calculate start time for the current task
    $task-start: $initial-delay + ($i - 1) * $time_per_cycle;
    
    // Calculate relevant end/start times for this task and its line
    $task-square-end: $task-start + $square-duration; // Text starts right after square
    $task-text-end: $task-square-end + $text-reveal-duration;
    $line-start: $task-text-end + $stagger-delay; // Line starts after text ends + delay

    // Apply animation to task item (odd nth-child)
    $item-selector-index: ($i * 2) - 1;
    .taskItem:nth-child(#{$item-selector-index}) { 
      .taskSquare { animation: revealTaskSquare $square-duration ease-out $task-start forwards; }
      .taskText { animation: revealTaskTextClip $text-reveal-duration ease-out $task-square-end forwards; } // Text animation starts when square ends
    }

    // Apply animation to the line following the task item (even nth-child), if it exists
    @if $i < $total-tasks {
      $line-selector-index: $i * 2;
      .taskLine:nth-child(#{$line-selector-index}) { 
        animation: drawTaskLine $line-duration ease-out $line-start forwards; 
      }
    }
  }
}

// Keyframes for Task List Animation
@keyframes revealTaskSquare {
  from { opacity: 0; transform: scale(0.5); }
  to { opacity: 1; transform: scale(1); }
}

// Changed text reveal to use clip-path
@keyframes revealTaskTextClip {
  from { 
    opacity: 1; // Make visible from start
    clip-path: inset(0 100% 0 0); 
  }
  to { 
    opacity: 1;
    clip-path: inset(0 0 0 0); 
  }
}

@keyframes drawTaskLine {
  from { opacity: 0; transform: scaleY(0); }
  to { opacity: 0.65; transform: scaleY(1); } 
}

// Keyframe for ECG scroll
@keyframes ecgScroll {
  from { background-position-x: 0px; }
  to { background-position-x: -100px; } // Scroll by the new background-size width
}

// Keyframe for ECG fade-in
@keyframes fadeInEcg {
  from { opacity: 0; }
  to { opacity: 0.8; } // Fade to desired opacity
}

// --- Dedicated Scanlines for LIFE column ---
.lifeScanlines {
  position: absolute;
  inset: 0; // Cover the entire overlay area
  background: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 2px,
    rgba(178, 242, 187, 0.2) 2px,
    rgba(178, 242, 187, 0.2) 3px
  );
  background-size: 100% 6px;
  filter: blur(0.3px);
  background-position: 0 0;
  opacity: 0; // Initially hidden
  z-index: 1; // Ensure it's below ECG lines (which use ::before/::after at z-index 2 relative to hudOverlay)
  transition: opacity 0.2s ease-out;

  // Trigger animation on hover of column2
  .column2:hover:not(.nonInteractive) & {
    animation: scanHud 1.5s linear infinite, fadeInScanlines 0.2s ease-out forwards;
    animation-delay: 0.2s, 0.2s; // Delay slightly after ECG fade-in
  }
}

// --- 新增: 倒置状态下的心电图扫描线（粉色）---
.invertedScanlines {
  background: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 2px,
    rgba(var(--ark-primary-rgb), 0.2) 2px,
    rgba(var(--ark-primary-rgb), 0.2) 3px
  );
  
  // Ensure animations still apply when column is hovered
  .column2:hover:not(.nonInteractive) & {
    animation: scanHud 1.5s linear infinite, fadeInScanlines 0.2s ease-out forwards;
    animation-delay: 0.2s, 0.2s;
  }
}

// --- Decorative text in Left Panel ---
.fateTextContainer {
  position: absolute; // 保持 absolute，相对于固定的 leftPanel 定位
  bottom: 19%; // 修改: 适配新的边框底部位置
  right: 21%;
  display: flex;
  flex-direction: column;
  align-items: flex-end; // Align items to the right
  opacity: 0; // Start hidden
  transition: opacity 0.5s ease-out;
  z-index: 5; // 在 leftPanel 内部的堆叠顺序
  pointer-events: none; // Prevent interaction

  // Fade in after main animations complete
  .leftPanel.animated & {
    // Delay calculation: Sync with HUD start (~2300ms total)
    // HUD starts at 2200ms + 100ms = 2300ms
    // Left panel gets .animated at 200ms + 100ms = 300ms
    // Required delay = 2300ms - 300ms = 2000ms
    transition-delay: 2.0s; // Original: 4.5s
    opacity: 0.7; // Fade in to a slightly transparent state
  }
}

.fateText {
  font-family: 'Dosis', sans-serif;
  font-size: 0.75rem;
  color: var(--ark-text-secondary); // Use a secondary text color
  letter-spacing: 0.5px;
  margin-bottom: 4px; // Space between text and line
  text-align: right;
  // --- 新增: 相对定位用于光标 ---
  position: relative;
}

// --- 新增: 打字机光标样式 ---
.fateTextContainer.typingActive .fateText::after {
  content: '_'; // 使用下划线作为光标
  position: absolute;
  right: -0.1em; // 稍微偏移到文字右侧
  bottom: -0.1em; // 调整垂直位置
  color: var(--ark-text-secondary); // 光标颜色
  animation: blinkCursor 0.8s infinite;
  font-weight: bold;
}

.fateLine {
  width: 270px; // Increased width from 150px
  height: 1px;
  border-bottom: 1px dashed var(--ark-border); // Dashed line using border
  position: relative; // Needed for pseudo-element positioning

  &::before {
    content: '';
    position: absolute;
    width: 1px;      // Slash thickness
    height: 16px;    // Doubled slash length from 8px
    background-color: var(--ark-border);
    left: calc(100% / 6); // Position 1/6th from the left
    bottom: -7px;      // Adjusted vertical position for doubled height
    transform: rotate(-30deg); // Tilt left (adjust angle as needed)
    transform-origin: center bottom; // Rotate around bottom-center
  }

  // Add small rectangle at the end
  &::after {
    content: '';
    position: absolute;
    width: 10px;  // Doubled rectangle width
    height: 6px;  // Doubled rectangle height
    background-color: var(--ark-border);
    right: 0;     // Position at the right end of the line
    bottom: -2.5px; // Align vertically with the dashed line (center of 6px height is 3px, align with 1px line -> move up 2.5px from bottom)
  }
}

// --- 新增: 光标闪烁动画 ---
@keyframes blinkCursor {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

// --- New Keyframe for Meteor Trail (Top->Bottom) --- 
 @keyframes pulseMeteor {
  0% {
    background-position: 50% -100%; // Adjust start position
    opacity: 0;
  }
  20% { 
    opacity: 1; // Fade in quickly
  }
  80% {
    opacity: 0.9; // Hold opacity
  }
  100% {
    background-position: 50% 100%; // End below
    opacity: 0; // Fade out
  } 
} 

// --- New Keyframe for REVERSE Meteor Trail (Bottom->Top) --- 
// MODIFIED: Now animates Top->Bottom like pulseMeteor
@keyframes pulseMeteorReverse {
  0% {
    // Start at top
    background-position: center -200%; // Was: center 100%
    opacity: 0;
  }
  20% { 
    opacity: 1; // Fade in quickly
  }
  80% {
    opacity: 0.9; // Hold opacity
  }
  100% {
    // End at bottom
    background-position: center 100%; // Was: center -200%
    opacity: 0; // Fade out
  }
}

// 添加新的 buildTowerScale 关键帧 (动画 scaleY)
@keyframes buildTowerScale {
  0% {
    opacity: 0;
    transform: translateX(-50%) scaleY(0);
  }
  100% {
    opacity: 1;
    transform: translateX(-50%) scaleY(2); // 保持缩放比例为 2
  }
}

// --- 添加分支动画样式 ---

.branchContainer {
  position: absolute;
  left: 50%; // 水平居中对齐主线条
  transform: translateX(-50%) skewX(-15deg); // 初始居中并应用倾斜
  transform-origin: center center; // 倾斜基点
  opacity: 0; // 修改：容器初始透明，通过动画淡入和滑出
  display: flex;
  flex-direction: column; // 修改：垂直排列
  align-items: center; // 修改：水平居中对齐内部元素
  pointer-events: none;
  z-index: 1; // 低于主线条 (::before 是 z-index 2 隐含?)
}

// --- 修改：定义四个分支的垂直位置 ---
.branch1 { top: 20%; }
.branch2 { top: 40%; }
.branch3 { top: 60%; }
.branch4 { top: 80%; }

// .leftBranch 和 .rightBranch 仅用于区分动画方向，不再设置 top
.leftBranch { justify-content: flex-end; /* 保持 */ }
.rightBranch { justify-content: flex-start; /* 保持 */ }

.branchSquare {
  width: 8px;
  height: 8px;
  background-color: var(--ark-highlight-green);
  filter: drop-shadow(0 0 3px var(--ark-highlight-green));
  // opacity: 0; // 移除：由父容器动画控制
  flex-shrink: 0;
  // 方块不再单独设置 transform，而是通过容器移动
}

.branchText {
  color: var(--ark-highlight-green);
  font-family: 'Consolas', 'Menlo', 'Courier New', monospace;
  font-size: 0.8rem;
  letter-spacing: 0.5px;
  text-shadow: 0 0 3px rgba(178, 242, 187, 0.5);
  opacity: 0; // 修改：明确初始为透明
  white-space: pre-wrap; // 修改：处理换行符
  margin-top: 5px; 
  line-height: 1.1; // 添加：调整行高以获得更紧凑的竖排效果
  // 文字不再单独设置 transform，而是通过容器移动
}

// --- 添加分支动画关键帧 ---

@keyframes slideOutLeft {
  from {
    opacity: 0;
    transform: translateX(0) ; // 保持倾斜
  }
  to {
    opacity: 1;
    transform: translateX(-28px) ; // 修改：向左移动距离减小
  }
}

@keyframes slideOutRight {
  from {
    opacity: 0;
    transform: translateX(0) ; // 保持倾斜
  }
  to {
    opacity: 1;
    transform: translateX(30px) ; // 修改：向右移动距离减小，并略大于左侧绝对值
  }
}

// 新增：文字向下淡入动画
@keyframes fadeInTextDown {
  from {
    opacity: 0;
    transform: translateY(-20px); // 从上方一点开始
  }
  to {
    opacity: 1;
    transform: translateY(0); // 移动到最终位置
  }
}

// --- 新增: 环境参数容器样式 (修改后) ---
.envParamsContainer {
  position: absolute; // 保持 absolute，相对于固定的 leftPanel 定位
  // 定位在左侧面板边框 (15%) 的内侧左下角
  bottom: 19%; // 修改: 适配新的边框底部位置
  left: 16.5%;   // 保持 17%，靠近内部左边框
  z-index: 10; // 在 leftPanel 内部的堆叠顺序
  text-align: left;
  max-width: 220px;
  opacity: 0; // 初始隐藏
  transition: opacity 0.5s ease-out;
  // 与 fateTextContainer 使用相同的延迟
  transition-delay: 2.0s;
  pointer-events: none; // 避免遮挡

  // 移除 .animated 选择器，改为依赖 leftPanel.animated
  .leftPanel.animated & {
    opacity: 0.7; // 与 fateTextContainer 相同的透明度
    transform: none; // 移除 transform
  }

  &.typingActive .envParamsText::after {
    content: '_'; // Display the cursor character
    position: absolute;
    color: var(--ark-text-secondary);
    animation: blinkCursor 0.8s infinite;
    font-weight: bold;
    right: -0.2em; 
    bottom: -0.1em;
  }
}

.envParamsText {
  // --- 修改: 样式与 fateText 匹配 ---
  font-family: 'Dosis', sans-serif;
  font-size: 0.75rem;
  color: var(--ark-text-secondary);
  letter-spacing: 0.5px;
  // --- 保留 --- 
  white-space: pre; // 保持换行
  line-height: 1.4; // 可以调整行间距
  position: relative; // 为了光标定位
  margin: 0; // 移除默认 margin

  // --- 移除背景和边框 --- 
  background-color: transparent;
  box-shadow: none;
  border: none;
  padding: 0; // 移除内边距
  
  // --- 移除选择和伪元素样式 --- 
  &::selection {
    // 可以保留或移除，如果保留，颜色可能需要调整
    background-color: rgba(var(--ark-secondary-rgb), 0.7);
    color: var(--ark-dark-blue);
  }
  
  // --- 移除 ::before (红色光晕) ---
  /*
  &::before {
    ...
  }
  */
}

// --- 新增: 警告脉冲动画 ---
@keyframes pulseWarning {
  0% {
    opacity: 0.2;
  }
  100% {
    opacity: 0.8;
  }
}

// --- 新增: 内容区域样式 ---
.contentSection {
  width: calc(100% * 0.618 / 1.618 + 2vw);
  margin-left: calc(100% / 1.618 - 2vw);
  margin-bottom: 10vh;
  min-height: 100vh;
  padding: 200px 40px 80px 0px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  position: relative;
  color: var(--ark-text);

  h2 {
    font-family: 'ZELDA Free', sans-serif;
    font-size: 3rem;
    font-weight: 300;
    color: var(--ark-primary);
    margin-bottom: 40px;
    letter-spacing: 2px;
    text-transform: uppercase;
    border-bottom: 1px solid var(--ark-border);
    padding-bottom: 10px;
    text-align: left;
    width: 100%; // 确保标题元素占满可用宽度
    box-sizing: border-box; // 确保 padding 不会影响总宽度计算
  }

  p {
    font-family: 'Dosis', sans-serif;
    font-size: 1.1rem;
    line-height: 1.8;
    text-align: left;
    opacity: 0.8;
    margin-bottom: 20px;
  }
}

// --- 新增: 内容包裹器样式 --- 
.contentWrapper {
  // background-color: var(--ark-dark-blue); // 移除背景色，使其透明
  overflow-y: auto; // 允许垂直滚动
  scroll-behavior: smooth; // 平滑滚动内部
  // 继承上面的 absolute 定位和显隐控制
  // 确保 z-index 正确

  /* 新增: 隐藏滚动条 */
  scrollbar-width: none; /* Firefox */
  &::-webkit-scrollbar { 
    display: none; /* WebKit browsers */
  }
  pointer-events: none; // --- ADD: Ensure layout containers don't block events --- 
}

// --- 新增: 调整最后一个区域 (ABOUT) 的样式 --- 
.aboutSection {
  background-color: rgba(50, 50, 50, 0.8); // 修改: 降低 alpha 值使背景更透明
  /* 删除圆角 */
  border-radius: 0;
  min-height: auto; // 移除最小高度限制
  padding: 30px 40px 100px 40px; // 修改: 再次减小顶部内边距
  margin-bottom: 0; // 底部外边距设为 0
  position: relative; // 确保 position 不为 static，以便 overflow 生效
  overflow: hidden; // 隐藏内部元素的溢出
  z-index: 2; // --- ADD: Ensure About is above Contact background ---
}

// --- 新增: Power Display 容器样式 --- (尺寸调整)
.powerDisplay {
  position: absolute;
  top: 19%; 
  left: 17%; 
  display: flex;
  align-items: center;
  gap: 10px; // 增大图标和文字间距
  color: var(--ark-primary); 
  font-family: 'Dosis', monospace;
  font-size: 0.9rem; // 稍微增大字体
  z-index: 10; 
  opacity: 0;
  transition: opacity 0.8s ease;

  .leftPanel.animated & { 
    transition-delay: 2.0s; 
    opacity: 0.8;
  }
}

// --- 新增: 电池图标样式 --- 
.batteryIcon {
  display: flex; // 使用 flex 布局内部格子
  align-items: center; // 垂直居中格子
  justify-content: space-around; // 格子均匀分布
  padding: 1px; // 电池内部边距
  width: 28.5px; // 增大电池宽度
  height: 14px; // 增大电池高度
  border: 1px solid var(--ark-primary);
  // border-radius: 2px; // 移除圆角，变为方框
  position: relative;
  // margin-right: 4px; // 移除，使用 gap 代替

  // 恢复电池正极
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    right: -4px; // 调整位置使其在边框外
    width: 2px;  // 调整宽度
    height: 6px; // 调整高度
    background-color: var(--ark-primary);
    transform: translateY(-50%);
    border-radius: 0 1px 1px 0; // 圆角
  }
}

// --- 新增: 电池格子样式 --- 
.batteryLevelSegment {
  display: inline-block;
  width: 4px; // 每个格子的宽度
  height: 8px; // 每个格子的高度 (小于电池内部高度)
  // 修改: 默认未填充应该是浅色透明，而不是深色
  background-color: rgba(var(--ark-text-secondary-rgb, 200, 200, 200), 0.2); // 浅灰色未填充
  // margin: 0 1px; // 格子间距 (使用 justify-content 代替)
  transition: background-color 0.3s ease; // 填充颜色变化过渡
}

// --- 新增: 恢复默认的填充状态样式 --- 
.batteryLevelSegment.filled {
  background-color: var(--ark-highlight-green); // 默认使用高亮绿色填充
}

// --- 新增: Power Text 样式 (可选) ---
.powerText {
  // 可以添加特定样式，例如字体粗细
  font-weight: bold;
}


.leftPanel {
  // flex: 1; // 移除 flex: 1
  width: calc(100% / 1.618); // 设置明确宽度
// ... (其余代码保持不变) ...
}

// --- 修改: 环境参数容器样式 (可能需要调整位置或边距) ---
.envParamsContainer {
  position: absolute; 
  bottom: 19%; 
  left: 16.5%; 
  z-index: 10; 
  text-align: left;
  // max-width: 220px; // 保持或调整
  opacity: 0; 
  transition: opacity 0.5s ease-out;
  transition-delay: 2.0s;
  pointer-events: none; 

  .leftPanel.animated & {
    opacity: 0.7; 
    transform: none; 
  }
  
  &.typingActive .envParamsText::after {
    content: '_'; // Display the cursor character
    position: absolute;
    color: var(--ark-text-secondary);
    animation: blinkCursor 0.8s infinite;
    font-weight: bold;
    right: -0.2em; 
    bottom: -0.1em;
  }
}

.envParamsText {
  // ... (样式保持不变) ...
  // 如果需要为打字机光标腾出空间，可以添加 padding-right
}

// ... (envParamsText 样式结束) ...

// --- 新增: Works Section 特定样式 ---
.worksSection {
  // 覆盖默认的 align-items，让网格可以正常排列
  align-items: stretch; 
}

// --- 新增: 项目卡片网格布局 ---
.projectGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); // 响应式网格
  gap: 30px; // 网格间距
  width: 100%; // 占满父容器宽度
  margin-top: 40px; // 与标题的间距
}

// --- 新增: 项目卡片样式 ---
.projectCard {
  background-color: rgba(var(--ark-secondary-rgb), 0.1); // 轻微背景色
  border: 1px solid var(--ark-border); 
  padding: 20px;
  position: relative; // 用于绝对定位角标
  transition: all 0.3s ease;
  overflow: hidden; // 隐藏溢出的伪元素效果
  cursor: default; // 默认光标

  &:hover {
    background-color: rgba(var(--ark-secondary-rgb), 0.18);
    border-color: var(--ark-primary);
    transform: translateY(-5px); // 轻微上浮
    box-shadow: 0 5px 15px rgba(var(--ark-primary-rgb), 0.1);

    .cardBorderTopLeft,
    .cardBorderBottomRight {
      opacity: 1;
      width: 30px;
      height: 30px;
    }
    
    .projectImagePlaceholder {
      filter: brightness(1.1); // 图片变亮一点
    }
    .imageScanlineOverlay {
       opacity: 0.4; // 扫描线更明显
    }
    .projectLink {
      background-color: var(--ark-primary);
      color: var(--ark-dark-blue);
    }
  }
}

// --- 新增: 卡片角标样式 --- 
.cardBorderTopLeft,
.cardBorderBottomRight {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  border-color: var(--ark-primary); // 使用主高亮色
  border-style: solid;
  border-width: 0;
  opacity: 0.6; // 默认半透明
  transition: all 0.3s ease;
  pointer-events: none;
}

.cardBorderTopLeft { 
  top: -1px;
  left: -1px;
  border-top-width: 2px;
  border-left-width: 2px;
}

.cardBorderBottomRight {
  bottom: -1px;
  right: -1px;
  border-bottom-width: 2px;
  border-right-width: 2px;
}

// --- 新增: 项目图片容器和占位符 --- 
.projectImageContainer {
  margin-bottom: 20px;
  position: relative;
}

.projectImagePlaceholder {
  width: 100%;
  padding-top: 56.25%; // 16:9 宽高比
  // background-color: #1a1f2b; // 深色背景
  background-color: var(--ark-primary); // 修改: 使用主高亮绿色
  background-size: cover;
  background-position: center;
  border: 1px solid var(--ark-border);
  position: relative;
  overflow: hidden;
  transition: filter 0.3s ease; // 保留 filter 过渡，即使默认不应用
  // filter: brightness(0.9) saturate(0.8); // 移除: 影响纯色显示
}

// --- 新增: 图片扫描线叠加 --- 
.imageScanlineOverlay {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 0, 0, 0.15) 50%
  );
  background-size: 100% 4px;
  opacity: 0.2;
  pointer-events: none;
  animation: scanMove 10s linear infinite; // 复用之前的扫描线动画
  transition: opacity 0.3s ease;
}

// --- 新增: 项目内容区域 --- 
.projectContent {
  // 布局由父级 flex 控制
}

// --- 新增: 项目标题样式 --- 
.projectTitle {
  font-family: 'Dosis', monospace; // 使用 Dosis 或等宽
  font-size: 1.4rem;
  font-weight: bold; // 加粗
  color: var(--ark-primary); // 主高亮色
  margin-bottom: 10px;
  letter-spacing: 1px;
  text-transform: uppercase; // 大写
}

.titleBracket {
  color: var(--ark-border); // 方括号用边框色
  opacity: 0.7;
  font-weight: normal;
  margin: 0 5px;
}

// --- 新增: 项目描述样式 --- 
.projectDescription {
  font-family: 'Dosis', sans-serif;
  font-size: 0.95rem;
  color: var(--ark-text-secondary); // 次要文本颜色
  line-height: 1.7;
  margin-bottom: 15px;
  opacity: 0.8;
}

// --- 新增: 项目技术栈标签 --- 
.projectTech {
  margin-bottom: 20px;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.techTag {
  background-color: rgba(var(--ark-primary-rgb), 0.15); // 标签背景
  border: 1px solid rgba(var(--ark-primary-rgb), 0.3);
  color: var(--ark-primary);
  font-family: 'Consolas', monospace; // 等宽字体
  font-size: 0.75rem;
  padding: 3px 8px;
  border-radius: 3px;
  white-space: nowrap;
}

// --- 新增: 项目链接样式 --- 
.projectLink {
  display: inline-block;
  font-family: 'Dosis', monospace;
  font-size: 0.9rem;
  color: var(--ark-primary);
  text-decoration: none;
  border: 1px solid var(--ark-primary);
  padding: 8px 15px;
  transition: background-color 0.3s, color 0.3s;
  text-transform: uppercase;
  letter-spacing: 1px;
  cursor: pointer;

  &:hover {
    // Hover 效果已在 .projectCard:hover 中定义
  }
}

// --- 新增: 警告脉冲动画 --- 

// --- 新增: 备案号和版权信息样式 ---
.footerInfo {
  font-family: 'Dosis', sans-serif; // 与其他 UI 文本统一
  font-size: 0.85rem; // 比 HUD (0.7rem) 稍大
  color: var(--ark-text-secondary); // 使用次要文本颜色
  opacity: 0.7; // 轻微透明
  margin-top: 20px; // 与上方元素的间距
  text-align: left; // 确保左对齐
  line-height: 1.5; // 新增: 调整行高，让两行间距更舒适

  a {
    font-size: inherit; // 新增: 确保链接字体大小与父元素一致
    color: inherit; // 继承父元素的颜色
    text-decoration: none; // 去除下划线
    transition: color 0.3s, opacity 0.3s;

    &:hover {
      color: var(--ark-primary); // 悬停时使用主高亮色
      opacity: 1;
    }
  }
}

// --- 新增: 倒置状态下的心电图波形为粉色 --- 
.inverted {
  .column2:hover:not(.nonInteractive) {
    // --- 保持上方 ECG 波形为粉色 --- 
    .hudOverlay::before {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='50' viewBox='0 0 100 50'%3E%3Cpath d='M0,25 L20,25 L25,10 L35,40 L40,25 L60,25 L65,15 L75,35 L80,25 L100,25' stroke='rgb(224, 143, 255)' stroke-width='1.5' fill='none'/%3E%3C/svg%3E");
      filter: drop-shadow(0 0 2px rgba(var(--ark-primary-rgb), 0.8));
      // 动画等其他属性保持不变
    }
    // --- 修改下方为粉色水平扫描线 (覆盖默认的下方 ECG 样式) ---
    .hudOverlay::after {
      // 覆盖 ECG 的样式
      background-image: none; // 移除 SVG 背景
      background-color: var(--ark-primary); // 使用粉色作为背景色（即线条颜色）
      height: 2px; // 设置线条高度
      transform: translateY(35px) scaleY(1); // 移除 scaleY(-1) 翻转
      animation-name: fadeInScanlines; // 仅使用淡入动画
      animation-duration: 0.4s;
      animation-timing-function: ease-out;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;
      animation-delay: 0.1s;
      animation-direction: normal;
      filter: drop-shadow(0 0 2px rgba(var(--ark-primary-rgb), 0.8));
      // 其他 ECG 特定属性如 background-size, background-repeat, background-position-x 无需设置
    }
  }

  // --- 新增: 倒置状态下的 CONTACT 列悬停效果 --- 
  .column3:hover:not(.nonInteractive) {
    // --- 修改雷达扫描颜色 --- 
    .hudOverlay::before {
      // Use pink/purple conic-gradient
      background: conic-gradient(from 0deg, 
          rgba(var(--ark-primary-rgb), 0.5) 0deg 15deg, // Use inverted primary color
          transparent 15.1deg 360deg);
      // Keep other radar styles (animation, size, etc.)
    }

    // --- 波纹动画和位置保持不变，但动画本身会使用下面的倒置版本 --- 
    // .ripple1, .ripple2, .ripple3 ... 
  }

  // --- 新增: 倒置状态下的波纹动画 (粉色) --- 
  /* --- MODIFIED: Comment out the inverted ripple animation ---
  @keyframes contactRippleExpandShadow {
    0% {
      border: 8px solid rgba(var(--ark-primary-rgb), 0.8); // 使用倒置颜色
      box-shadow: none;
      opacity: 0.9;
      transform: translate(-50%, -50%) scale(0.1);
    }
    50% {
      border-width: 8px; 
      opacity: 0.4;
      box-shadow: none;
    }
    100% {
      border: 8px solid rgba(var(--ark-primary-rgb), 0); // 使用倒置颜色
      box-shadow: none;
      opacity: 0;
      transform: translate(-50%, -50%) scale(3.5); 
    }
  }
  */ // --- END MODIFICATION ---

  // ... potentially other inverted styles ...

  .backButton {
     // --- 修改: 满电状态下的默认样式 --- 
     background: #ffffff; // 白色背景
     border-color: #cccccc; // 浅灰色边框
     color: #333333; // 深灰色文字
     &:hover {
       // --- 修改: 满电状态下的悬停样式 --- 
       background: #aaaaaa; // 灰色背景
       border-color: #888888; // 深一点的灰色边框
       color: #ffffff; // 白色文字
     }
  }
}

// --- 新增: 拉杆容器样式 ---
.leverGroup {
  position: absolute;
  top: 17.5%; // 保持垂直位置
  right: 21%; // 修改: 从 10% 增加到 25%，将组向左移动
  display: flex;
  flex-direction: row; // 水平排列
  gap: 15px; // 拉杆之间的间距 (可调整)
  z-index: 11; // 保持层级
  pointer-events: auto; // 允许容器内的元素响应事件
}

// --- 修改: About Section 内的容器布局 --- 
.aboutContentContainer {
  display: flex; // 保持 flex 布局
  // gap: 20px; // 移除 gap，使用 margin 控制间距
  align-items: flex-start; // 顶部对齐
}

.aboutTextContent {
  // flex: 1; // 移除 flex: 1，让其自然宽度
  margin-right: 60px; // 在文本和图片之间添加一些右边距
}

.aboutImageContainer {
  // flex-shrink: 0; // 不再需要
  width: 150px; // 可以调整图片宽度
  // margin-left: auto; // 移除，不再推到右侧
  margin-top: 20px; // 在图片上方添加间距
  margin-bottom: 20px; // 在图片下方添加间距 (可选)
}

.aboutImage {
  display: block; // 确保图片表现为块级元素
  width: 100%; // 图片宽度充满容器
  height: auto; // 保持图片比例
  filter: grayscale(100%); // 应用灰度滤镜
  opacity: 0.8; // 可以稍微降低透明度，使其更融入背景
}

// --- 新增: Experience Section 特定样式 ---
.experienceSection {
  display: flex;
  flex-direction: column;
  align-items: flex-start; // 修改: 从 center 改为 flex-start，使其与 .lifeSection 等对齐
  padding: 40px 20px 0px 0px; // --- MODIFY: Reduce bottom padding --- 
  min-height: auto; // --- ADD: Override min-height --- 
}

.experienceTimeline {
  position: relative;
  width: 100%;
  max-width: 800px; // 限制时间线最大宽度
  margin-top: 30px; // 与标题间距

  // The central vertical line
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 2px;
    height: 100%;
    background-color: var(--ark-border); // Using border color for the line
    z-index: 1;
  }
}

.timelineItem {
  position: relative;
  width: 50%; // Each item takes half the width
  margin-bottom: 15px; // Unified small vertical spacing between all items
  padding: 0 40px; // Padding for spacing from the center line and content
  box-sizing: border-box;
  z-index: 2;
  transition: opacity 0.3s;

  // Timeline point (circle)
  .timelinePoint {
    content: '';
    position: absolute;
    top: 15px; // Default vertical position (will be adjusted for secondary items)
    width: 12px;
    height: 12px;
    background-color: var(--ark-dark-blue);
    border: 2px solid var(--ark-primary);
    border-radius: 50%;
    z-index: 3;
    box-shadow: 0 0 5px rgba(var(--ark-primary-rgb), 0.5);
    transition: background-color 0.3s, border-color 0.3s, top 0.3s;
  }

  // Left-side items
  &.timelineItemLeft {
    left: 0; // Position on the left half
    padding-right: 52px; // Adjust padding (40px + half point width + border)
    text-align: right; // Align text to the right

    .timelinePoint {
      right: -8px; // Position point to the left of the center line (adjust value as needed)
    }

    .timelineContent {
      text-align: right;
      margin-left: auto; // Ensure content aligns right when max-width is set
    }
  }

  // Right-side items
  &.timelineItemRight {
    left: 50%; // Position on the right half
    padding-left: 52px; // Adjust padding
    text-align: left; // Align text to the left

    .timelinePoint {
      left: -8px; // Position point to the right of the center line
    }
     .timelineContent {
      text-align: left;
      margin-right: auto; // Ensure content aligns left when max-width is set
    }
  }

  // Remove margin from the last item
  &:last-child {
    margin-bottom: 0;
  }

  // --- Styling for Secondary Items (Internship, Volunteer) ---
  &:not(.educationItem) {
    opacity: 0.8; // Slightly lower opacity

    .timelinePoint {
      top: 10px; // Adjust point position for smaller boxes
      // Optional: make point smaller/different for secondary items
      // width: 10px;
      // height: 10px;
      // border-width: 1px;
    }

    &:hover {
       opacity: 1; // Full opacity on hover
    }
  }
}

.timelineContent {
  background-color: rgba(var(--ark-secondary-rgb), 0.08);
  border: 1px solid var(--ark-border);
  padding: 15px 18px; // Default padding (will be overridden)
  position: relative;
  border-radius: 4px; // Add slight rounding
  transition: border-color 0.3s, background-color 0.3s, padding 0.3s, max-width 0.3s;
  max-width: none; // Default: no width limit

  &:hover {
    border-color: var(--ark-primary);
    background-color: rgba(var(--ark-secondary-rgb), 0.15);
  }

  h3 {
    font-family: 'Dosis', monospace;
    font-size: 1.3rem; // Default title size
    color: var(--ark-primary);
    margin-top: 0;
    margin-bottom: 6px;
    font-weight: bold;
    transition: font-size 0.3s, margin-bottom 0.3s;
  }

  p {
    font-family: 'Dosis', sans-serif;
    font-size: 0.95rem; // Default paragraph size
    color: var(--ark-text-secondary);
    line-height: 1.5;
    margin-bottom: 4px;
    opacity: 0.8;
    transition: font-size 0.3s, line-height 0.3s;

    &:last-child {
      margin-bottom: 0;
    }
  }

  // --- Specific Styles for Secondary Item Content ---
  .timelineItem:not(.educationItem) & {
    padding: 8px 12px; // Smaller padding for compactness
    max-width: 280px; // Limit width to make it narrower
    h3 {
      font-size: 1.0rem; // Smaller title
      margin-bottom: 4px;
    }
    p {
      font-size: 0.8rem; // Smaller text
      line-height: 1.4; // Tighter line height
      margin-bottom: 2px;
    }
    .timelineYear {
      margin-bottom: 8px; // Reduce space below year tag
    }
  }
}

// --- Specific Styles for Primary (Education) Item Content ---
.educationItem .timelineContent {
  padding: 18px 18px; // Maintain shorter vertical, wider horizontal padding
  max-width: none; // Ensure no width limit

  p {
    line-height: 1.6;
    margin-bottom: 5px;
  }
}

// --- NEW: Right-align specific paragraphs in the first education item ---
.timelineItemRight.educationItem .timelineContent p {
  text-align: right; // Override text-align for these specific paragraphs
}

.timelineYear {
  display: inline-block;
  font-family: 'Consolas', monospace;
  font-size: 0.8rem;
  color: var(--ark-text-secondary);
  background-color: rgba(var(--ark-border-rgb), 0.2);
  padding: 3px 8px;
  margin-bottom: 15px; // Default space below year tag (overridden for secondary)
  border-radius: 3px;
  opacity: 0.7;
  transition: margin-bottom 0.3s;
}

// --- Style for numbers within timeline text ---
.timelineNumber {
  font-family: 'Consolas', monospace; // Use monospace font for numbers
}

// ... rest of the styles ...

// --- 新增: 全局返回按钮样式 (位于左侧面板) ---
.globalBackButton {
  position: absolute;
  top: calc(17.5% + 100px); // 稍微再下移一点
  right: calc(21% + 10px); // 水平位置微调，更靠近拉杆组
  width: 80px;  // 修改: 减小宽度
  height: 20px; // 修改: 减小高度
  background: rgba(var(--ark-secondary-rgb), 0.15);
  border: 1px solid var(--ark-border);
  color: var(--ark-text-secondary);
  font-family: 'Dosis', monospace;
  font-size: 0.8rem;
  padding: 0; // 保持无内边距
  cursor: pointer;
  z-index: 5;
  // 修改: 提高初始透明度
  opacity: 0; // 从 0 改为 0.3，减轻淡入
  pointer-events: none;
  transform: translateX(50px); // 修改: 增加初始向右偏移量，确保从外部滑入
  transition: opacity 0.4s ease-out, transform 0.4s ease-out, background-color 0.3s, color 0.3s, border-color 0.3s;
  white-space: nowrap;
  // border-radius: 0; // 保持无圆角

  // 添加箭头图标样式
  &::before {
    content: '←'; // 使用左箭头字符
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.1rem; // 调整箭头大小
    line-height: 1;
    color: inherit; // 继承按钮颜色
    transition: color 0.3s; // 添加颜色过渡
  }


  &.visible {
    opacity: 0.7; // 显示时半透明
    pointer-events: auto;
    transform: translateX(0); // 移回原位
  }

  &:hover {
    background: var(--ark-primary);
    border-color: var(--ark-primary);
    opacity: 1; // 悬停时不透明
    // 修改: 悬停时箭头颜色
    &::before {
       color: var(--ark-dark-blue);
    }
  }

  // --- 倒置模式下的样式 ---
  :global(.inverted) & {
     background: rgba(0, 0, 0, 0.1);
     border-color: var(--ark-border);
     color: var(--ark-text-secondary);

     &:hover {
       background: var(--ark-primary);
       border-color: var(--ark-primary);
       // 修改: 倒置模式下悬停时箭头颜色
       &::before {
          color: #ffffff;
       }
     }
     // 倒置模式下箭头的默认颜色
     &::before {
       color: var(--ark-text-secondary);
     }
  }
}

// --- 新增: Contact Section 特定样式 ---
.contactSection {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 30px;
  position: relative;
  padding-bottom: 50px;
  background-image: url('/pictures/h.png');
  background-size: cover;
  background-position: center 300px;
  background-repeat: no-repeat;
  margin-bottom: 0px; // --- ADD: Negative margin to pull About section up ---
}

// 单个日志条目 (MODIFIED for absolute positioning)
.logItem {
  position: absolute; // --- MODIFY: Use absolute positioning --- 
  display: inline-flex; // --- MODIFY: Use inline-flex for better wrapping --- 
  align-items: center;
  font-family: 'Dosis', monospace;
  font-size: 1rem;
  // gap: 8px; // Gap between icon and text handled differently now
  z-index: 3; // Ensure links are above scanner/grid
  pointer-events: auto; // Ensure links are clickable
  // Reset button styles if needed for the email item
  &.radarContact1 {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
  }
}

// 日志链接 / Email Button Container
.logLink, // Apply to GitHub/Bilibili links
.logItem.radarContact1 // Apply to Email button
{
  // color: var(--ark-primary); // Color set by icon/text
  text-decoration: none;
  display: inline-block; 
  position: relative; // Positioning context for ripple and text
  // Remove transitions that might conflict
  // transition: color 0.3s, background-color 0.3s, opacity 0.3s;

  // .logItem:hover & { // Hover styles applied directly or via children
  //   color: var(--ark-dark-blue); 
  //   background-color: transparent; 
  // }
}

// --- ADD: Email Text Hover Style --- 
.emailText {
  position: absolute;
  left: 100%; // Position to the right of the icon container
  top: 50%;
  transform: translateY(-50%) scaleX(0); // Initially hidden and scaled down
  transform-origin: left center; // Scale from the left
  opacity: 0;
  margin-left: 10px; // Space between icon and text
  padding: 6px 12px;
  background-color: var(--ark-primary);
  color: var(--ark-dark-blue);
  // border-radius: 3px; // --- REMOVE border-radius --- 
  font-size: 0.85rem;
  white-space: nowrap;
  transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  pointer-events: none; // Text itself is not interactive
  z-index: 4; // Ensure text is above ripple
}

// Show email text on hover of the logItem (button)
.logItem.radarContact1:hover .emailText {
  transform: translateY(-50%) scaleX(1);
  opacity: 1;
}

// --- ADD: Copy Feedback Style --- 
.copyFeedback {
  position: absolute;
  bottom: 105%; // Position above the icon container
  left: 50%;
  // transform: translateX(-50%); // Transform handled by animation
  // background-color: var(--ark-highlight-green); // --- REMOVE background --- 
  color: var(--ark-highlight-green); // --- SET text color to green --- 
  padding: 3px 8px;
  // border-radius: 3px; // --- REMOVE border-radius --- 
  font-size: 0.75rem;
  font-family: 'Dosis', sans-serif;
  white-space: nowrap;
  opacity: 0; // Start hidden, animation handles fade-in/out
  z-index: 5; // Highest priority
  pointer-events: none;
  // --- ADD: Apply new animation --- 
  animation: floatUpFadeOut 1.5s ease-out forwards;
}

// --- ADD: Keyframe for Copy Feedback --- 
@keyframes floatUpFadeOut {
  0% {
    transform: translate(-50%, 5px); // Start slightly below and visible
    opacity: 0.8;
  }
  80% { // Hold visibility while floating up
    transform: translate(-50%, -15px); // Float upwards
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -20px); // Continue slight float
    opacity: 0; // Fade out completely
  }
}

// 图标背景容器样式 (No changes needed initially)
.logIconContainer {
  width: 48px; // 修改: 增大容器宽度
  height: 48px; // 修改: 增大容器高度
  background-color: rgba(var(--ark-primary-rgb), 0.15);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  transition: background-color 0.3s, border-color 0.3s;

  // 悬停时，通过父元素 .logItem 控制容器样式
  .logItem:hover & {
    background-color: var(--ark-primary); // 悬停时使用不透明主色
  }
}

// 日志图标样式 (No changes needed initially)
.logIcon {
  width: 28px; // 修改: 增大图标宽度
  height: 28px; // 修改: 增大图标高度
  flex-shrink: 0;
  fill: currentColor;
  stroke: none; // 移除描边
  color: var(--ark-primary); // 修改: 默认图标颜色为主色调 (在半透明背景上)
  opacity: 0.8; // 修改: 调整默认透明度
  transition: color 0.3s, opacity 0.3s;

  // 悬停时，通过父元素 .logItem 控制图标颜色
  .logItem:hover & {
    color: var(--ark-dark-blue); // 修改: 悬停时图标颜色变为深色，与背景形成对比
    opacity: 1;
  }
}

// --- 新增: Contact 雷达样式 ---
.radarDisplay {
  width: 250px;
  height: 250px;
  border-radius: 50%;
  position: relative;
  margin: 20px 0 30px auto;
  background-color: rgba(var(--ark-border-rgb), 0.05);
  border: 1px solid var(--ark-border);
  overflow: hidden;
  box-shadow: inset 0 0 15px rgba(var(--ark-primary-rgb), 0.1);
  background-image: none;

  // --- 新增: 内部网格线 --- 
  &::before, &::after {
    content: '';
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    pointer-events: none;
    z-index: 0; // 确保在扫描器和波纹下方
    // --- ADD: Background size and animation --- 
    background-size: 100px 100px; // Must be larger than the repeat distance (20px)
    // animation: moveGrid 2s linear infinite; // --- MODIFY: Decrease duration --- 
    animation: moveGrid 1s linear infinite; // Make grid move faster
  }

  // 横向网格线
  &::before {
    background-image: repeating-linear-gradient(
      to bottom,
      rgba(200, 200, 200, 0.1) 0, // 灰色网格线
      rgba(200, 200, 200, 0.1) 1px,
      transparent 1px,
      transparent 20px // 网格间距
    );
  }

  // 纵向网格线
  &::after {
    background-image: repeating-linear-gradient(
      to right,
      rgba(200, 200, 200, 0.1) 0,
      rgba(200, 200, 200, 0.1) 1px,
      transparent 1px,
      transparent 20px // 网格间距
    );
  }
}

// --- ADD: Keyframe for Grid Movement ---
@keyframes moveGrid {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 20px 20px; // Move right and down by the grid spacing
  }
}

// 扫描器扇区
.scanner {
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  border-radius: 50%;
  // --- MODIFY: Add gradient to the scanner --- 
  background: conic-gradient(
    from 0deg,
    rgba(178, 242, 187, 0.6) 0deg, // Start slightly more opaque green
    rgba(178, 242, 187, 0.1) 30deg, // Fade to less opaque green at the end of sector
    transparent 30.1deg 360deg
  );
  animation: rotateScanner 4s linear infinite;
  animation-direction: reverse;
  opacity: 0.8;
  z-index: 1; // 确保在网格线上方
}

// --- RE-ADD Keyframe for Scanner Rotation ---
@keyframes rotateScanner {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

// 雷达波纹
.radarDisplay .radarRipple {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px; // 初始大小
  height: 20px;
  border-radius: 50%;
  border: 1px solid rgba(178, 242, 187, 0.9); // 使用 Contact 列悬停的绿色 (178, 242, 187)
  box-shadow: 0 0 0 0px rgba(178, 242, 187, 0.5); // 使用 Contact 列悬停的阴影
  opacity: 0;
  pointer-events: none;
  transform: translate(-50%, -50%) scale(0.1);
  transform-origin: center center;
  animation: contactRippleExpandShadow 3.5s ease-out infinite; // --- MODIFY: Increase duration --- 
  z-index: 2; // 确保在扫描器和网格线上方
}

// 不同的波纹延迟
.radarDisplay .ripple1 { animation-delay: 0s; }

// 确保 contactRippleExpandShadow 动画定义是活跃的 (应该是在 .inverted 块中定义的那个)
// 如果 @keyframes contactRippleExpandShadow 在别处被注释掉了，需要取消注释或确保 .inverted 中的定义全局可用
// @keyframes contactRippleExpandShadow { ... } <--- 检查此定义是否有效

// 移除之前添加的、可能重复的 @keyframes 定义
/*
@keyframes contactRippleExpandShadow {
  ...
}
*/

// ... rest of the styles ...

// --- ADD: Keyframe for Smaller Ripples ---
@keyframes contactRippleExpandShadowSmall {
  0% {
    border: 1px solid rgba(178, 242, 187, 0.9); // 保持样式一致
    box-shadow: 0 0 0 0px rgba(178, 242, 187, 0.5); 
    opacity: 0.9;
    transform: translate(-50%, -50%) scale(0.1);
  }
  100% {
    border: 1px solid rgba(178, 242, 187, 0); 
    box-shadow: 0 0 0 20px rgba(178, 242, 187, 0); // 阴影范围也略小
    opacity: 0;
    transform: translate(-50%, -50%) scale(1.2); // 修改: 减小最终缩放
  }
}

// --- ADD: Styles for Smaller Ripples ---
.radarDisplay .radarRippleSmall {
  // 继承 .radarRipple 的大部分样式
  // 应用新的、较小的动画
  animation-name: contactRippleExpandShadowSmall;
}

// 不同的波纹延迟 (原有)
.radarDisplay .ripple1 { animation-delay: 0s; }

// --- ADD: Delays for Smaller Ripples --- 
.radarDisplay .smallRipple1 { animation-delay: 0.4s; }
.radarDisplay .smallRipple2 { animation-delay: 1.2s; }
.radarDisplay .smallRipple3 { animation-delay: 2.0s; }

// --- ADD: Delays and Positions for Smaller Ripples --- 
.radarDisplay .smallRipple1 {
  animation-delay: 0.4s;
  top: 25%; // 修改: 更靠上
  left: 20%; // 修改: 更靠左
}
.radarDisplay .smallRipple2 {
  animation-delay: 1.2s;
  top: 75%; // 修改: 更靠下
  left: 80%; // 修改: 更靠右
}
.radarDisplay .smallRipple3 {
  animation-delay: 2.0s;
  top: 80%; // 修改: 更靠下
  left: 35%; // 修改: 水平位置微调
}

// ... rest of the styles ...

// --- ADD: Positions for Radar Contact Links --- 
.radarContact1 { 
  // Position top-leftish, outside radar (radar is right-aligned)
  top: -200px; // --- MODIFY: Decrease top value to move up ---
  left: 18%; 
  // transform: translate(-50%, -50%); // Maybe remove transform or adjust alignment 
}
.radarContact2 { 
  // Position bottom-rightish, outside radar
  top: 890px; // Adjust based on radar vertical position 
  left: 84%; 
  // transform: translate(-50%, -50%);
}
.radarContact3 { 
  // Position bottom-leftish, outside radar
  top: 1000px; // Adjust based on radar vertical position
  left: 40%; 
  // transform: translate(-50%, -50%); 
}

// --- ADD: Styles and Animation for Icon Ripples ---
.contactIconRipple {
  position: absolute;
  top: 50%; // Center relative to logLink/IconContainer
  left: 50%; // Center relative to logLink/IconContainer
  // --- UPDATE: Match modified animation start state --- 
  transform: translate(-50%, -50%) scale(0.1); 
  width: 20px; 
  height: 20px;
  border-radius: 50%;
  border: 2px solid rgba(178, 242, 187, 1); // Thicker, opaque border
  box-shadow: 0 0 3px 1px rgba(178, 242, 187, 0.6); // Add initial shadow
  opacity: 1; // Start fully opaque
  pointer-events: none;
  z-index: -1; // Place behind icon container
  animation: contactRippleExpandShadow 3.5s ease-out infinite; // Use larger ripple animation and its duration
}

// ... existing code ...

// --- Keyframes for Ripples (Original Green) ---
@keyframes contactRippleExpandShadow {
  0% {
    // --- MODIFY: Make start more prominent --- 
    border: 2px solid rgba(178, 242, 187, 1); // Thicker, opaque border
    box-shadow: 0 0 3px 1px rgba(178, 242, 187, 0.6); // Add initial shadow
    opacity: 1; // Start fully opaque
    transform: translate(-50%, -50%) scale(0.1);
  }
  100% {
    // --- Keep end state the same --- 
    border: 1px solid rgba(178, 242, 187, 0); 
    box-shadow: 0 0 0 25px rgba(178, 242, 187, 0); // Keep shadow removed at end if intended
    opacity: 0;
    transform: translate(-50%, -50%) scale(2.2); // Expand even larger
  }
}

// ... existing contactRippleExpandShadowSmall keyframe ...

// --- Keyframes for Ripples (Inverted Pink/Purple) ---
@keyframes contactRippleExpandShadowInverted {
  0% {
    // --- MODIFY: Make start more prominent (inverted) --- 
    border: 2px solid rgba(var(--ark-primary-rgb), 1); // Thicker, opaque border
    box-shadow: 0 0 3px 1px rgba(var(--ark-primary-rgb), 0.6); // Add initial shadow
    opacity: 1; // Start fully opaque
    transform: translate(-50%, -50%) scale(0.1);
  }
  100% {
    // --- Keep end state the same (inverted) --- 
    border: 1px solid rgba(var(--ark-primary-rgb), 0); // Use inverted color
    box-shadow: 0 0 0 25px rgba(var(--ark-primary-rgb), 0); // Keep shadow removed at end
    opacity: 0;
    transform: translate(-50%, -50%) scale(2.2); // Same scale as original
  }
}

// ... existing contactRippleExpandShadowSmallInverted keyframe ...

// --- .inverted styles ---
.inverted {
  // ... existing inverted styles ...

  // Override Ripple Colors and Animations
  // ... ripple1 and radarRippleSmall overrides ...

  .contactIconRipple { // Icon ripples
     // --- UPDATE: Match modified inverted animation start state --- 
     border: 2px solid rgba(var(--ark-primary-rgb), 1); // Override base border
     box-shadow: 0 0 3px 1px rgba(var(--ark-primary-rgb), 0.6); // Override base shadow
     opacity: 1;
     animation-name: contactRippleExpandShadowInverted; // Use inverted (larger) animation
  }

  // ... other inverted styles ...
}

// ... rest of the styles ...

