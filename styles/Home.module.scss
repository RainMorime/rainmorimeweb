@font-face {
  font-family: 'Dosis';
  src: url('/fonts/Dosis/Dosis-Light.ttf') format('truetype');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

// 明日方舟风格变量已移至globals.scss

.container {
  width: 100%;
  min-height: 100vh;
  height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
  background-color: var(--ark-dark-blue);
  color: var(--ark-text);
  overflow: hidden; /* 确保溢出内容被裁剪 */
}

.main {
  flex: 1;
  width: 100%;
}

// 明日方舟风格网格背景
.gridBackground {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(9, 22, 40, 0.15) 1px, transparent 1px),
    linear-gradient(90deg, rgba(9, 22, 40, 0.15) 1px, transparent 1px);
  background-size: 20px 20px;
  z-index: 1;
  opacity: 0.5;
  pointer-events: none;
  
  // 添加六边形网格叠加
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      repeating-linear-gradient(0deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px),
      repeating-linear-gradient(60deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px),
      repeating-linear-gradient(120deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px);
    opacity: 0.7;
  }
}

// 中央光效
.glowEffect {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 220vh;
  height: 220vh;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(200, 200, 200, 0.03) 40%,
    rgba(0, 0, 0, 0) 80%
  );
  transform: translate(-50%, -50%);
  z-index: 0;
  pointer-events: none;
  // 添加脉冲动画
  animation: pulse 8s infinite alternate;
}

@keyframes pulse {
  0% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(0.95);
  }
  100% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.05);
  }
}

// 添加明日方舟风格扫描线
.scanLines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom, 
    transparent, 
    transparent 49.9%, 
    rgba(200, 200, 200, 0.1) 50%, 
    transparent 50.1%, 
    transparent
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 2;
  opacity: 0.3;
  animation: scanMove 10s linear infinite;
}

@keyframes scanMove {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100px;
  }
}

.rain_background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
  overflow: hidden;
  
  &.active {
    pointer-events: auto;
  }
}

.scroll_bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, rgba(9, 22, 40, 0.2) 0%, rgba(5, 15, 30, 0.6) 70%);
  transition: transform 0.5s ease-out;
  will-change: transform, background-position;
}

.bg_raindrop {
  position: absolute;
  top: -50px;
  background: linear-gradient(to bottom, 
    rgba(255, 255, 255, 0.05) 0%, 
    rgba(200, 200, 255, 0.15) 50%, 
    rgba(150, 200, 255, 0.05) 100%);
  border-radius: 50% 50% 25% 25%;
  will-change: transform, opacity;
  
  &::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 40%;
    background: rgba(200, 220, 255, 0.08);
    border-radius: 50%;
    transform: scale(1.3, 0.35) translateY(70%);
    opacity: 0.7;
    filter: blur(1px);
  }
}

.mist_overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, 
    rgba(9, 22, 40, 0) 0%, 
    rgba(5, 15, 30, 0.3) 70%, 
    rgba(3, 10, 20, 0.5) 100%);
  opacity: 0.8;
  pointer-events: none;
  z-index: 2;
}

.mainLayout {
  flex: 1;
  display: flex;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  z-index: 5;
  /* 添加 user-select */
  user-select: none;
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE/Edge */
}

.leftPanel {
  flex: 1;
  background-color: transparent; 
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  
  // 添加.animated类用于触发动画
  &.animated {
    &::after {
      animation: expandBorder 1.2s cubic-bezier(0.25, 0.8, 0.25, 1) forwards;
    }
    &::before {
      animation: fadeInCorner 0.8s ease-out 0.6s forwards; // 延迟0.6s开始
    }
    .logoContainer {
      animation: revealLogo 1.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
      animation-delay: 0.1s;
    }
  }

  // 修改：边框初始状态为中心点
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border: 0px solid var(--ark-border);
    z-index: 1;
    pointer-events: none;
    background-color: transparent;
    transform: translate(-50%, -50%); // 确保从中心扩展
  }
  
  // 修改：角标初始状态为透明
  &::before {
    content: '';
    position: absolute;
    top: 15%;
    left: 15%;
    width: 25px;
    height: 25px;
    border-top: 2px solid var(--ark-primary);
    border-left: 2px solid var(--ark-primary);
    z-index: 2;
    background-color: transparent;
    opacity: 0; // 初始透明
  }
}

// 新增边框展开动画
@keyframes expandBorder {
  0% {
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-width: 0px;
    transform: translate(-50%, -50%);
  }
  100% {
    top: 15%;
    left: 15%;
    width: 70%;
    height: 70%;
    border-width: 1px;
    transform: translate(0, 0); // 恢复正常位置
  }
}

// 新增角标淡入动画
@keyframes fadeInCorner {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.logoContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-image: url('/pictures/RM2.png');
  background-position: center;
  background-repeat: no-repeat;
  background-size: 60%;
  filter: grayscale(100%) brightness(1.2) drop-shadow(0 0 10px rgba(200, 200, 200, 0.3));
  pointer-events: none;
  position: relative;
  z-index: 3;
  // 修改：添加clip-path实现遮罩效果
  clip-path: inset(45% 45% 45% 45%); // 初始为中心小区域
  opacity: 0; // 初始透明
  
  // 移除之前的扫描线效果，避免冲突
  // &::after { ... }
}

// 修改Logo展开动画，使其更平滑
@keyframes revealLogo {
  0% {
    clip-path: inset(45% 45% 45% 45%);
    opacity: 0;
    transform: scale(0.95); // 轻微缩小
  }
  100% {
    clip-path: inset(0% 0% 0% 0%);
    opacity: 1;
    transform: scale(1);
  }
}

.rightPanel {
  flex: 0.618;
  display: flex;
  height: 100%;
  background-color: transparent;
  position: relative;
  transform: skewX(-15deg);
  transform-origin: left center;
  overflow: hidden;
}

.column {
  position: absolute;
  height: 100%;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  z-index: 2;
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;

  &:hover {
    // 仅当交互启用时应用悬停效果
    &:not(.nonInteractive) {

      // 默认悬停效果 (排除 worksColumn)
      &:not(.worksColumn) {
        background-color: rgba(178, 242, 187, 0.08);

        &::after,
        &::before {
            content: '';
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            width: 30%;
            height: 2px;
            background: var(--ark-highlight-green);
        }
        &::after { bottom: 0; }
        &::before { top: 0; }

        .verticalText .charItem > div {
          transform: scale(1.15);
          color: var(--ark-highlight-green);
          text-shadow: 0 0 8px var(--ark-highlight-green);
        }
      }
    }
  }

  /* 新增：禁用交互时的样式 */
  &.nonInteractive {
    pointer-events: none;
    cursor: default;
  }
}

@keyframes textPulse {
  0% {
    color: rgba(255, 255, 255, 0.7);
    text-shadow: 0 0 5px rgba(150, 150, 150, 0.3);
  }
  100% {
    color: rgba(255, 255, 255, 1);
    text-shadow: 0 0 8px rgba(200, 200, 200, 0.7);
  }
}

/* 垂直线条样式 - 添加辉光 */
.verticalLine {
  position: absolute;
  top: 0;
  width: 1px;
  height: 100%;
  background-color: var(--ark-primary); // Should be white now
  z-index: 3;
  pointer-events: none;
  opacity: 0; // 初始隐藏
  // 添加轻微辉光
  box-shadow: 0 0 3px rgba(255, 255, 255, 0.3), 0 0 1px rgba(255, 255, 255, 0.5);

  &.animated {
    // 公共设置
    animation-duration: 0.8s; // 出现动画时长
    animation-fill-mode: forwards;
    animation-timing-function: cubic-bezier(0.2, 0.8, 0.2, 1);
    animation-iteration-count: 1; // 只播放一次

    // 交错动画延迟（所有线条共享）
    @for $i from 0 through 5 {
      &:nth-child(#{$i + 1}) {
        animation-delay: #{$i * 0.15}s;
      }
    }
    
    // 第一条到第三条：从上到下
    &:nth-child(-n+3) {
      animation-name: lineAppearTopDown;
      transform-origin: top; 
    }
    
    // 第四条到第六条：从下到上
    &:nth-child(n+4) {
      animation-name: lineAppearBottomUp;
      transform-origin: bottom;
    }
  }
}

// 从上到下动画
@keyframes lineAppearTopDown {
  0% {
    opacity: 0;
    transform: scaleY(0);
  }
  100% {
    opacity: 0.5; // 保持浅色
    transform: scaleY(1);
  }
}

// 新增：从下到上动画
@keyframes lineAppearBottomUp {
  0% {
    opacity: 0;
    transform: scaleY(0);
  }
  100% {
    opacity: 0.5; // 保持浅色
    transform: scaleY(1);
  }
}

.verticalText {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transform: translateY(10px);
  transition: transform 0.3s ease;
  
  .charItem {
    margin: 10px 0;
    transform: skewX(15deg); // 抵消父元素的倾斜
    color: rgba(255, 255, 255, 0.6);
    transition: all 0.3s ease;
    text-shadow: 0 0 3px rgba(0, 150, 255, 0.2);
  }
}

// 明日方舟风格HUD元素 - 修改为每个角只有一个对应位置的边框装饰
.hudElement {
  position: fixed;
  font-family: 'Dosis', monospace;
  font-size: 0.7rem;
  color: var(--ark-primary);
  padding: 10px;
  letter-spacing: 1px;
  text-transform: uppercase;
  background-color: transparent;
  border: none;
  z-index: 10;
  opacity: 0;
  transition: opacity 0.8s ease, transform 0.8s ease;
  
  &.visible {
    opacity: 1;
  }
  
  // 通用装饰元素
  &::before {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    border-color: var(--ark-border);
    border-style: solid;
    border-width: 0;
    background-color: transparent;
  }
  
  &.topLeft {
    top: 20px;
    left: 20px;
    transform: translateY(-10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      top: -1px;
      left: -1px;
      border-top-width: 1px;
      border-left-width: 1px;
    }
  }
  
  &.topRight {
    top: 20px;
    right: 20px;
    transform: translateY(-10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      top: -1px;
      right: -1px;
      border-top-width: 1px;
      border-right-width: 1px;
    }
  }
  
  &.bottomLeft {
    bottom: 20px;
    left: 20px;
    transform: translateY(10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      bottom: -1px;
      left: -1px;
      border-bottom-width: 1px;
      border-left-width: 1px;
    }
  }
  
  &.bottomRight {
    bottom: 20px;
    right: 20px;
    transform: translateY(10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      bottom: -1px;
      right: -1px;
      border-bottom-width: 1px;
      border-right-width: 1px;
    }
  }
}

// General section styles
.section {
  position: relative;
  padding: 6rem 10%;
  overflow: hidden;
  
  &:nth-child(odd) {
    background: #0d0d0d;
  }
}

.section_content {
  max-width: 1400px;
  margin: 0 auto;
}

.section_header {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 4rem;
  text-align: center;
  
  h2 {
    font-size: clamp(2rem, 4vw, 3.5rem);
    font-weight: 300;
    margin-bottom: 1.5rem;
    letter-spacing: 1px;
  }
  
  .line {
    width: 80px;
    height: 1px;
    background: rgba(255,255,255,0.5);
    
    &::after {
      content: '';
      display: block;
      width: 40px;
      height: 3px;
      background: white;
      margin: 0 auto;
      margin-top: -2px;
      transform-origin: center;
      animation: lineGrow 1.5s ease-out forwards;
    }
  }
}

// About section
.about_content {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 4rem;
}

.about_text {
  flex: 1 1 500px;
  
  p {
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    line-height: 1.7;
    opacity: 0.8;
  }
}

.about_stats {
  flex: 1 1 300px;
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
}

.stat_item {
  flex: 1 1 150px;
  text-align: center;
  
  h3 {
    font-size: clamp(2rem, 4vw, 3rem);
    margin-bottom: 0.5rem;
    font-weight: 600;
    background: linear-gradient(90deg, #fff, #aaa);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  p {
    font-size: 1rem;
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
}

// Work section
.work_grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.work_item {
  position: relative;
  transition: transform 0.3s ease-out;
  will-change: transform;
  cursor: pointer;
  
  &:hover {
    transform: translateY(-10px);
    
    .work_overlay {
      opacity: 1;
    }
  }
}

.work_image {
  position: relative;
  padding-top: 75%; // 4:3 aspect ratio
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #252525 0%, #151515 100%);
    border: 1px solid rgba(255,255,255,0.1);
  }
}

.work_overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.7);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease-out;
  
  h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    color: #fff;
  }
  
  p {
    font-size: 0.9rem;
    opacity: 0.7;
    margin-bottom: 1.5rem;
    text-align: center;
  }
}

.work_link {
  display: inline-block;
  padding: 0.5rem 1rem;
  border: 1px solid rgba(255,255,255,0.3);
  font-size: 0.9rem;
  text-decoration: none;
  color: #fff;
  transition: all 0.3s;
  
  &:hover {
    background: rgba(255,255,255,0.1);
    border-color: rgba(255,255,255,0.5);
  }
}

// Experience section
.experience_timeline {
  position: relative;
  max-width: 800px;
  margin: 0 auto;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 20px;
    width: 1px;
    height: 100%;
    background: rgba(255,255,255,0.2);
    
    @media (min-width: 768px) {
      left: 50%;
      transform: translateX(-50%);
    }
  }
}

.timeline_item {
  position: relative;
  margin-bottom: 3rem;
  padding-left: 60px;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 15px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #fff;
    border: 1px solid rgba(255,255,255,0.3);
    
    @media (min-width: 768px) {
      left: 50%;
      margin-left: -5px;
    }
  }
  
  @media (min-width: 768px) {
    width: 50%;
    padding-left: 3rem;
    
    &:nth-child(even) {
      margin-left: 50%;
      padding-left: 3rem;
      padding-right: 0;
    }
    
    &:nth-child(odd) {
      padding-right: 3rem;
      padding-left: 0;
      text-align: right;
    }
  }
}

.timeline_year {
  display: inline-block;
  padding: 0.3rem 1rem;
  background: rgba(255,255,255,0.1);
  border-radius: 20px;
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.timeline_content {
  h3 {
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
  }
  
  p {
    opacity: 0.7;
    line-height: 1.6;
  }
}

// Life section
.life_grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  gap: 2rem;
}

.life_item {
  text-align: center;
  transition: transform 0.3s ease-out;
  will-change: transform;
  
  &:hover {
    transform: translateY(-10px);
  }
}

.life_image {
  position: relative;
  padding-top: 100%; // Square aspect ratio
  margin-bottom: 1.5rem;
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #1a1a1a 0%, #101010 100%);
    border-radius: 50%;
    border: 1px solid rgba(255,255,255,0.1);
  }
}

// Contact section
.contact_content {
  display: flex;
  flex-wrap: wrap;
  gap: 3rem;
}

.contact_info {
  flex: 1 1 400px;
  
  h3 {
    font-size: 1.8rem;
    margin-bottom: 1rem;
    font-weight: 300;
  }
  
  p {
    opacity: 0.8;
    line-height: 1.6;
    margin-bottom: 2rem;
  }
}

.contact_details {
  margin-top: 2rem;
}

.contact_item {
  margin-bottom: 1.5rem;
  
  span {
    display: block;
    opacity: 0.6;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  a {
    color: #fff;
    text-decoration: none;
    border-bottom: 1px solid rgba(255,255,255,0.3);
    padding-bottom: 3px;
    transition: border-color 0.3s;
    
    &:hover {
      border-color: rgba(255,255,255,0.8);
    }
  }
  
  p {
    margin: 0;
  }
}

.social_links_small {
  display: flex;
  gap: 1rem;
  
  a {
    border-bottom: none;
  }
}

.contact_form {
  flex: 1 1 400px;
}

.form_group {
  margin-bottom: 1.5rem;
  
  input, textarea {
    width: 100%;
    padding: 1rem;
    background: rgba(255,255,255,0.05);
    border: 1px solid rgba(255,255,255,0.1);
    color: #fff;
    font-size: 1rem;
    transition: border-color 0.3s;
    
    &:focus {
      outline: none;
      border-color: rgba(255,255,255,0.3);
    }
    
    &::placeholder {
      color: rgba(255,255,255,0.5);
    }
  }
}

// Footer
.footer {
  position: relative;
  padding: 3rem 10%;
  background: #0a0a0a;
  color: #fff;
}

.footer_content {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  max-width: 1400px;
  margin: 0 auto;
  gap: 2rem;
}

.footer_logo {
  flex: 1 1 300px;
  
  h3 {
    font-size: 1.5rem;
    font-weight: 300;
    margin-bottom: 1rem;
    
    span {
      opacity: 0.6;
    }
  }
  
  p {
    opacity: 0.5;
    font-size: 0.9rem;
  }
}

.footer_links {
  flex: 1 1 300px;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  text-align: right;
}

.footer_nav {
  display: flex;
  gap: 1.5rem;
  justify-content: flex-end;
  flex-wrap: wrap;
  
  a {
    color: #fff;
    text-decoration: none;
    font-size: 0.9rem;
    opacity: 0.7;
    transition: opacity 0.3s;
    
    &:hover {
      opacity: 1;
    }
  }
}

.social_links {
  display: flex;
  gap: 1.5rem;
  justify-content: flex-end;
  
  a {
    display: block;
    width: 35px;
    height: 35px;
    border: 1px solid rgba(255,255,255,0.3);
    color: #fff;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.8rem;
    transition: all 0.3s;
    
    &:hover {
      background: rgba(255,255,255,0.1);
      border-color: rgba(255,255,255,0.5);
    }
  }
}

// Animations
@keyframes scrollWheel {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(15px);
  }
}

@keyframes arrowBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0) rotate(45deg);
  }
  40% {
    transform: translateY(-10px) rotate(45deg);
  }
  60% {
    transform: translateY(-5px) rotate(45deg);
  }
}

@keyframes lineGrow {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes leafGrow {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes dropFall {
  0% {
    transform: translateY(-20px) scaleY(0);
    opacity: 0;
  }
  50% {
    transform: translateY(0) scaleY(1);
    opacity: 1;
  }
  100% {
    transform: translateY(20px) scaleY(0.7);
    opacity: 0;
  }
}

@keyframes ripple {
  0% {
    transform: translateX(-50%) scale(0);
    opacity: 1;
  }
  100% {
    transform: translateX(-50%) scale(3);
    opacity: 0;
  }
}

/* 添加闪光动画关键帧 */
@keyframes shine {
  0% {
    background-position: 100%;
  }
  100% {
    background-position: -100%;
  }
}

// Responsive
@media (max-width: 768px) {
  .hero_content {
    flex-direction: column;
    gap: 3rem;
  }
  
  .hero_text {
    padding: 1rem;
    text-align: center;
    
    h1 {
      margin-top: 3rem;
    }
    
    p {
      margin: 0 auto 2rem;
    }
  }
  
  .about_content,
  .contact_content {
    flex-direction: column;
  }
  
  .section {
    padding: 4rem 5%;
  }
  
  .footer_content {
    flex-direction: column;
    text-align: center;
  }
  
  .footer_links,
  .footer_nav,
  .social_links {
    justify-content: center;
  }
}

// --- 全局列和 HUD 样式 --- 

// HUD 覆盖层容器 (在每个列内)
.hudOverlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  overflow: hidden;

  &::before, // Main canvas for unique hover animations
  &::after { // Scanlines (common animation)
    content: '';
    position: absolute;
    opacity: 0;
    transition: opacity 0.2s ease-out; // Fade out on hover exit
  }

  // 共享的扫描线样式 (保持不变)
  &::after { // Scanlines
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      to bottom,
      transparent,
      transparent 2px,
      rgba(178, 242, 187, 0.2) 2px,
      rgba(178, 242, 187, 0.2) 3px
    );
    background-size: 100% 6px;
    filter: blur(0.3px);
    background-position: 0 0;
    // Ensure scanlines are behind the main animation
    z-index: 1; 
  }

  // 清除旧的 ::before 基础方框样式 
  // 新的基础样式将在具体动画中按需设置 
  &::before { 
    // Basic positioning/transform origin if needed, otherwise animation sets all
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    // Ensure main animation is above scanlines
    z-index: 2; 
  }
}

// 共享的角标样式
.cornerHudTopLeft,
.cornerHudBottomRight {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-color: var(--ark-highlight-green);
    border-style: solid;
    border-width: 0;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s ease-out; // Fade out on hover exit
    filter: drop-shadow(0 0 3px var(--ark-highlight-green));
    z-index: 3; // Above main animation
}

.cornerHudTopLeft { top: 8px; left: 8px; border-top-width: 2px; border-left-width: 2px; }
.cornerHudBottomRight { bottom: 8px; right: 8px; border-bottom-width: 2px; border-right-width: 2px; }

.imageHud {
    position: absolute;
    display: flex;
    align-items: center;
    gap: 6px;
    z-index: 5; // Highest z-index
    opacity: 0;
    transform: translateY(5px); // Initial offset for animation
    pointer-events: none;
    transition: opacity 0.2s ease-out, transform 0.2s ease-out; // Fade out
}

.imageHudSquare {
    display: inline-block;
    width: 8px;
    height: 8px;
    background-color: var(--ark-highlight-green);
    filter: drop-shadow(0 0 2px var(--ark-highlight-green));
}

.imageHudText {
    font-family: 'Consolas', 'Menlo', 'Courier New', monospace;
    font-size: 0.8rem;
    color: var(--ark-highlight-green);
    letter-spacing: 1px;
    font-weight: bold;
    text-shadow: 0 0 3px rgba(178, 242, 187, 0.5);
}

// --- 通用列悬停效果 (保持不变) --- 
.column:hover:not(.nonInteractive) {
  background-color: rgba(178, 242, 187, 0.08); 

  .verticalText .charItem > div {
    transform: scale(1.15);
    color: var(--ark-highlight-green);
    text-shadow: 0 0 8px var(--ark-highlight-green);
  }

  // 触发共享的扫描线动画
  .hudOverlay::after { 
      animation: scanHud 1.5s linear infinite,
                 fadeInScanlines 0.2s ease-out forwards;
  }

  // 触发共享的角标动画
  .cornerHudTopLeft,
  .cornerHudBottomRight {
    animation: fadeInArkCorner 0.4s ease-out 0.2s forwards;
  }

  // 触发共享的图片HUD淡入动画 (位置由具体规则决定)
  .imageHud {
      animation: fadeInImageHud 0.4s ease-out 0.3s forwards;
  }
}

// --- 特定列的悬停效果 (应用新动画) --- 

// Column 0 (WORKS - Revert to Skewed Box)
.column0:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    // Revert to the original skewed box animation
    animation: hudExpandBox0 0.5s cubic-bezier(0.2, 0.9, 0.3, 1.2) forwards;
  }
  .imageHud { // Unique Position
    bottom: 15px;
    left: 15px;
  }
}

// Column 1 (EXPERIENCE - Timeline)
.column1:hover:not(.nonInteractive) {
  .hudOverlay::before { 
     animation: experienceTimeline 0.9s ease-out forwards;
  }
  .imageHud { // Unique Position
    top: 15px;
    right: 15px;
  }
}

// Column 2 (LIFE - Pulse)
.column2:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    animation: lifePulse 1.2s ease-in-out infinite;
  }
  .imageHud { // Unique Position
    bottom: 15px;
    right: 15px;
  }
}

// Column 3 (CONTACT - Center Scan + 3 Scattered Shadow Ripples)
.column3:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    // Central scan line - no change
    animation: radarScan 2.5s linear infinite; 
    width: 65%; 
    height: 65%;
    border-radius: 50%; 
    background: conic-gradient(from 0deg, 
        rgba(178, 242, 187, 0.4) 0deg 15deg, 
        transparent 15.1deg 360deg);
    border: none; 
    opacity: 1; 
  }
  
  // Position and animate the individual ripples with the SHADOW expand animation
  .ripple1, .ripple2, .ripple3 {
      // Use the new shadow ripple animation
      animation-name: contactRippleExpandShadow;
      animation-duration: 1.8s;
      animation-iteration-count: infinite;
      animation-timing-function: ease-out;
  }

  .ripple1 { /* position, size, delay unchanged */
    top: 20%; left: 15%; width: 40px; height: 40px; animation-delay: 0s;
  }
  .ripple2 { /* position, size, delay unchanged */
    top: 65%; left: 70%; width: 60px; height: 60px; animation-delay: 0.4s;
  }
  .ripple3 { /* position, size, delay unchanged */
    top: 40%; left: 40%; width: 80px; height: 80px; animation-delay: 0.8s;
  }

  .imageHud { /* position unchanged */
    top: 15px; left: 15px;
  }
}

// Column 4 (ABOUT - Focus + 5 Random HUDs)
.column4:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    animation: aboutFocus 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
  
  // Main centered image HUD - no change to position, but adjust animation name if needed
  > .imageHud { // Use direct child selector '>' to target the main one
    bottom: 50%;
    left: 15px;
    transform: translateY(50%); 
    animation: fadeInImageHudCentered 0.4s ease-out 0.3s forwards; 
  }

  // Style and position the 5 random HUDs on hover
  .randomHud {
    // Apply the standard fade-in animation (slightly delayed)
    animation: fadeInImageHud 0.4s ease-out forwards;
  }

  .randomHud1 { top: 10%; left: 25%; animation-delay: 0.35s; }
  .randomHud2 { top: 30%; left: 80%; animation-delay: 0.45s; transform: scale(0.9); } // Slightly smaller
  .randomHud3 { top: 75%; left: 10%; animation-delay: 0.4s; transform: scale(1.1); } // Slightly larger
  .randomHud4 { top: 85%; left: 60%; animation-delay: 0.5s; }
  .randomHud5 { top: 5%; left: 55%; animation-delay: 0.55s; transform: scale(0.95); } 
}

// --- Keyframes --- 

// 共享动画 (保持不变)
@keyframes scanHud { 0% { background-position: 0 0; } 100% { background-position: 0 6px; } }
@keyframes fadeInScanlines { from { opacity: 0; } to { opacity: 0.8; } }
@keyframes fadeInArkCorner { from { opacity: 0; } to { opacity: 1; } }
@keyframes fadeInImageHud { from { opacity: 0; transform: translateY(5px); } to { opacity: 1; transform: translateY(0); } }
@keyframes fadeInImageHudCentered { from { opacity: 0; transform: translateY(calc(50% + 5px)); } to { opacity: 1; transform: translateY(50%); } }

// --- 独特的悬停动画 --- 

// Restore hudExpandBox0 for WORKS
@keyframes hudExpandBox0 {
  0% { transform: translate(-50%, -50%) scale(0.7) rotate(0deg) skewX(0deg); border-color: transparent; opacity: 0; width: 75%; height: 75%; border-radius: 0; background: transparent; }
  50% { transform: translate(-50%, -50%) scale(1.05) rotate(7deg) skewX(-12deg); border: 1px solid var(--ark-highlight-green); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1.05) rotate(7deg) skewX(-12deg); border: 1px solid var(--ark-highlight-green); opacity: 1; width: 75%; height: 75%; border-radius: 0; background: transparent; }
}

// WORKS: Blueprint Draw (using border) - No longer used by default for column 0
@keyframes worksBlueprint {
  0% {
    width: 0%;
    height: 0%;
    border: 2px solid var(--ark-highlight-green);
    border-right-color: transparent;
    border-bottom-color: transparent;
    opacity: 0;
  }
  30% { // Draw top and left border
    width: 70%;
    height: 80%;
    border-right-color: transparent;
    border-bottom-color: transparent;
    opacity: 1;
  }
  60% { // Draw right border
    width: 70%;
    height: 80%;
    border-bottom-color: transparent;
    border-right-color: var(--ark-highlight-green);
    opacity: 1;
  }
  100% { // Draw bottom border
    width: 70%;
    height: 80%;
    border-color: var(--ark-highlight-green);
    opacity: 1;
    box-shadow: 0 0 8px rgba(178, 242, 187, 0.4); // Add glow at the end
  }
}

// EXPERIENCE: Timeline (line + nodes via box-shadow)
@keyframes experienceTimeline {
  0% {
    width: 2px;
    height: 0%;
    background-color: var(--ark-highlight-green);
    box-shadow: none; // No nodes yet
    opacity: 0;
  }
  40% { // Line grows
    height: 80%;
    opacity: 1;
    box-shadow: none;
  }
  60% { // First node appears (top)
    height: 80%;
    opacity: 1;
    box-shadow: 0 -30px 0 0px var(--ark-highlight-green); 
  }
  80% { // Second node appears (middle)
    height: 80%;
    opacity: 1;
    box-shadow: 0 -30px 0 0px var(--ark-highlight-green), 
                0 0px 0 0px var(--ark-highlight-green); 
  }
  100% { // Third node appears (bottom) + glow
    height: 80%;
    opacity: 1;
    background-color: var(--ark-highlight-green);
    box-shadow: 0 -30px 0 0px var(--ark-highlight-green), 
                0 0px 0 0px var(--ark-highlight-green), 
                0 30px 0 0px var(--ark-highlight-green), 
                0 0 8px 2px rgba(178, 242, 187, 0.5); // Glow effect
  }
}

// LIFE: Pulse (horizontal line scaling)
@keyframes lifePulse {
  0%, 100% {
    width: 50%;
    height: 1px;
    background-color: var(--ark-highlight-green);
    transform: translate(-50%, -50%) scaleX(1);
    opacity: 1;
    box-shadow: 0 0 5px rgba(178, 242, 187, 0.7);
  }
  50% {
    width: 50%;
    height: 1px;
    background-color: var(--ark-highlight-green);
    transform: translate(-50%, -50%) scaleX(1.4);
    opacity: 0.7;
    box-shadow: 0 0 10px rgba(178, 242, 187, 0.5);
  }
}

// CONTACT: Radar Scan Line (rotating conic gradient)
@keyframes radarScan {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

// NEW CONTACT: Single Ripple Expand Animation with Shadow (like original concept)
@keyframes contactRippleExpandShadow {
  0% {
    transform: scale(0.1);
    opacity: 1;
    border: 1px solid rgba(178, 242, 187, 0.9);
    box-shadow: 0 0 0 0px rgba(178, 242, 187, 0.5); // Start shadow at size 0

  }
  100% {
    transform: scale(1);
    opacity: 0;
    border: 1px solid rgba(178, 242, 187, 0); // Fade border
    box-shadow: 0 0 0 20px rgba(178, 242, 187, 0); // Expanding shadow ring fades out
  }
}

// ABOUT: Focus (corner lines moving inwards)
@keyframes aboutFocus {
  0% {
    width: 60%;
    height: 70%;
    border: 0 solid var(--ark-highlight-green);
    opacity: 0;
  }
  30% { // Corners appear far out
    width: 80%;
    height: 90%;
    border-width: 0px;
    opacity: 1;
    // Simulate corners using box-shadow trick
    box-shadow: inset 10px 10px 0 -8px var(--ark-highlight-green),  /* Top-Left */
                inset -10px 10px 0 -8px var(--ark-highlight-green), /* Top-Right */
                inset 10px -10px 0 -8px var(--ark-highlight-green), /* Bottom-Left */
                inset -10px -10px 0 -8px var(--ark-highlight-green);/* Bottom-Right */
  }
  100% { // Corners move inwards
    width: 60%;
    height: 70%;
    border-width: 0px;
    opacity: 1;
    box-shadow: inset 10px 10px 0 -8px var(--ark-highlight-green),
                inset -10px 10px 0 -8px var(--ark-highlight-green),
                inset 10px -10px 0 -8px var(--ark-highlight-green),
                inset -10px -10px 0 -8px var(--ark-highlight-green),
                0 0 10px rgba(178, 242, 187, 0.4); // Final glow
  }
}

// --- Add base styles for the new ripple elements --- 
.radarRipple {
  position: absolute;
  border-radius: 50%;
  opacity: 0; // Start hidden
  pointer-events: none;
  // Border will be set by the animation
  // Ensure ripples are above the scan line (::before is z-index 2)
  z-index: 3; 
}

// --- Column 默认上下线 --- (保持不变)
// 默认隐藏非 worksColumn 的上下线
.column:not(.worksColumn)::before,
.column:not(.worksColumn)::after {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 30%;
    height: 2px;
    background: var(--ark-highlight-green);
    opacity: 0; // 默认隐藏
    transition: opacity 0.2s ease-out;
}
.column:not(.worksColumn)::before { top: 0; }
.column:not(.worksColumn)::after { bottom: 0; }

// 在 hover 时显示非 worksColumn 的上下线
.column:not(.worksColumn):hover:not(.nonInteractive) {
  &::before,
  &::after {
    opacity: 1;
  }
}

// --- Add base styles for the new random HUD elements --- 
.randomHud {
  // Inherits .imageHud styles, just need initial state if different
  // Already position: absolute from .imageHud
  opacity: 0; // Start hidden
  // Use fixed positions defined in hover rule, override any default positioning from .imageHud if necessary
}