@font-face {
  font-family: 'Dosis';
  src: url('/fonts/Dosis/Dosis-Light.ttf') format('truetype');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

// 明日方舟风格变量已移至globals.scss

.container {
  width: 100%;
  min-height: 100vh;
  height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
  background-color: var(--ark-dark-blue);
  color: var(--ark-text);
  overflow: hidden; /* 确保溢出内容被裁剪 */
}

.main {
  flex: 1;
  width: 100%;
}

// 明日方舟风格网格背景
.gridBackground {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(9, 22, 40, 0.15) 1px, transparent 1px),
    linear-gradient(90deg, rgba(9, 22, 40, 0.15) 1px, transparent 1px);
  background-size: 20px 20px;
  z-index: 1;
  opacity: 0.5;
  pointer-events: none;
  
  // 添加六边形网格叠加
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      repeating-linear-gradient(0deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px),
      repeating-linear-gradient(60deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px),
      repeating-linear-gradient(120deg, transparent, transparent 20px, rgba(150, 150, 150, 0.03) 20px, rgba(150, 150, 150, 0.03) 21px);
    opacity: 0.7;
  }
}

// 中央光效
.glowEffect {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 220vh;
  height: 220vh;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(200, 200, 200, 0.03) 40%,
    rgba(0, 0, 0, 0) 80%
  );
  transform: translate(-50%, -50%);
  z-index: 0;
  pointer-events: none;
  // 添加脉冲动画
  animation: pulse 8s infinite alternate;
}

@keyframes pulse {
  0% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(0.95);
  }
  100% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.05);
  }
}

// 添加明日方舟风格扫描线
.scanLines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom, 
    transparent, 
    transparent 49.9%, 
    rgba(200, 200, 200, 0.1) 50%, 
    transparent 50.1%, 
    transparent
  );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 2;
  opacity: 0.3;
  animation: scanMove 10s linear infinite;
}

@keyframes scanMove {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100px;
  }
}

.rain_background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none;
  overflow: hidden;
  
  &.active {
    pointer-events: auto;
  }
}

.scroll_bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, rgba(9, 22, 40, 0.2) 0%, rgba(5, 15, 30, 0.6) 70%);
  transition: transform 0.5s ease-out;
  will-change: transform, background-position;
}

.bg_raindrop {
  position: absolute;
  top: -50px;
  background: linear-gradient(to bottom, 
    rgba(255, 255, 255, 0.05) 0%, 
    rgba(200, 200, 255, 0.15) 50%, 
    rgba(150, 200, 255, 0.05) 100%);
  border-radius: 50% 50% 25% 25%;
  will-change: transform, opacity;
  
  &::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 40%;
    background: rgba(200, 220, 255, 0.08);
    border-radius: 50%;
    transform: scale(1.3, 0.35) translateY(70%);
    opacity: 0.7;
    filter: blur(1px);
  }
}

.mist_overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at center, 
    rgba(9, 22, 40, 0) 0%, 
    rgba(5, 15, 30, 0.3) 70%, 
    rgba(3, 10, 20, 0.5) 100%);
  opacity: 0.8;
  pointer-events: none;
  z-index: 2;
}

.mainLayout {
  flex: 1;
  display: flex;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  z-index: 5;
  /* 添加 user-select */
  user-select: none;
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE/Edge */
}

.leftPanel {
  flex: 1;
  background-color: transparent; 
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  
  // 添加.animated类用于触发动画
  &.animated {
    &::after {
      animation: expandBorder 1.2s cubic-bezier(0.25, 0.8, 0.25, 1) forwards;
    }
    &::before {
      animation: fadeInCorner 0.8s ease-out 0.6s forwards; // 延迟0.6s开始
    }
    .logoContainer {
      animation: revealLogo 1.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
      animation-delay: 0.1s;
    }
  }

  // 修改：边框初始状态为中心点
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border: 0px solid var(--ark-border);
    z-index: 1;
    pointer-events: none;
    background-color: transparent;
    transform: translate(-50%, -50%); // 确保从中心扩展
  }
  
  // 修改：角标初始状态为透明
  &::before {
    content: '';
    position: absolute;
    top: 15%;
    left: 15%;
    width: 25px;
    height: 25px;
    border-top: 2px solid var(--ark-primary);
    border-left: 2px solid var(--ark-primary);
    z-index: 2;
    background-color: transparent;
    opacity: 0; // 初始透明
  }
}

// 新增边框展开动画
@keyframes expandBorder {
  0% {
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-width: 0px;
    transform: translate(-50%, -50%);
  }
  100% {
    top: 15%;
    left: 15%;
    width: 70%;
    height: 70%;
    border-width: 1px;
    transform: translate(0, 0); // 恢复正常位置
  }
}

// 新增角标淡入动画
@keyframes fadeInCorner {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.logoContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-image: url('/pictures/RM2.png');
  background-position: center;
  background-repeat: no-repeat;
  background-size: 60%;
  filter: grayscale(100%) brightness(1.2) drop-shadow(0 0 10px rgba(200, 200, 200, 0.3));
  pointer-events: none;
  position: relative;
  z-index: 3;
  // 修改：添加clip-path实现遮罩效果
  clip-path: inset(45% 45% 45% 45%); // 初始为中心小区域
  opacity: 0; // 初始透明
  
  // 移除之前的扫描线效果，避免冲突
  // &::after { ... }
}

// 修改Logo展开动画，使其更平滑
@keyframes revealLogo {
  0% {
    clip-path: inset(45% 45% 45% 45%);
    opacity: 0;
    transform: scale(0.95); // 轻微缩小
  }
  100% {
    clip-path: inset(0% 0% 0% 0%);
    opacity: 1;
    transform: scale(1);
  }
}

.rightPanel {
  flex: 0.618;
  display: flex;
  height: 100%;
  background-color: transparent;
  position: relative;
  transform: skewX(-15deg);
  transform-origin: left center;
  overflow: hidden;
}

.column {
  position: absolute;
  height: 100%;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  z-index: 2;
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;

  &:hover {
    // 仅当交互启用时应用悬停效果
    &:not(.nonInteractive) {

      // 默认悬停效果 (排除 worksColumn)
      &:not(.worksColumn) {
        background-color: rgba(178, 242, 187, 0.08);

        &::after,
        &::before {
            content: '';
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            width: 30%;
            height: 2px;
            background: var(--ark-highlight-green);
        }
        &::after { bottom: 0; }
        &::before { top: 0; }

        .verticalText .charItem > div {
          transform: scale(1.15);
          color: var(--ark-highlight-green);
          text-shadow: 0 0 24px var(--ark-highlight-green);
        }
      }
    }
  }

  /* 新增：禁用交互时的样式 */
  &.nonInteractive {
    pointer-events: none;
    cursor: default;
  }
}

@keyframes textPulse {
  0% {
    color: rgba(255, 255, 255, 0.7);
    text-shadow: 0 0 5px rgba(150, 150, 150, 0.3);
  }
  100% {
    color: rgba(255, 255, 255, 1);
    text-shadow: 0 0 8px rgba(200, 200, 200, 0.7);
  }
}

/* 垂直线条样式 - 添加辉光 */
.verticalLine {
  position: absolute;
  top: 0;
  width: 1px;
  height: 100%;
  background-color: var(--ark-primary); // Should be white now
  z-index: 3;
  pointer-events: none;
  opacity: 0; // 初始隐藏
  box-shadow: 0 0 3px rgba(255, 255, 255, 0.3), 0 0 1px rgba(255, 255, 255, 0.5);

  &.animated {
    // 公共设置
    animation-duration: 0.8s; // 出现动画时长
    animation-fill-mode: forwards;
    animation-timing-function: cubic-bezier(0.2, 0.8, 0.2, 1);
    animation-iteration-count: 1; // 只播放一次

    // 交错动画延迟（所有线条共享）
    @for $i from 0 through 5 {
      &:nth-child(#{$i + 1}) {
        animation-delay: #{$i * 0.15}s;
      }
    }
    
    // 第一条到第三条：从上到下
    &:nth-child(-n+3) {
      animation-name: lineAppearTopDown;
      transform-origin: top; 
    }
    
    // 第四条到第六条：从下到上
    &:nth-child(n+4) {
      animation-name: lineAppearBottomUp;
      transform-origin: bottom;
    }
  }

  // --- Pulsing Effect --- 
  &::after {
    content: '';
    position: absolute;
    left: 50%; 
    top: 0; // Start position for background
    width: 3px; // Slightly wider head
    height: 100%; // Cover full line height for background positioning
    // Use gradient for meteor trail effect
    background-image: linear-gradient(
      to bottom, 
      var(--ark-highlight-green) 0%, 
      rgba(178, 242, 187, 0.5) 15%, // Shorten bright head
      transparent 40% // Shorten tail fade out point (Original: 60%)
    );
    background-size: 100% 200%; // Slightly reduce background height (Original: 250%)
    background-repeat: no-repeat;
    background-position: 0% -100%; // Adjust starting position (Original: -150%)
    opacity: 0; 
    transform: translateX(-50%); 
    transform-origin: center center; // Set transform origin for scaling
    // Keep a subtle glow
    filter: drop-shadow(0 0 5px var(--ark-highlight-green));
  }

  // Apply NORMAL (Top->Bottom) animation
  &.pulsing::after {
    // Reset transform just in case (if element could alternate between pulse types)
    transform: translateX(-50%) scaleY(1);
    animation: pulseMeteor 2s ease-out forwards; // New animation name
  }
  
  // Apply REVERSE (Bottom->Top) animation
  &.pulsingReverse::after {
    // Flip the element vertically to reverse the gradient direction visually
    transform: translateX(-50%) scaleY(-1);
    animation: pulseMeteorReverse 2s ease-out forwards; // New animation name
  }
}

// 从上到下动画
@keyframes lineAppearTopDown {
  0% {
    opacity: 0;
    transform: scaleY(0);
  }
  100% {
    opacity: 0.5; // 保持浅色
    transform: scaleY(1);
  }
}

// 新增：从下到上动画
@keyframes lineAppearBottomUp {
  0% {
    opacity: 0;
    transform: scaleY(0);
  }
  100% {
    opacity: 0.5; // 保持浅色
    transform: scaleY(1);
  }
}

.verticalText {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transform: translateY(10px);
  transition: transform 0.3s ease;
  
  .charItem {
    margin: 10px 0;
    transform: skewX(15deg); // 抵消父元素的倾斜
    color: rgba(255, 255, 255, 0.6);
    transition: all 0.1s ease; // Faster transition consistent with VerticalShinyText
    text-shadow: 0 0 3px rgba(0, 150, 255, 0.2);
    // --- 修改: 应用新字体 ---
    font-family: 'ZELDA Free', sans-serif; // 使用新字体，并提供回退
    font-size: 1.1rem; // 可以根据新字体调整大小，这里稍微增大一点
    line-height: 1; // 可能需要调整行高适应新字体
  }
}

// 明日方舟风格HUD元素 - 修改为每个角只有一个对应位置的边框装饰
.hudElement {
  position: fixed;
  font-family: 'Dosis', monospace;
  font-size: 0.7rem;
  color: var(--ark-primary);
  padding: 10px;
  letter-spacing: 1px;
  text-transform: uppercase;
  background-color: transparent;
  border: none;
  z-index: 10;
  opacity: 0;
  transition: opacity 0.8s ease, transform 0.8s ease;
  
  &.visible {
    opacity: 1;
  }
  
  // 通用装饰元素
  &::before {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    border-color: var(--ark-border);
    border-style: solid;
    border-width: 0;
    background-color: transparent;
  }
  
  &.topLeft {
    top: 20px;
    left: 20px;
    transform: translateY(-10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      top: -1px;
      left: -1px;
      border-top-width: 1px;
      border-left-width: 1px;
    }
  }
  
  &.topRight {
    top: 20px;
    right: 20px;
    transform: translateY(-10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      top: -1px;
      right: -1px;
      border-top-width: 1px;
      border-right-width: 1px;
    }
  }
  
  &.bottomLeft {
    bottom: 20px;
    left: 20px;
    transform: translateY(10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      bottom: -1px;
      left: -1px;
      border-bottom-width: 1px;
      border-left-width: 1px;
    }
  }
  
  &.bottomRight {
    bottom: 20px;
    right: 20px;
    transform: translateY(10px);
    opacity: 0;
    
    &.visible {
      transform: translateY(0);
      opacity: 1;
    }
    
    &::before {
      bottom: -1px;
      right: -1px;
      border-bottom-width: 1px;
      border-right-width: 1px;
    }
  }
}

// General section styles
.section {
  position: relative;
  padding: 6rem 10%;
  overflow: hidden;
  
  &:nth-child(odd) {
    background: #0d0d0d;
  }
}

.section_content {
  max-width: 1400px;
  margin: 0 auto;
}

.section_header {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 4rem;
  text-align: center;
  
  h2 {
    font-size: clamp(2rem, 4vw, 3.5rem);
    font-weight: 300;
    margin-bottom: 1.5rem;
    letter-spacing: 1px;
  }
  
  .line {
    width: 80px;
    height: 2px;
    background: rgba(255,255,255,0.5);
    
    &::after {
      content: '';
      display: block;
      width: 40px;
      height: 3px;
      background: white;
      margin: 0 auto;
      margin-top: -2px;
      transform-origin: center;
      animation: lineGrow 1.5s ease-out forwards;
    }
  }
}

// About section
.about_content {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 4rem;
}

.about_text {
  flex: 1 1 500px;
  
  p {
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    line-height: 1.7;
    opacity: 0.8;
  }
}

.about_stats {
  flex: 1 1 300px;
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
}

.stat_item {
  flex: 1 1 150px;
  text-align: center;
  
  h3 {
    font-size: clamp(2rem, 4vw, 3rem);
    margin-bottom: 0.5rem;
    font-weight: 600;
    background: linear-gradient(90deg, #fff, #aaa);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  p {
    font-size: 1rem;
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
}

// Work section
.work_grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.work_item {
  position: relative;
  transition: transform 0.3s ease-out;
  will-change: transform;
  cursor: pointer;
  
  &:hover {
    transform: translateY(-10px);
    
    .work_overlay {
      opacity: 1;
    }
  }
}

.work_image {
  position: relative;
  padding-top: 75%; // 4:3 aspect ratio
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #252525 0%, #151515 100%);
    border: 1px solid rgba(255,255,255,0.1);
  }
}

.work_overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.7);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease-out;
  
  h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    color: #fff;
  }
  
  p {
    font-size: 0.9rem;
    opacity: 0.7;
    margin-bottom: 1.5rem;
    text-align: center;
  }
}

.work_link {
  display: inline-block;
  padding: 0.5rem 1rem;
  border: 1px solid rgba(255,255,255,0.3);
  font-size: 0.9rem;
  text-decoration: none;
  color: #fff;
  transition: all 0.3s;
  
  &:hover {
    background: rgba(255,255,255,0.1);
    border-color: rgba(255,255,255,0.5);
  }
}

// Experience section
.experience_timeline {
  position: relative;
  max-width: 800px;
  margin: 0 auto;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 20px;
    width: 1px;
    height: 100%;
    background: rgba(255,255,255,0.2);
    
    @media (min-width: 768px) {
      left: 50%;
      transform: translateX(-50%);
    }
  }
}

.timeline_item {
  position: relative;
  margin-bottom: 3rem;
  padding-left: 60px;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 15px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #fff;
    border: 1px solid rgba(255,255,255,0.3);
    
    @media (min-width: 768px) {
      left: 50%;
      margin-left: -5px;
    }
  }
  
  @media (min-width: 768px) {
    width: 50%;
    padding-left: 3rem;
    
    &:nth-child(even) {
      margin-left: 50%;
      padding-left: 3rem;
      padding-right: 0;
    }
    
    &:nth-child(odd) {
      padding-right: 3rem;
      padding-left: 0;
      text-align: right;
    }
  }
}

.timeline_year {
  display: inline-block;
  padding: 0.3rem 1rem;
  background: rgba(255,255,255,0.1);
  border-radius: 20px;
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.timeline_content {
  h3 {
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
  }
  
  p {
    opacity: 0.7;
    line-height: 1.6;
  }
}

// Life section
.life_grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  gap: 2rem;
}

.life_item {
  text-align: center;
  transition: transform 0.3s ease-out;
  will-change: transform;
  
  &:hover {
    transform: translateY(-10px);
  }
}

.life_image {
  position: relative;
  padding-top: 100%; // Square aspect ratio
  margin-bottom: 1.5rem;
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, #1a1a1a 0%, #101010 100%);
    border-radius: 50%;
    border: 1px solid rgba(255,255,255,0.1);
  }
}

// Contact section
.contact_content {
  display: flex;
  flex-wrap: wrap;
  gap: 3rem;
}

.contact_info {
  flex: 1 1 400px;
  
  h3 {
    font-size: 1.8rem;
    margin-bottom: 1rem;
    font-weight: 300;
  }
  
  p {
    opacity: 0.8;
    line-height: 1.6;
    margin-bottom: 2rem;
  }
}

.contact_details {
  margin-top: 2rem;
}

.contact_item {
  margin-bottom: 1.5rem;
  
  span {
    display: block;
    opacity: 0.6;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  a {
    color: #fff;
    text-decoration: none;
    border-bottom: 1px solid rgba(255,255,255,0.3);
    padding-bottom: 3px;
    transition: border-color 0.3s;
    
    &:hover {
      border-color: rgba(255,255,255,0.8);
    }
  }
  
  p {
    margin: 0;
  }
}

.social_links_small {
  display: flex;
  gap: 1rem;
  
  a {
    border-bottom: none;
  }
}

.contact_form {
  flex: 1 1 400px;
}

.form_group {
  margin-bottom: 1.5rem;
  
  input, textarea {
    width: 100%;
    padding: 1rem;
    background: rgba(255,255,255,0.05);
    border: 1px solid rgba(255,255,255,0.1);
    color: #fff;
    font-size: 1rem;
    transition: border-color 0.3s;
    
    &:focus {
      outline: none;
      border-color: rgba(255,255,255,0.3);
    }
    
    &::placeholder {
      color: rgba(255,255,255,0.5);
    }
  }
}

// Footer
.footer {
  position: relative;
  padding: 3rem 10%;
  background: #0a0a0a;
  color: #fff;
}

.footer_content {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  max-width: 1400px;
  margin: 0 auto;
  gap: 2rem;
}

.footer_logo {
  flex: 1 1 300px;
  
  h3 {
    font-size: 1.5rem;
    font-weight: 300;
    margin-bottom: 1rem;
    
    span {
      opacity: 0.6;
    }
  }
  
  p {
    opacity: 0.5;
    font-size: 0.9rem;
  }
}

.footer_links {
  flex: 1 1 300px;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  text-align: right;
}

.footer_nav {
  display: flex;
  gap: 1.5rem;
  justify-content: flex-end;
  flex-wrap: wrap;
  
  a {
    color: #fff;
    text-decoration: none;
    font-size: 0.9rem;
    opacity: 0.7;
    transition: opacity 0.3s;
    
    &:hover {
      opacity: 1;
    }
  }
}

.social_links {
  display: flex;
  gap: 1.5rem;
  justify-content: flex-end;
  
  a {
    display: block;
    width: 35px;
    height: 35px;
    border: 1px solid rgba(255,255,255,0.3);
    color: #fff;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.8rem;
    transition: all 0.3s;
    
    &:hover {
      background: rgba(255,255,255,0.1);
      border-color: rgba(255,255,255,0.5);
    }
  }
}

// Animations
@keyframes scrollWheel {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(15px);
  }
}

@keyframes arrowBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0) rotate(45deg);
  }
  40% {
    transform: translateY(-10px) rotate(45deg);
  }
  60% {
    transform: translateY(-5px) rotate(45deg);
  }
}

@keyframes lineGrow {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes leafGrow {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes dropFall {
  0% {
    transform: translateY(-20px) scaleY(0);
    opacity: 0;
  }
  50% {
    transform: translateY(0) scaleY(1);
    opacity: 1;
  }
  100% {
    transform: translateY(20px) scaleY(0.7);
    opacity: 0;
  }
}

@keyframes ripple {
  0% {
    transform: translateX(-50%) scale(0);
    opacity: 1;
  }
  100% {
    transform: translateX(-50%) scale(3);
    opacity: 0;
  }
}

/* 添加闪光动画关键帧 */
@keyframes shine {
  0% {
    background-position: 100%;
  }
  100% {
    background-position: -100%;
  }
}

// Responsive
@media (max-width: 768px) {
  .hero_content {
    flex-direction: column;
    gap: 3rem;
  }
  
  .hero_text {
    padding: 1rem;
    text-align: center;
    
    h1 {
      margin-top: 3rem;
    }
    
    p {
      margin: 0 auto 2rem;
    }
  }
  
  .about_content,
  .contact_content {
    flex-direction: column;
  }
  
  .section {
    padding: 4rem 5%;
  }
  
  .footer_content {
    flex-direction: column;
    text-align: center;
  }
  
  .footer_links,
  .footer_nav,
  .social_links {
    justify-content: center;
  }
}

// --- 全局列和 HUD 样式 --- 

// HUD 覆盖层容器 (在每个列内)
.hudOverlay {
  position: absolute;
  inset: 0;
  pointer-events: none;
  overflow: hidden;

  &::before, // Main canvas for unique hover animations
  &::after { // Scanlines (common animation)
    content: '';
    position: absolute;
    opacity: 0;
    transition: opacity 0.2s ease-out; // Fade out on hover exit
  }

  // 共享的扫描线样式 (保持不变)
  &::after { // Scanlines
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      to bottom,
      transparent,
      transparent 2px,
      rgba(178, 242, 187, 0.2) 2px,
      rgba(178, 242, 187, 0.2) 3px
    );
    background-size: 100% 6px;
    filter: blur(0.3px);
    background-position: 0 0;
    // Ensure scanlines are behind the main animation
    z-index: 1; 
  }

  // 清除旧的 ::before 基础方框样式 
  // 新的基础样式将在具体动画中按需设置 
  &::before { 
    // Basic positioning/transform origin if needed, otherwise animation sets all
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    // Ensure main animation is above scanlines
    z-index: 2; 
  }
}

// 共享的角标样式
.cornerHudTopLeft,
.cornerHudBottomRight {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-color: var(--ark-highlight-green);
    border-style: solid;
    border-width: 0;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s ease-out; // Fade out on hover exit
    filter: drop-shadow(0 0 3px var(--ark-highlight-green));
    z-index: 3; // Above main animation
}

.cornerHudTopLeft { top: 8px; left: 8px; border-top-width: 2px; border-left-width: 2px; }
.cornerHudBottomRight { bottom: 8px; right: 8px; border-bottom-width: 2px; border-right-width: 2px; }

.imageHud {
    position: absolute;
    display: flex;
    align-items: center;
    gap: 6px;
    z-index: 5; // Highest z-index
    opacity: 0;
    transform: translateY(5px); // Initial offset for animation
    pointer-events: none;
    transition: opacity 0.2s ease-out, transform 0.2s ease-out; // Fade out
    // Add white-space nowrap to prevent text wrapping
    white-space: nowrap; 
}

.imageHudSquare {
    display: inline-block;
    width: 8px;
    height: 8px;
    background-color: var(--ark-highlight-green);
    filter: drop-shadow(0 0 2px var(--ark-highlight-green));
}

.imageHudText {
    font-family: 'Consolas', 'Menlo', 'Courier New', monospace;
    font-size: 0.8rem;
    color: var(--ark-highlight-green);
    letter-spacing: 1px;
    font-weight: bold;
    text-shadow: 0 0 3px rgba(178, 242, 187, 0.5);
}

// --- 通用列悬停效果 (保持不变) --- 
.column:hover:not(.nonInteractive) {
  background-color: rgba(178, 242, 187, 0.08); 

  .verticalText .charItem > div {
    transform: scale(1.15);
    color: var(--ark-highlight-green);
    text-shadow: 0 0 8px var(--ark-highlight-green);
  }

  // 触发共享的扫描线动画
  .hudOverlay::after { 
      animation: scanHud 1.5s linear infinite,
                 fadeInScanlines 0.2s ease-out forwards;
  }

  // 触发共享的角标动画
  .cornerHudTopLeft,
  .cornerHudBottomRight {
    animation: fadeInArkCorner 0.4s ease-out 0.2s forwards;
  }

  // 触发共享的图片HUD淡入动画 (位置由具体规则决定)
  .imageHud {
      animation: fadeInImageHud 0.4s ease-out 0.3s forwards;
  }
}

// --- 特定列的悬停效果 (应用新动画) --- 

// Column 0 (WORKS - Revert to Skewed Box)
.column0:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    // Revert to the original skewed box animation
    animation: hudExpandBox0 0.5s cubic-bezier(0.2, 0.9, 0.3, 1.2) forwards;
  }
  .imageHud { // Unique Position
    bottom: 15px;
    left: 15px;
  }
}

// Column 1 (EXPERIENCE - Timeline)
.column1:hover:not(.nonInteractive) {
  .hudOverlay::before {
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 4px; 
    height: 100%;
    background-color: var(--ark-highlight-green);
    opacity: 0;
    transform-origin: bottom center;
    transform: translateX(-50%) scaleY(0);
    animation: buildTowerScale 1.8s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
    filter: drop-shadow(0 0 4px var(--ark-highlight-green));
  }
  .imageHud { top: 15px; right: 15px; }

  // --- Update branch animation delays based on 1.8s duration ---
  
  // 分支 1 (Right) - 50% 处
  .branch1 {
    animation: slideOutRight 0.5s ease-out forwards;
    animation-delay: 0.90s; // Updated: 1.8s * 0.5
  }
  .branch1 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 1.20s; // Updated: 0.90s + 0.3s
  }

  // 分支 2 (Left) - 40% 处
  .branch2 {
    animation: slideOutLeft 0.5s ease-out forwards;
    animation-delay: 0.72s; // Updated: 1.8s * 0.4
  }
   .branch2 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 1.02s; // Updated: 0.72s + 0.3s
  }

  // 分支 3 (Right) - 30% 处
  .branch3 {
    animation: slideOutRight 0.5s ease-out forwards;
    animation-delay: 0.54s; // Updated: 1.8s * 0.3
  }
  .branch3 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 0.84s; // Updated: 0.54s + 0.3s
  }

  // 分支 4 (Left) - 20% 处
  .branch4 {
    animation: slideOutLeft 0.5s ease-out forwards;
    animation-delay: 0.36s; // Updated: 1.8s * 0.2
  }
  .branch4 .branchText {
    animation: fadeInTextDown 0.4s ease-out forwards;
    animation-delay: 0.66s; // Updated: 0.36s + 0.3s
  }
}

// Column 2 (LIFE - Pulse) - Replaced with ECG
.column2:hover:not(.nonInteractive) {
  // Remove base pulse style if any was applied to ::before directly before
  .hudOverlay::before, .hudOverlay::after {
    content: ''; // Ensure pseudo-elements are generated
    position: absolute;
    left: 0;
    width: 100%;
    height: 40px; // Height of the ECG line area
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='50' viewBox='0 0 100 50'%3E%3Cpath d='M0,25 L20,25 L25,10 L35,40 L40,25 L60,25 L65,15 L75,35 L80,25 L100,25' stroke='%23B2F2BB' stroke-width='1.5' fill='none'/%3E%3C/svg%3E");
    background-repeat: repeat-x;
    background-size: 50px 40px; // Reduced width to increase density
    opacity: 0; // Start hidden
    animation-name: ecgScroll, fadeInEcg; // Combine scroll and fade-in
    animation-duration: 1.5s, 0.4s;      // Faster scroll duration (halved) to match density, fade-in same
    animation-timing-function: linear, ease-out; // Timing for scroll, fade-in
    animation-iteration-count: infinite, 1; // Repeat scroll, play fade-in once
    animation-fill-mode: none, forwards;     // Fill mode for fade-in
    animation-delay: 0s, 0.1s; // Delay fade-in slightly
    filter: drop-shadow(0 0 2px var(--ark-highlight-green));
  }

  .hudOverlay::before { // Top line
    top: 50%; 
    transform: translateY(-75px); // Increased upward shift
    background-position-x: 0;
    animation-direction: normal, normal; // Scroll direction normal
  }

  .hudOverlay::after { // Bottom line - reuse scanlines ::after for this
    top: 50%; 
    transform: translateY(35px) scaleY(-1); // Increased downward shift
    background-position-x: 100px; // Start at end for reverse effect
    animation-direction: reverse, normal; // Scroll direction reverse
  }

  .imageHud { // Unique Position (keep from original)
    bottom: 15px;
    right: 15px;
  }
}

// Column 3 (CONTACT - Center Scan + 3 Scattered Shadow Ripples)
.column3:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    // Restore 15deg conic-gradient scan
    animation: radarScan 2.5s linear infinite; 
    width: 70%; 
    height: 70%;
    border-radius: 50%; 
    // Restore 15 degree angle
    background: conic-gradient(from 0deg, 
        rgba(178, 242, 187, 0.5) 0deg 15deg, // 15 degrees beam
        transparent 15.1deg 360deg);
    border: none; 
    opacity: 0.8; 
  }
  
  // Ripples animation and positions remain unchanged
  .ripple1, .ripple2, .ripple3 {
      animation-name: contactRippleExpandShadow;
      animation-duration: 1.8s; 
      animation-iteration-count: infinite;
      animation-timing-function: ease-out;
  }
  .ripple1 { top: 20%; left: 15%; width: 40px; height: 40px; animation-delay: 0s; }
  .ripple2 { top: 65%; left: 70%; width: 60px; height: 60px; animation-delay: 0.4s; }
  .ripple3 { top: 40%; left: 40%; width: 80px; height: 80px; animation-delay: 0.8s; }

  .imageHud { /* position unchanged */ top: 15px; left: 15px; }
}

// Column 4 (ABOUT - Focus + 5 Random HUDs)
.column4:hover:not(.nonInteractive) {
  .hudOverlay::before { 
    animation: aboutFocus 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
  
  // Main centered image HUD - no change to position, but adjust animation name if needed
  > .imageHud { // Use direct child selector '>' to target the main one
    bottom: 50%;
    left: 15px;
    transform: translateY(50%); 
    animation: fadeInImageHudCentered 0.4s ease-out 0.3s forwards; 
  }

  // Style and position the 5 random HUDs on hover
  .randomHud {
    // Apply the standard fade-in animation (slightly delayed)
    animation: fadeInImageHud 0.4s ease-out forwards;
  }

  .randomHud1 { top: 10%; left: 25%; animation-delay: 0.35s; }
  .randomHud2 { top: 30%; left: 80%; animation-delay: 0.45s; transform: scale(0.9); } // Slightly smaller
  .randomHud3 { top: 75%; left: 10%; animation-delay: 0.4s; transform: scale(1.1); } // Slightly larger
  .randomHud4 { top: 85%; left: 60%; animation-delay: 0.5s; }
  .randomHud5 { top: 5%; left: 55%; animation-delay: 0.55s; transform: scale(0.95); } 
}

// --- Keyframes --- 

// 共享动画 (保持不变)
@keyframes scanHud { 0% { background-position: 0 0; } 100% { background-position: 0 6px; } }
@keyframes fadeInScanlines { from { opacity: 0; } to { opacity: 0.8; } }
@keyframes fadeInArkCorner { from { opacity: 0; } to { opacity: 1; } }
@keyframes fadeInImageHud { from { opacity: 0; transform: translateY(5px); } to { opacity: 1; transform: translateY(0); } }
@keyframes fadeInImageHudCentered { from { opacity: 0; transform: translateY(calc(50% + 5px)); } to { opacity: 1; transform: translateY(50%); } }

// --- 独特的悬停动画 --- 

// Restore hudExpandBox0 for WORKS
@keyframes hudExpandBox0 {
  0% { transform: translate(-50%, -50%) scale(0.7) rotate(0deg) skewX(0deg); border-color: transparent; opacity: 0; width: 75%; height: 75%; border-radius: 0; background: transparent; }
  50% { transform: translate(-50%, -50%) scale(1.05) rotate(7deg) skewX(-12deg); border: 1px solid var(--ark-highlight-green); opacity: 1; }
  100% { transform: translate(-50%, -50%) scale(1.05) rotate(7deg) skewX(-12deg); border: 1px solid var(--ark-highlight-green); opacity: 1; width: 75%; height: 75%; border-radius: 0; background: transparent; }
}

// WORKS: Blueprint Draw (using border) - No longer used by default for column 0
@keyframes worksBlueprint {
  0% {
    width: 0%;
    height: 0%;
    border: 2px solid var(--ark-highlight-green);
    border-right-color: transparent;
    border-bottom-color: transparent;
    opacity: 0;
  }
  30% { // Draw top and left border
    width: 70%;
    height: 80%;
    border-right-color: transparent;
    border-bottom-color: transparent;
    opacity: 1;
  }
  60% { // Draw right border
    width: 70%;
    height: 80%;
    border-bottom-color: transparent;
    border-right-color: var(--ark-highlight-green);
    opacity: 1;
  }
  100% { // Draw bottom border
    width: 70%;
    height: 80%;
    border-color: var(--ark-highlight-green);
    opacity: 1;
    box-shadow: 0 0 8px rgba(178, 242, 187, 0.4); // Add glow at the end
  }
}

// CONTACT: Radar Scan (rotating the ::before element) - Ensure this is active
@keyframes radarScan {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

// CONTACT: Single Ripple Expand Animation with Shadow - Remains the same
@keyframes contactRippleExpandShadow {
  0% {
    transform: scale(0.1);
    opacity: 1;
    border: 1px solid rgba(178, 242, 187, 0.9);
    box-shadow: 0 0 0 0px rgba(178, 242, 187, 0.5); 
  }
  100% {
    // Increase scale for wider expansion
    transform: scale(1.8); 
    opacity: 0;
    border: 1px solid rgba(178, 242, 187, 0); 
    // Adjust shadow expansion if needed, maybe slightly larger max size
    box-shadow: 0 0 0 25px rgba(178, 242, 187, 0); 
  }
}

// ABOUT: Focus (corner lines moving inwards)
@keyframes aboutFocus {
  0% {
    width: 60%;
    height: 70%;
    border: 0 solid var(--ark-highlight-green);
    opacity: 0;
  }
  30% { // Corners appear far out
    width: 80%;
    height: 90%;
    border-width: 0px;
    opacity: 1;
    // Simulate corners using box-shadow trick
    box-shadow: inset 10px 10px 0 -8px var(--ark-highlight-green),  /* Top-Left */
                inset -10px 10px 0 -8px var(--ark-highlight-green), /* Top-Right */
                inset 10px -10px 0 -8px var(--ark-highlight-green), /* Bottom-Left */
                inset -10px -10px 0 -8px var(--ark-highlight-green);/* Bottom-Right */
  }
  100% { // Corners move inwards
    width: 60%;
    height: 70%;
    border-width: 0px;
    opacity: 1;
    box-shadow: inset 10px 10px 0 -8px var(--ark-highlight-green),
                inset -10px 10px 0 -8px var(--ark-highlight-green),
                inset 10px -10px 0 -8px var(--ark-highlight-green),
                inset -10px -10px 0 -8px var(--ark-highlight-green),
                0 0 10px rgba(178, 242, 187, 0.4); // Final glow
  }
}

// --- Add base styles for the new ripple elements --- 
.radarRipple {
  position: absolute;
  border-radius: 50%;
  opacity: 0; // Start hidden
  pointer-events: none;
  // Border will be set by the animation
  // Ensure ripples are above the scan line (::before is z-index 2)
  z-index: 3; 
}

// --- Column 默认上下线 --- (保持不变)
// 默认隐藏非 worksColumn 的上下线
.column:not(.worksColumn)::before,
.column:not(.worksColumn)::after {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 30%;
    height: 2px;
    background: var(--ark-highlight-green);
    opacity: 0; // 默认隐藏
    transition: opacity 0.2s ease-out;
}
.column:not(.worksColumn)::before { top: 0; }
.column:not(.worksColumn)::after { bottom: 0; }

// 在 hover 时显示非 worksColumn 的上下线
.column:not(.worksColumn):hover:not(.nonInteractive) {
  &::before,
  &::after {
    opacity: 1;
  }
}

// --- Add base styles for the new random HUD elements --- 
.randomHud {
  // Inherits .imageHud styles, just need initial state if different
  // Already position: absolute from .imageHud
  opacity: 0; // Start hidden
  // Use fixed positions defined in hover rule, override any default positioning from .imageHud if necessary
}

// --- Task List Animation for Column 0 (WORKS) ---

.taskContainer {
  position: absolute;
  top: 80px; // Increased top value to shift down (30px + ~50px for one task cycle)
  left: 25px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  opacity: 0;
  transition: opacity 0.2s ease-out 0.1s; // Slight delay on fade-in/out
  pointer-events: none; // Ensure it doesn't interfere with column click
  z-index: 4; // Above corners, below image HUD maybe
}

.taskItem {
  display: flex;
  align-items: center;
  // Individual item fade-in handled by animation delay
}

.taskSquare {
  width: 8px;
  height: 8px;
  background-color: var(--ark-highlight-green);
  filter: drop-shadow(0 0 2px var(--ark-highlight-green));
  margin-right: 8px;
  flex-shrink: 0; // Prevent shrinking
  opacity: 0; // Initially hidden
}

.taskTextWrapper {
  overflow: hidden;
  position: relative;
  height: 1em; // Match line height
}

.taskText {
  display: inline-block;
  white-space: nowrap;
  color: var(--ark-highlight-green);
  font-family: 'Consolas', 'Menlo', 'Courier New', monospace;
  font-size: 0.8rem;
  letter-spacing: 0.5px;
  text-shadow: 0 0 3px rgba(178, 242, 187, 0.5);
  opacity: 0; // Initially hidden
  // Reset transform from previous attempts if any
  transform: translateX(0); 
  // Use clip-path for reveal effect
  clip-path: inset(0 100% 0 0);
}

.taskLine {
  width: 2px; // Increased thickness
  height: 34px; // Adjusted height (base + overlap)
  background-color: var(--ark-highlight-green);
  opacity: 0.65; 
  margin-left: 3px; // Adjusted alignment for 2px width (center of 8px square is 4px, line center is 1px -> 4-1=3)
  margin-top: -4px; // Pull line up to overlap square above
  transform-origin: top;
  transform: scaleY(0); // Initially hidden
  opacity: 0; // Initially hidden for animation
}

// Hover effect on Column 0 to trigger animations
.column0:hover:not(.nonInteractive) {
  .taskContainer {
    opacity: 1;
  }

  // Animation Timings 
  $square-duration: 0.15s;        
  $text-reveal-duration: 0.25s; 
  $line-duration: 0.2s;         
  $stagger-delay: 0.04s; // Delay between text end and line start, and line end and next square start      
  $initial-delay: 0.1s;       
  $total-tasks: 30;         // Updated to 30

  // Calculate the total time for one full cycle (square + text + line + delays)
  // Cycle: Square -> Text -> Delay -> Line -> Delay -> Next Square
  $time_per_cycle: $square-duration + $text-reveal-duration + $stagger-delay + $line-duration + $stagger-delay;

  // SCSS loop to generate animation rules
  @for $i from 1 through $total-tasks {
    // Calculate start time for the current task
    $task-start: $initial-delay + ($i - 1) * $time_per_cycle;
    
    // Calculate relevant end/start times for this task and its line
    $task-square-end: $task-start + $square-duration; // Text starts right after square
    $task-text-end: $task-square-end + $text-reveal-duration;
    $line-start: $task-text-end + $stagger-delay; // Line starts after text ends + delay

    // Apply animation to task item (odd nth-child)
    $item-selector-index: ($i * 2) - 1;
    .taskItem:nth-child(#{$item-selector-index}) { 
      .taskSquare { animation: revealTaskSquare $square-duration ease-out $task-start forwards; }
      .taskText { animation: revealTaskTextClip $text-reveal-duration ease-out $task-square-end forwards; } // Text animation starts when square ends
    }

    // Apply animation to the line following the task item (even nth-child), if it exists
    @if $i < $total-tasks {
      $line-selector-index: $i * 2;
      .taskLine:nth-child(#{$line-selector-index}) { 
        animation: drawTaskLine $line-duration ease-out $line-start forwards; 
      }
    }
  }
}

// Keyframes for Task List Animation
@keyframes revealTaskSquare {
  from { opacity: 0; transform: scale(0.5); }
  to { opacity: 1; transform: scale(1); }
}

// Changed text reveal to use clip-path
@keyframes revealTaskTextClip {
  from { 
    opacity: 1; // Make visible from start
    clip-path: inset(0 100% 0 0); 
  }
  to { 
    opacity: 1;
    clip-path: inset(0 0 0 0); 
  }
}

@keyframes drawTaskLine {
  from { opacity: 0; transform: scaleY(0); }
  to { opacity: 0.65; transform: scaleY(1); } 
}

// Keyframe for ECG scroll
@keyframes ecgScroll {
  from { background-position-x: 0px; }
  to { background-position-x: -100px; } // Scroll by the new background-size width
}

// Keyframe for ECG fade-in
@keyframes fadeInEcg {
  from { opacity: 0; }
  to { opacity: 0.8; } // Fade to desired opacity
}

// --- Dedicated Scanlines for LIFE column ---
.lifeScanlines {
  position: absolute;
  inset: 0; // Cover the entire overlay area
  background: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 2px,
    rgba(178, 242, 187, 0.2) 2px,
    rgba(178, 242, 187, 0.2) 3px
  );
  background-size: 100% 6px;
  filter: blur(0.3px);
  background-position: 0 0;
  opacity: 0; // Initially hidden
  z-index: 1; // Ensure it's below ECG lines (which use ::before/::after at z-index 2 relative to hudOverlay)
  transition: opacity 0.2s ease-out;

  // Trigger animation on hover of column2
  .column2:hover:not(.nonInteractive) & {
    animation: scanHud 1.5s linear infinite, fadeInScanlines 0.2s ease-out forwards;
    animation-delay: 0.2s, 0.2s; // Delay slightly after ECG fade-in
  }
}

// --- Decorative text in Left Panel ---
.fateTextContainer {
  position: absolute;
  bottom: 17%; // Positioned relative to the bottom edge of the border (100% - 85% = 15% + 2% buffer)
  right: 17%; // Positioned relative to the right edge of the border (100% - 85% = 15% + 2% buffer)
  display: flex;
  flex-direction: column;
  align-items: flex-end; // Align items to the right
  opacity: 0; // Start hidden
  transition: opacity 0.5s ease-out;
  z-index: 5; // Ensure it's above the border/corner elements
  pointer-events: none; // Prevent interaction

  // Fade in after main animations complete
  .leftPanel.animated & {
    // Delay calculation: Sync with HUD start (~2300ms total)
    // HUD starts at 2200ms + 100ms = 2300ms
    // Left panel gets .animated at 200ms + 100ms = 300ms
    // Required delay = 2300ms - 300ms = 2000ms
    transition-delay: 2.0s; // Original: 4.5s
    opacity: 0.7; // Fade in to a slightly transparent state
  }
}

.fateText {
  font-family: 'Dosis', sans-serif;
  font-size: 0.75rem;
  color: var(--ark-text-secondary); // Use a secondary text color
  letter-spacing: 0.5px;
  margin-bottom: 4px; // Space between text and line
  text-align: right;
  // --- 新增: 相对定位用于光标 ---
  position: relative;
}

// --- 新增: 打字机光标样式 ---
.fateTextContainer.typingActive .fateText::after {
  content: '_'; // 使用下划线作为光标
  position: absolute;
  right: -0.1em; // 稍微偏移到文字右侧
  bottom: -0.1em; // 调整垂直位置
  color: var(--ark-text-secondary); // 光标颜色
  animation: blinkCursor 0.8s infinite;
  font-weight: bold;
}

.fateLine {
  width: 270px; // Increased width from 150px
  height: 1px;
  border-bottom: 1px dashed var(--ark-border); // Dashed line using border
  position: relative; // Needed for pseudo-element positioning

  &::before {
    content: '';
    position: absolute;
    width: 1px;      // Slash thickness
    height: 16px;    // Doubled slash length from 8px
    background-color: var(--ark-border);
    left: calc(100% / 6); // Position 1/6th from the left
    bottom: -7px;      // Adjusted vertical position for doubled height
    transform: rotate(-30deg); // Tilt left (adjust angle as needed)
    transform-origin: center bottom; // Rotate around bottom-center
  }

  // Add small rectangle at the end
  &::after {
    content: '';
    position: absolute;
    width: 10px;  // Doubled rectangle width
    height: 6px;  // Doubled rectangle height
    background-color: var(--ark-border);
    right: 0;     // Position at the right end of the line
    bottom: -2.5px; // Align vertically with the dashed line (center of 6px height is 3px, align with 1px line -> move up 2.5px from bottom)
  }
}

// --- 新增: 光标闪烁动画 ---
@keyframes blinkCursor {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

// --- New Keyframe for Meteor Trail (Top->Bottom) --- 
 @keyframes pulseMeteor {
  0% {
    background-position: 50% -100%; // Adjust start position
    opacity: 0;
  }
  20% { 
    opacity: 1; // Fade in quickly
  }
  80% {
    opacity: 0.9; // Hold opacity
  }
  100% {
    background-position: 50% 100%; // End below
    opacity: 0; // Fade out
  } 
} 

// --- New Keyframe for REVERSE Meteor Trail (Bottom->Top) --- 
// MODIFIED: Now animates Top->Bottom like pulseMeteor
@keyframes pulseMeteorReverse {
  0% {
    // Start at top
    background-position: center -200%; // Was: center 100%
    opacity: 0;
  }
  20% { 
    opacity: 1; // Fade in quickly
  }
  80% {
    opacity: 0.9; // Hold opacity
  }
  100% {
    // End at bottom
    background-position: center 100%; // Was: center -200%
    opacity: 0; // Fade out
  }
}

// 添加新的 buildTowerScale 关键帧 (动画 scaleY)
@keyframes buildTowerScale {
  0% {
    opacity: 0;
    transform: translateX(-50%) scaleY(0);
  }
  100% {
    opacity: 1;
    transform: translateX(-50%) scaleY(2); // 保持缩放比例为 2
  }
}

// --- 添加分支动画样式 ---

.branchContainer {
  position: absolute;
  left: 50%; // 水平居中对齐主线条
  transform: translateX(-50%) skewX(-15deg); // 初始居中并应用倾斜
  transform-origin: center center; // 倾斜基点
  opacity: 0; // 修改：容器初始透明，通过动画淡入和滑出
  display: flex;
  flex-direction: column; // 修改：垂直排列
  align-items: center; // 修改：水平居中对齐内部元素
  pointer-events: none;
  z-index: 1; // 低于主线条 (::before 是 z-index 2 隐含?)
}

// --- 修改：定义四个分支的垂直位置 ---
.branch1 { top: 20%; }
.branch2 { top: 40%; }
.branch3 { top: 60%; }
.branch4 { top: 80%; }

// .leftBranch 和 .rightBranch 仅用于区分动画方向，不再设置 top
.leftBranch { justify-content: flex-end; /* 保持 */ }
.rightBranch { justify-content: flex-start; /* 保持 */ }

.branchSquare {
  width: 8px;
  height: 8px;
  background-color: var(--ark-highlight-green);
  filter: drop-shadow(0 0 3px var(--ark-highlight-green));
  // opacity: 0; // 移除：由父容器动画控制
  flex-shrink: 0;
  // 方块不再单独设置 transform，而是通过容器移动
}

.branchText {
  color: var(--ark-highlight-green);
  font-family: 'Consolas', 'Menlo', 'Courier New', monospace;
  font-size: 0.8rem;
  letter-spacing: 0.5px;
  text-shadow: 0 0 3px rgba(178, 242, 187, 0.5);
  opacity: 0; // 修改：明确初始为透明
  white-space: pre-wrap; // 修改：处理换行符
  margin-top: 5px; 
  line-height: 1.1; // 添加：调整行高以获得更紧凑的竖排效果
  // 文字不再单独设置 transform，而是通过容器移动
}

// --- 添加分支动画关键帧 ---

@keyframes slideOutLeft {
  from {
    opacity: 0;
    transform: translateX(0) ; // 保持倾斜
  }
  to {
    opacity: 1;
    transform: translateX(-28px) ; // 修改：向左移动距离减小
  }
}

@keyframes slideOutRight {
  from {
    opacity: 0;
    transform: translateX(0) ; // 保持倾斜
  }
  to {
    opacity: 1;
    transform: translateX(30px) ; // 修改：向右移动距离减小，并略大于左侧绝对值
  }
}

// 新增：文字向下淡入动画
@keyframes fadeInTextDown {
  from {
    opacity: 0;
    transform: translateY(-20px); // 从上方一点开始
  }
  to {
    opacity: 1;
    transform: translateY(0); // 移动到最终位置
  }
}

// --- 新增: 环境参数容器样式 (修改后) ---
.envParamsContainer {
  position: absolute;
  // 定位在左侧面板边框 (15%) 的内侧左下角
  bottom: 17%; // 与 fateTextContainer 的 right/bottom 对称
  left: 17%;   // 与 fateTextContainer 的 right/bottom 对称
  z-index: 10;
  text-align: left;
  max-width: 220px;
  opacity: 0; // 初始隐藏
  transition: opacity 0.5s ease-out;
  // 与 fateTextContainer 使用相同的延迟
  transition-delay: 2.0s; 
  pointer-events: none; // 避免遮挡

  // 移除 .animated 选择器，改为依赖 leftPanel.animated
  .leftPanel.animated & {
    opacity: 0.7; // 与 fateTextContainer 相同的透明度
    transform: none; // 移除 transform
  }
  
  &.typingActive .envParamsText::after {
    content: '_';
    position: absolute;
    // --- 修改: 光标颜色与 fateText 一致 ---
    color: var(--ark-text-secondary);
    animation: blinkCursor 0.8s infinite;
    font-weight: bold;
    // 可能需要微调位置
    right: -0.2em; 
    bottom: -0.1em;
  }
}

.envParamsText {
  // --- 修改: 样式与 fateText 匹配 ---
  font-family: 'Dosis', sans-serif;
  font-size: 0.75rem;
  color: var(--ark-text-secondary);
  letter-spacing: 0.5px;
  // --- 保留 --- 
  white-space: pre; // 保持换行
  line-height: 1.4; // 可以调整行间距
  position: relative; // 为了光标定位
  margin: 0; // 移除默认 margin

  // --- 移除背景和边框 --- 
  background-color: transparent;
  box-shadow: none;
  border: none;
  padding: 0; // 移除内边距
  
  // --- 移除选择和伪元素样式 --- 
  &::selection {
    // 可以保留或移除，如果保留，颜色可能需要调整
    background-color: rgba(var(--ark-secondary-rgb), 0.7);
    color: var(--ark-dark-blue);
  }
  
  // --- 移除 ::before (红色光晕) ---
  /*
  &::before {
    ...
  }
  */
}

// --- 新增: 警告脉冲动画 ---
@keyframes pulseWarning {
  0% {
    opacity: 0.2;
  }
  100% {
    opacity: 0.8;
  }
}